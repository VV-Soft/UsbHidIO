

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Jan 03 01:46:53 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	swtext2,local,class=CONST,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	swtext3,local,class=CONST,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	swtext4,local,class=CONST,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	swtext5,local,class=CONST,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	swtext6,local,class=CONST,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	dabs	1,0x20,32,_BDT
    70                           	dabs	1,0x48,8,_CtrlTrfData
    71                           	dabs	1,0x40,8,_SetupPkt
    72                           	dabs	1,0xA0,64,_ReceivedDataBuffer
    73                           	dabs	1,0x120,64,_ToSendDataBuffer
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Version 1.40
    77                           ; Generated 01/12/2016 GMT
    78                           ; 
    79                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F1459 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0118                     	;# 
   164  0119                     	;# 
   165  011D                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  018E                     	;# 
   169  0191                     	;# 
   170  0191                     	;# 
   171  0192                     	;# 
   172  0193                     	;# 
   173  0193                     	;# 
   174  0194                     	;# 
   175  0195                     	;# 
   176  0196                     	;# 
   177  0197                     	;# 
   178  0199                     	;# 
   179  019A                     	;# 
   180  019B                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  019D                     	;# 
   184  019E                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  0211                     	;# 
   189  0211                     	;# 
   190  0212                     	;# 
   191  0212                     	;# 
   192  0213                     	;# 
   193  0213                     	;# 
   194  0214                     	;# 
   195  0214                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0216                     	;# 
   201  0217                     	;# 
   202  0217                     	;# 
   203  0391                     	;# 
   204  0392                     	;# 
   205  0393                     	;# 
   206  0394                     	;# 
   207  0395                     	;# 
   208  0396                     	;# 
   209  039A                     	;# 
   210  039B                     	;# 
   211  0611                     	;# 
   212  0612                     	;# 
   213  0613                     	;# 
   214  0613                     	;# 
   215  0614                     	;# 
   216  0615                     	;# 
   217  0616                     	;# 
   218  0616                     	;# 
   219  0691                     	;# 
   220  0692                     	;# 
   221  0693                     	;# 
   222  0694                     	;# 
   223  0695                     	;# 
   224  0E8E                     	;# 
   225  0E8F                     	;# 
   226  0E90                     	;# 
   227  0E91                     	;# 
   228  0E92                     	;# 
   229  0E93                     	;# 
   230  0E94                     	;# 
   231  0E94                     	;# 
   232  0E95                     	;# 
   233  0E96                     	;# 
   234  0E97                     	;# 
   235  0E98                     	;# 
   236  0E99                     	;# 
   237  0E9A                     	;# 
   238  0E9B                     	;# 
   239  0E9C                     	;# 
   240  0E9D                     	;# 
   241  0E9E                     	;# 
   242  0E9F                     	;# 
   243  0FE4                     	;# 
   244  0FE5                     	;# 
   245  0FE6                     	;# 
   246  0FE7                     	;# 
   247  0FE8                     	;# 
   248  0FE9                     	;# 
   249  0FEA                     	;# 
   250  0FEB                     	;# 
   251  0FED                     	;# 
   252  0FEE                     	;# 
   253  0FEF                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  0111                     	;# 
   301  0112                     	;# 
   302  0113                     	;# 
   303  0114                     	;# 
   304  0115                     	;# 
   305  0116                     	;# 
   306  0117                     	;# 
   307  0118                     	;# 
   308  0119                     	;# 
   309  011D                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  018E                     	;# 
   313  0191                     	;# 
   314  0191                     	;# 
   315  0192                     	;# 
   316  0193                     	;# 
   317  0193                     	;# 
   318  0194                     	;# 
   319  0195                     	;# 
   320  0196                     	;# 
   321  0197                     	;# 
   322  0199                     	;# 
   323  019A                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019C                     	;# 
   327  019D                     	;# 
   328  019E                     	;# 
   329  019F                     	;# 
   330  020C                     	;# 
   331  020D                     	;# 
   332  0211                     	;# 
   333  0211                     	;# 
   334  0212                     	;# 
   335  0212                     	;# 
   336  0213                     	;# 
   337  0213                     	;# 
   338  0214                     	;# 
   339  0214                     	;# 
   340  0215                     	;# 
   341  0215                     	;# 
   342  0215                     	;# 
   343  0216                     	;# 
   344  0216                     	;# 
   345  0217                     	;# 
   346  0217                     	;# 
   347  0391                     	;# 
   348  0392                     	;# 
   349  0393                     	;# 
   350  0394                     	;# 
   351  0395                     	;# 
   352  0396                     	;# 
   353  039A                     	;# 
   354  039B                     	;# 
   355  0611                     	;# 
   356  0612                     	;# 
   357  0613                     	;# 
   358  0613                     	;# 
   359  0614                     	;# 
   360  0615                     	;# 
   361  0616                     	;# 
   362  0616                     	;# 
   363  0691                     	;# 
   364  0692                     	;# 
   365  0693                     	;# 
   366  0694                     	;# 
   367  0695                     	;# 
   368  0E8E                     	;# 
   369  0E8F                     	;# 
   370  0E90                     	;# 
   371  0E91                     	;# 
   372  0E92                     	;# 
   373  0E93                     	;# 
   374  0E94                     	;# 
   375  0E94                     	;# 
   376  0E95                     	;# 
   377  0E96                     	;# 
   378  0E97                     	;# 
   379  0E98                     	;# 
   380  0E99                     	;# 
   381  0E9A                     	;# 
   382  0E9B                     	;# 
   383  0E9C                     	;# 
   384  0E9D                     	;# 
   385  0E9E                     	;# 
   386  0E9F                     	;# 
   387  0FE4                     	;# 
   388  0FE5                     	;# 
   389  0FE6                     	;# 
   390  0FE7                     	;# 
   391  0FE8                     	;# 
   392  0FE9                     	;# 
   393  0FEA                     	;# 
   394  0FEB                     	;# 
   395  0FED                     	;# 
   396  0FEE                     	;# 
   397  0FEF                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000D                     	;# 
   412  000E                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  010E                     	;# 
   444  0111                     	;# 
   445  0112                     	;# 
   446  0113                     	;# 
   447  0114                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011D                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  018E                     	;# 
   457  0191                     	;# 
   458  0191                     	;# 
   459  0192                     	;# 
   460  0193                     	;# 
   461  0193                     	;# 
   462  0194                     	;# 
   463  0195                     	;# 
   464  0196                     	;# 
   465  0197                     	;# 
   466  0199                     	;# 
   467  019A                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019C                     	;# 
   471  019D                     	;# 
   472  019E                     	;# 
   473  019F                     	;# 
   474  020C                     	;# 
   475  020D                     	;# 
   476  0211                     	;# 
   477  0211                     	;# 
   478  0212                     	;# 
   479  0212                     	;# 
   480  0213                     	;# 
   481  0213                     	;# 
   482  0214                     	;# 
   483  0214                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  0391                     	;# 
   492  0392                     	;# 
   493  0393                     	;# 
   494  0394                     	;# 
   495  0395                     	;# 
   496  0396                     	;# 
   497  039A                     	;# 
   498  039B                     	;# 
   499  0611                     	;# 
   500  0612                     	;# 
   501  0613                     	;# 
   502  0613                     	;# 
   503  0614                     	;# 
   504  0615                     	;# 
   505  0616                     	;# 
   506  0616                     	;# 
   507  0691                     	;# 
   508  0692                     	;# 
   509  0693                     	;# 
   510  0694                     	;# 
   511  0695                     	;# 
   512  0E8E                     	;# 
   513  0E8F                     	;# 
   514  0E90                     	;# 
   515  0E91                     	;# 
   516  0E92                     	;# 
   517  0E93                     	;# 
   518  0E94                     	;# 
   519  0E94                     	;# 
   520  0E95                     	;# 
   521  0E96                     	;# 
   522  0E97                     	;# 
   523  0E98                     	;# 
   524  0E99                     	;# 
   525  0E9A                     	;# 
   526  0E9B                     	;# 
   527  0E9C                     	;# 
   528  0E9D                     	;# 
   529  0E9E                     	;# 
   530  0E9F                     	;# 
   531  0FE4                     	;# 
   532  0FE5                     	;# 
   533  0FE6                     	;# 
   534  0FE7                     	;# 
   535  0FE8                     	;# 
   536  0FE9                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEF                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000D                     	;# 
   556  000E                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0015                     	;# 
   560  0016                     	;# 
   561  0016                     	;# 
   562  0017                     	;# 
   563  0018                     	;# 
   564  0019                     	;# 
   565  001A                     	;# 
   566  001B                     	;# 
   567  001C                     	;# 
   568  008C                     	;# 
   569  008D                     	;# 
   570  008E                     	;# 
   571  0091                     	;# 
   572  0092                     	;# 
   573  0095                     	;# 
   574  0096                     	;# 
   575  0097                     	;# 
   576  0098                     	;# 
   577  0099                     	;# 
   578  009A                     	;# 
   579  009B                     	;# 
   580  009B                     	;# 
   581  009C                     	;# 
   582  009D                     	;# 
   583  009E                     	;# 
   584  009F                     	;# 
   585  010C                     	;# 
   586  010D                     	;# 
   587  010E                     	;# 
   588  0111                     	;# 
   589  0112                     	;# 
   590  0113                     	;# 
   591  0114                     	;# 
   592  0115                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  0118                     	;# 
   596  0119                     	;# 
   597  011D                     	;# 
   598  018C                     	;# 
   599  018D                     	;# 
   600  018E                     	;# 
   601  0191                     	;# 
   602  0191                     	;# 
   603  0192                     	;# 
   604  0193                     	;# 
   605  0193                     	;# 
   606  0194                     	;# 
   607  0195                     	;# 
   608  0196                     	;# 
   609  0197                     	;# 
   610  0199                     	;# 
   611  019A                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019C                     	;# 
   615  019D                     	;# 
   616  019E                     	;# 
   617  019F                     	;# 
   618  020C                     	;# 
   619  020D                     	;# 
   620  0211                     	;# 
   621  0211                     	;# 
   622  0212                     	;# 
   623  0212                     	;# 
   624  0213                     	;# 
   625  0213                     	;# 
   626  0214                     	;# 
   627  0214                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0215                     	;# 
   631  0216                     	;# 
   632  0216                     	;# 
   633  0217                     	;# 
   634  0217                     	;# 
   635  0391                     	;# 
   636  0392                     	;# 
   637  0393                     	;# 
   638  0394                     	;# 
   639  0395                     	;# 
   640  0396                     	;# 
   641  039A                     	;# 
   642  039B                     	;# 
   643  0611                     	;# 
   644  0612                     	;# 
   645  0613                     	;# 
   646  0613                     	;# 
   647  0614                     	;# 
   648  0615                     	;# 
   649  0616                     	;# 
   650  0616                     	;# 
   651  0691                     	;# 
   652  0692                     	;# 
   653  0693                     	;# 
   654  0694                     	;# 
   655  0695                     	;# 
   656  0E8E                     	;# 
   657  0E8F                     	;# 
   658  0E90                     	;# 
   659  0E91                     	;# 
   660  0E92                     	;# 
   661  0E93                     	;# 
   662  0E94                     	;# 
   663  0E94                     	;# 
   664  0E95                     	;# 
   665  0E96                     	;# 
   666  0E97                     	;# 
   667  0E98                     	;# 
   668  0E99                     	;# 
   669  0E9A                     	;# 
   670  0E9B                     	;# 
   671  0E9C                     	;# 
   672  0E9D                     	;# 
   673  0E9E                     	;# 
   674  0E9F                     	;# 
   675  0FE4                     	;# 
   676  0FE5                     	;# 
   677  0FE6                     	;# 
   678  0FE7                     	;# 
   679  0FE8                     	;# 
   680  0FE9                     	;# 
   681  0FEA                     	;# 
   682  0FEB                     	;# 
   683  0FED                     	;# 
   684  0FEE                     	;# 
   685  0FEF                     	;# 
   686  0000                     	;# 
   687  0001                     	;# 
   688  0002                     	;# 
   689  0003                     	;# 
   690  0004                     	;# 
   691  0005                     	;# 
   692  0006                     	;# 
   693  0007                     	;# 
   694  0008                     	;# 
   695  0009                     	;# 
   696  000A                     	;# 
   697  000B                     	;# 
   698  000C                     	;# 
   699  000D                     	;# 
   700  000E                     	;# 
   701  0011                     	;# 
   702  0012                     	;# 
   703  0015                     	;# 
   704  0016                     	;# 
   705  0016                     	;# 
   706  0017                     	;# 
   707  0018                     	;# 
   708  0019                     	;# 
   709  001A                     	;# 
   710  001B                     	;# 
   711  001C                     	;# 
   712  008C                     	;# 
   713  008D                     	;# 
   714  008E                     	;# 
   715  0091                     	;# 
   716  0092                     	;# 
   717  0095                     	;# 
   718  0096                     	;# 
   719  0097                     	;# 
   720  0098                     	;# 
   721  0099                     	;# 
   722  009A                     	;# 
   723  009B                     	;# 
   724  009B                     	;# 
   725  009C                     	;# 
   726  009D                     	;# 
   727  009E                     	;# 
   728  009F                     	;# 
   729  010C                     	;# 
   730  010D                     	;# 
   731  010E                     	;# 
   732  0111                     	;# 
   733  0112                     	;# 
   734  0113                     	;# 
   735  0114                     	;# 
   736  0115                     	;# 
   737  0116                     	;# 
   738  0117                     	;# 
   739  0118                     	;# 
   740  0119                     	;# 
   741  011D                     	;# 
   742  018C                     	;# 
   743  018D                     	;# 
   744  018E                     	;# 
   745  0191                     	;# 
   746  0191                     	;# 
   747  0192                     	;# 
   748  0193                     	;# 
   749  0193                     	;# 
   750  0194                     	;# 
   751  0195                     	;# 
   752  0196                     	;# 
   753  0197                     	;# 
   754  0199                     	;# 
   755  019A                     	;# 
   756  019B                     	;# 
   757  019B                     	;# 
   758  019C                     	;# 
   759  019D                     	;# 
   760  019E                     	;# 
   761  019F                     	;# 
   762  020C                     	;# 
   763  020D                     	;# 
   764  0211                     	;# 
   765  0211                     	;# 
   766  0212                     	;# 
   767  0212                     	;# 
   768  0213                     	;# 
   769  0213                     	;# 
   770  0214                     	;# 
   771  0214                     	;# 
   772  0215                     	;# 
   773  0215                     	;# 
   774  0215                     	;# 
   775  0216                     	;# 
   776  0216                     	;# 
   777  0217                     	;# 
   778  0217                     	;# 
   779  0391                     	;# 
   780  0392                     	;# 
   781  0393                     	;# 
   782  0394                     	;# 
   783  0395                     	;# 
   784  0396                     	;# 
   785  039A                     	;# 
   786  039B                     	;# 
   787  0611                     	;# 
   788  0612                     	;# 
   789  0613                     	;# 
   790  0613                     	;# 
   791  0614                     	;# 
   792  0615                     	;# 
   793  0616                     	;# 
   794  0616                     	;# 
   795  0691                     	;# 
   796  0692                     	;# 
   797  0693                     	;# 
   798  0694                     	;# 
   799  0695                     	;# 
   800  0E8E                     	;# 
   801  0E8F                     	;# 
   802  0E90                     	;# 
   803  0E91                     	;# 
   804  0E92                     	;# 
   805  0E93                     	;# 
   806  0E94                     	;# 
   807  0E94                     	;# 
   808  0E95                     	;# 
   809  0E96                     	;# 
   810  0E97                     	;# 
   811  0E98                     	;# 
   812  0E99                     	;# 
   813  0E9A                     	;# 
   814  0E9B                     	;# 
   815  0E9C                     	;# 
   816  0E9D                     	;# 
   817  0E9E                     	;# 
   818  0E9F                     	;# 
   819  0FE4                     	;# 
   820  0FE5                     	;# 
   821  0FE6                     	;# 
   822  0FE7                     	;# 
   823  0FE8                     	;# 
   824  0FE9                     	;# 
   825  0FEA                     	;# 
   826  0FEB                     	;# 
   827  0FED                     	;# 
   828  0FEE                     	;# 
   829  0FEF                     	;# 
   830  0000                     	;# 
   831  0001                     	;# 
   832  0002                     	;# 
   833  0003                     	;# 
   834  0004                     	;# 
   835  0005                     	;# 
   836  0006                     	;# 
   837  0007                     	;# 
   838  0008                     	;# 
   839  0009                     	;# 
   840  000A                     	;# 
   841  000B                     	;# 
   842  000C                     	;# 
   843  000D                     	;# 
   844  000E                     	;# 
   845  0011                     	;# 
   846  0012                     	;# 
   847  0015                     	;# 
   848  0016                     	;# 
   849  0016                     	;# 
   850  0017                     	;# 
   851  0018                     	;# 
   852  0019                     	;# 
   853  001A                     	;# 
   854  001B                     	;# 
   855  001C                     	;# 
   856  008C                     	;# 
   857  008D                     	;# 
   858  008E                     	;# 
   859  0091                     	;# 
   860  0092                     	;# 
   861  0095                     	;# 
   862  0096                     	;# 
   863  0097                     	;# 
   864  0098                     	;# 
   865  0099                     	;# 
   866  009A                     	;# 
   867  009B                     	;# 
   868  009B                     	;# 
   869  009C                     	;# 
   870  009D                     	;# 
   871  009E                     	;# 
   872  009F                     	;# 
   873  010C                     	;# 
   874  010D                     	;# 
   875  010E                     	;# 
   876  0111                     	;# 
   877  0112                     	;# 
   878  0113                     	;# 
   879  0114                     	;# 
   880  0115                     	;# 
   881  0116                     	;# 
   882  0117                     	;# 
   883  0118                     	;# 
   884  0119                     	;# 
   885  011D                     	;# 
   886  018C                     	;# 
   887  018D                     	;# 
   888  018E                     	;# 
   889  0191                     	;# 
   890  0191                     	;# 
   891  0192                     	;# 
   892  0193                     	;# 
   893  0193                     	;# 
   894  0194                     	;# 
   895  0195                     	;# 
   896  0196                     	;# 
   897  0197                     	;# 
   898  0199                     	;# 
   899  019A                     	;# 
   900  019B                     	;# 
   901  019B                     	;# 
   902  019C                     	;# 
   903  019D                     	;# 
   904  019E                     	;# 
   905  019F                     	;# 
   906  020C                     	;# 
   907  020D                     	;# 
   908  0211                     	;# 
   909  0211                     	;# 
   910  0212                     	;# 
   911  0212                     	;# 
   912  0213                     	;# 
   913  0213                     	;# 
   914  0214                     	;# 
   915  0214                     	;# 
   916  0215                     	;# 
   917  0215                     	;# 
   918  0215                     	;# 
   919  0216                     	;# 
   920  0216                     	;# 
   921  0217                     	;# 
   922  0217                     	;# 
   923  0391                     	;# 
   924  0392                     	;# 
   925  0393                     	;# 
   926  0394                     	;# 
   927  0395                     	;# 
   928  0396                     	;# 
   929  039A                     	;# 
   930  039B                     	;# 
   931  0611                     	;# 
   932  0612                     	;# 
   933  0613                     	;# 
   934  0613                     	;# 
   935  0614                     	;# 
   936  0615                     	;# 
   937  0616                     	;# 
   938  0616                     	;# 
   939  0691                     	;# 
   940  0692                     	;# 
   941  0693                     	;# 
   942  0694                     	;# 
   943  0695                     	;# 
   944  0E8E                     	;# 
   945  0E8F                     	;# 
   946  0E90                     	;# 
   947  0E91                     	;# 
   948  0E92                     	;# 
   949  0E93                     	;# 
   950  0E94                     	;# 
   951  0E94                     	;# 
   952  0E95                     	;# 
   953  0E96                     	;# 
   954  0E97                     	;# 
   955  0E98                     	;# 
   956  0E99                     	;# 
   957  0E9A                     	;# 
   958  0E9B                     	;# 
   959  0E9C                     	;# 
   960  0E9D                     	;# 
   961  0E9E                     	;# 
   962  0E9F                     	;# 
   963  0FE4                     	;# 
   964  0FE5                     	;# 
   965  0FE6                     	;# 
   966  0FE7                     	;# 
   967  0FE8                     	;# 
   968  0FE9                     	;# 
   969  0FEA                     	;# 
   970  0FEB                     	;# 
   971  0FED                     	;# 
   972  0FEE                     	;# 
   973  0FEF                     	;# 
   974  0000                     	;# 
   975  0001                     	;# 
   976  0002                     	;# 
   977  0003                     	;# 
   978  0004                     	;# 
   979  0005                     	;# 
   980  0006                     	;# 
   981  0007                     	;# 
   982  0008                     	;# 
   983  0009                     	;# 
   984  000A                     	;# 
   985  000B                     	;# 
   986  000C                     	;# 
   987  000D                     	;# 
   988  000E                     	;# 
   989  0011                     	;# 
   990  0012                     	;# 
   991  0015                     	;# 
   992  0016                     	;# 
   993  0016                     	;# 
   994  0017                     	;# 
   995  0018                     	;# 
   996  0019                     	;# 
   997  001A                     	;# 
   998  001B                     	;# 
   999  001C                     	;# 
  1000  008C                     	;# 
  1001  008D                     	;# 
  1002  008E                     	;# 
  1003  0091                     	;# 
  1004  0092                     	;# 
  1005  0095                     	;# 
  1006  0096                     	;# 
  1007  0097                     	;# 
  1008  0098                     	;# 
  1009  0099                     	;# 
  1010  009A                     	;# 
  1011  009B                     	;# 
  1012  009B                     	;# 
  1013  009C                     	;# 
  1014  009D                     	;# 
  1015  009E                     	;# 
  1016  009F                     	;# 
  1017  010C                     	;# 
  1018  010D                     	;# 
  1019  010E                     	;# 
  1020  0111                     	;# 
  1021  0112                     	;# 
  1022  0113                     	;# 
  1023  0114                     	;# 
  1024  0115                     	;# 
  1025  0116                     	;# 
  1026  0117                     	;# 
  1027  0118                     	;# 
  1028  0119                     	;# 
  1029  011D                     	;# 
  1030  018C                     	;# 
  1031  018D                     	;# 
  1032  018E                     	;# 
  1033  0191                     	;# 
  1034  0191                     	;# 
  1035  0192                     	;# 
  1036  0193                     	;# 
  1037  0193                     	;# 
  1038  0194                     	;# 
  1039  0195                     	;# 
  1040  0196                     	;# 
  1041  0197                     	;# 
  1042  0199                     	;# 
  1043  019A                     	;# 
  1044  019B                     	;# 
  1045  019B                     	;# 
  1046  019C                     	;# 
  1047  019D                     	;# 
  1048  019E                     	;# 
  1049  019F                     	;# 
  1050  020C                     	;# 
  1051  020D                     	;# 
  1052  0211                     	;# 
  1053  0211                     	;# 
  1054  0212                     	;# 
  1055  0212                     	;# 
  1056  0213                     	;# 
  1057  0213                     	;# 
  1058  0214                     	;# 
  1059  0214                     	;# 
  1060  0215                     	;# 
  1061  0215                     	;# 
  1062  0215                     	;# 
  1063  0216                     	;# 
  1064  0216                     	;# 
  1065  0217                     	;# 
  1066  0217                     	;# 
  1067  0391                     	;# 
  1068  0392                     	;# 
  1069  0393                     	;# 
  1070  0394                     	;# 
  1071  0395                     	;# 
  1072  0396                     	;# 
  1073  039A                     	;# 
  1074  039B                     	;# 
  1075  0611                     	;# 
  1076  0612                     	;# 
  1077  0613                     	;# 
  1078  0613                     	;# 
  1079  0614                     	;# 
  1080  0615                     	;# 
  1081  0616                     	;# 
  1082  0616                     	;# 
  1083  0691                     	;# 
  1084  0692                     	;# 
  1085  0693                     	;# 
  1086  0694                     	;# 
  1087  0695                     	;# 
  1088  0E8E                     	;# 
  1089  0E8F                     	;# 
  1090  0E90                     	;# 
  1091  0E91                     	;# 
  1092  0E92                     	;# 
  1093  0E93                     	;# 
  1094  0E94                     	;# 
  1095  0E94                     	;# 
  1096  0E95                     	;# 
  1097  0E96                     	;# 
  1098  0E97                     	;# 
  1099  0E98                     	;# 
  1100  0E99                     	;# 
  1101  0E9A                     	;# 
  1102  0E9B                     	;# 
  1103  0E9C                     	;# 
  1104  0E9D                     	;# 
  1105  0E9E                     	;# 
  1106  0E9F                     	;# 
  1107  0FE4                     	;# 
  1108  0FE5                     	;# 
  1109  0FE6                     	;# 
  1110  0FE7                     	;# 
  1111  0FE8                     	;# 
  1112  0FE9                     	;# 
  1113  0FEA                     	;# 
  1114  0FEB                     	;# 
  1115  0FED                     	;# 
  1116  0FEE                     	;# 
  1117  0FEF                     	;# 
  1118  0000                     	;# 
  1119  0001                     	;# 
  1120  0002                     	;# 
  1121  0003                     	;# 
  1122  0004                     	;# 
  1123  0005                     	;# 
  1124  0006                     	;# 
  1125  0007                     	;# 
  1126  0008                     	;# 
  1127  0009                     	;# 
  1128  000A                     	;# 
  1129  000B                     	;# 
  1130  000C                     	;# 
  1131  000D                     	;# 
  1132  000E                     	;# 
  1133  0011                     	;# 
  1134  0012                     	;# 
  1135  0015                     	;# 
  1136  0016                     	;# 
  1137  0016                     	;# 
  1138  0017                     	;# 
  1139  0018                     	;# 
  1140  0019                     	;# 
  1141  001A                     	;# 
  1142  001B                     	;# 
  1143  001C                     	;# 
  1144  008C                     	;# 
  1145  008D                     	;# 
  1146  008E                     	;# 
  1147  0091                     	;# 
  1148  0092                     	;# 
  1149  0095                     	;# 
  1150  0096                     	;# 
  1151  0097                     	;# 
  1152  0098                     	;# 
  1153  0099                     	;# 
  1154  009A                     	;# 
  1155  009B                     	;# 
  1156  009B                     	;# 
  1157  009C                     	;# 
  1158  009D                     	;# 
  1159  009E                     	;# 
  1160  009F                     	;# 
  1161  010C                     	;# 
  1162  010D                     	;# 
  1163  010E                     	;# 
  1164  0111                     	;# 
  1165  0112                     	;# 
  1166  0113                     	;# 
  1167  0114                     	;# 
  1168  0115                     	;# 
  1169  0116                     	;# 
  1170  0117                     	;# 
  1171  0118                     	;# 
  1172  0119                     	;# 
  1173  011D                     	;# 
  1174  018C                     	;# 
  1175  018D                     	;# 
  1176  018E                     	;# 
  1177  0191                     	;# 
  1178  0191                     	;# 
  1179  0192                     	;# 
  1180  0193                     	;# 
  1181  0193                     	;# 
  1182  0194                     	;# 
  1183  0195                     	;# 
  1184  0196                     	;# 
  1185  0197                     	;# 
  1186  0199                     	;# 
  1187  019A                     	;# 
  1188  019B                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  019D                     	;# 
  1192  019E                     	;# 
  1193  019F                     	;# 
  1194  020C                     	;# 
  1195  020D                     	;# 
  1196  0211                     	;# 
  1197  0211                     	;# 
  1198  0212                     	;# 
  1199  0212                     	;# 
  1200  0213                     	;# 
  1201  0213                     	;# 
  1202  0214                     	;# 
  1203  0214                     	;# 
  1204  0215                     	;# 
  1205  0215                     	;# 
  1206  0215                     	;# 
  1207  0216                     	;# 
  1208  0216                     	;# 
  1209  0217                     	;# 
  1210  0217                     	;# 
  1211  0391                     	;# 
  1212  0392                     	;# 
  1213  0393                     	;# 
  1214  0394                     	;# 
  1215  0395                     	;# 
  1216  0396                     	;# 
  1217  039A                     	;# 
  1218  039B                     	;# 
  1219  0611                     	;# 
  1220  0612                     	;# 
  1221  0613                     	;# 
  1222  0613                     	;# 
  1223  0614                     	;# 
  1224  0615                     	;# 
  1225  0616                     	;# 
  1226  0616                     	;# 
  1227  0691                     	;# 
  1228  0692                     	;# 
  1229  0693                     	;# 
  1230  0694                     	;# 
  1231  0695                     	;# 
  1232  0E8E                     	;# 
  1233  0E8F                     	;# 
  1234  0E90                     	;# 
  1235  0E91                     	;# 
  1236  0E92                     	;# 
  1237  0E93                     	;# 
  1238  0E94                     	;# 
  1239  0E94                     	;# 
  1240  0E95                     	;# 
  1241  0E96                     	;# 
  1242  0E97                     	;# 
  1243  0E98                     	;# 
  1244  0E99                     	;# 
  1245  0E9A                     	;# 
  1246  0E9B                     	;# 
  1247  0E9C                     	;# 
  1248  0E9D                     	;# 
  1249  0E9E                     	;# 
  1250  0E9F                     	;# 
  1251  0FE4                     	;# 
  1252  0FE5                     	;# 
  1253  0FE6                     	;# 
  1254  0FE7                     	;# 
  1255  0FE8                     	;# 
  1256  0FE9                     	;# 
  1257  0FEA                     	;# 
  1258  0FEB                     	;# 
  1259  0FED                     	;# 
  1260  0FEE                     	;# 
  1261  0FEF                     	;# 
  1262  0000                     	;# 
  1263  0001                     	;# 
  1264  0002                     	;# 
  1265  0003                     	;# 
  1266  0004                     	;# 
  1267  0005                     	;# 
  1268  0006                     	;# 
  1269  0007                     	;# 
  1270  0008                     	;# 
  1271  0009                     	;# 
  1272  000A                     	;# 
  1273  000B                     	;# 
  1274  000C                     	;# 
  1275  000D                     	;# 
  1276  000E                     	;# 
  1277  0011                     	;# 
  1278  0012                     	;# 
  1279  0015                     	;# 
  1280  0016                     	;# 
  1281  0016                     	;# 
  1282  0017                     	;# 
  1283  0018                     	;# 
  1284  0019                     	;# 
  1285  001A                     	;# 
  1286  001B                     	;# 
  1287  001C                     	;# 
  1288  008C                     	;# 
  1289  008D                     	;# 
  1290  008E                     	;# 
  1291  0091                     	;# 
  1292  0092                     	;# 
  1293  0095                     	;# 
  1294  0096                     	;# 
  1295  0097                     	;# 
  1296  0098                     	;# 
  1297  0099                     	;# 
  1298  009A                     	;# 
  1299  009B                     	;# 
  1300  009B                     	;# 
  1301  009C                     	;# 
  1302  009D                     	;# 
  1303  009E                     	;# 
  1304  009F                     	;# 
  1305  010C                     	;# 
  1306  010D                     	;# 
  1307  010E                     	;# 
  1308  0111                     	;# 
  1309  0112                     	;# 
  1310  0113                     	;# 
  1311  0114                     	;# 
  1312  0115                     	;# 
  1313  0116                     	;# 
  1314  0117                     	;# 
  1315  0118                     	;# 
  1316  0119                     	;# 
  1317  011D                     	;# 
  1318  018C                     	;# 
  1319  018D                     	;# 
  1320  018E                     	;# 
  1321  0191                     	;# 
  1322  0191                     	;# 
  1323  0192                     	;# 
  1324  0193                     	;# 
  1325  0193                     	;# 
  1326  0194                     	;# 
  1327  0195                     	;# 
  1328  0196                     	;# 
  1329  0197                     	;# 
  1330  0199                     	;# 
  1331  019A                     	;# 
  1332  019B                     	;# 
  1333  019B                     	;# 
  1334  019C                     	;# 
  1335  019D                     	;# 
  1336  019E                     	;# 
  1337  019F                     	;# 
  1338  020C                     	;# 
  1339  020D                     	;# 
  1340  0211                     	;# 
  1341  0211                     	;# 
  1342  0212                     	;# 
  1343  0212                     	;# 
  1344  0213                     	;# 
  1345  0213                     	;# 
  1346  0214                     	;# 
  1347  0214                     	;# 
  1348  0215                     	;# 
  1349  0215                     	;# 
  1350  0215                     	;# 
  1351  0216                     	;# 
  1352  0216                     	;# 
  1353  0217                     	;# 
  1354  0217                     	;# 
  1355  0391                     	;# 
  1356  0392                     	;# 
  1357  0393                     	;# 
  1358  0394                     	;# 
  1359  0395                     	;# 
  1360  0396                     	;# 
  1361  039A                     	;# 
  1362  039B                     	;# 
  1363  0611                     	;# 
  1364  0612                     	;# 
  1365  0613                     	;# 
  1366  0613                     	;# 
  1367  0614                     	;# 
  1368  0615                     	;# 
  1369  0616                     	;# 
  1370  0616                     	;# 
  1371  0691                     	;# 
  1372  0692                     	;# 
  1373  0693                     	;# 
  1374  0694                     	;# 
  1375  0695                     	;# 
  1376  0E8E                     	;# 
  1377  0E8F                     	;# 
  1378  0E90                     	;# 
  1379  0E91                     	;# 
  1380  0E92                     	;# 
  1381  0E93                     	;# 
  1382  0E94                     	;# 
  1383  0E94                     	;# 
  1384  0E95                     	;# 
  1385  0E96                     	;# 
  1386  0E97                     	;# 
  1387  0E98                     	;# 
  1388  0E99                     	;# 
  1389  0E9A                     	;# 
  1390  0E9B                     	;# 
  1391  0E9C                     	;# 
  1392  0E9D                     	;# 
  1393  0E9E                     	;# 
  1394  0E9F                     	;# 
  1395  0FE4                     	;# 
  1396  0FE5                     	;# 
  1397  0FE6                     	;# 
  1398  0FE7                     	;# 
  1399  0FE8                     	;# 
  1400  0FE9                     	;# 
  1401  0FEA                     	;# 
  1402  0FEB                     	;# 
  1403  0FED                     	;# 
  1404  0FEE                     	;# 
  1405  0FEF                     	;# 
  1406  0000                     	;# 
  1407  0001                     	;# 
  1408  0002                     	;# 
  1409  0003                     	;# 
  1410  0004                     	;# 
  1411  0005                     	;# 
  1412  0006                     	;# 
  1413  0007                     	;# 
  1414  0008                     	;# 
  1415  0009                     	;# 
  1416  000A                     	;# 
  1417  000B                     	;# 
  1418  000C                     	;# 
  1419  000D                     	;# 
  1420  000E                     	;# 
  1421  0011                     	;# 
  1422  0012                     	;# 
  1423  0015                     	;# 
  1424  0016                     	;# 
  1425  0016                     	;# 
  1426  0017                     	;# 
  1427  0018                     	;# 
  1428  0019                     	;# 
  1429  001A                     	;# 
  1430  001B                     	;# 
  1431  001C                     	;# 
  1432  008C                     	;# 
  1433  008D                     	;# 
  1434  008E                     	;# 
  1435  0091                     	;# 
  1436  0092                     	;# 
  1437  0095                     	;# 
  1438  0096                     	;# 
  1439  0097                     	;# 
  1440  0098                     	;# 
  1441  0099                     	;# 
  1442  009A                     	;# 
  1443  009B                     	;# 
  1444  009B                     	;# 
  1445  009C                     	;# 
  1446  009D                     	;# 
  1447  009E                     	;# 
  1448  009F                     	;# 
  1449  010C                     	;# 
  1450  010D                     	;# 
  1451  010E                     	;# 
  1452  0111                     	;# 
  1453  0112                     	;# 
  1454  0113                     	;# 
  1455  0114                     	;# 
  1456  0115                     	;# 
  1457  0116                     	;# 
  1458  0117                     	;# 
  1459  0118                     	;# 
  1460  0119                     	;# 
  1461  011D                     	;# 
  1462  018C                     	;# 
  1463  018D                     	;# 
  1464  018E                     	;# 
  1465  0191                     	;# 
  1466  0191                     	;# 
  1467  0192                     	;# 
  1468  0193                     	;# 
  1469  0193                     	;# 
  1470  0194                     	;# 
  1471  0195                     	;# 
  1472  0196                     	;# 
  1473  0197                     	;# 
  1474  0199                     	;# 
  1475  019A                     	;# 
  1476  019B                     	;# 
  1477  019B                     	;# 
  1478  019C                     	;# 
  1479  019D                     	;# 
  1480  019E                     	;# 
  1481  019F                     	;# 
  1482  020C                     	;# 
  1483  020D                     	;# 
  1484  0211                     	;# 
  1485  0211                     	;# 
  1486  0212                     	;# 
  1487  0212                     	;# 
  1488  0213                     	;# 
  1489  0213                     	;# 
  1490  0214                     	;# 
  1491  0214                     	;# 
  1492  0215                     	;# 
  1493  0215                     	;# 
  1494  0215                     	;# 
  1495  0216                     	;# 
  1496  0216                     	;# 
  1497  0217                     	;# 
  1498  0217                     	;# 
  1499  0391                     	;# 
  1500  0392                     	;# 
  1501  0393                     	;# 
  1502  0394                     	;# 
  1503  0395                     	;# 
  1504  0396                     	;# 
  1505  039A                     	;# 
  1506  039B                     	;# 
  1507  0611                     	;# 
  1508  0612                     	;# 
  1509  0613                     	;# 
  1510  0613                     	;# 
  1511  0614                     	;# 
  1512  0615                     	;# 
  1513  0616                     	;# 
  1514  0616                     	;# 
  1515  0691                     	;# 
  1516  0692                     	;# 
  1517  0693                     	;# 
  1518  0694                     	;# 
  1519  0695                     	;# 
  1520  0E8E                     	;# 
  1521  0E8F                     	;# 
  1522  0E90                     	;# 
  1523  0E91                     	;# 
  1524  0E92                     	;# 
  1525  0E93                     	;# 
  1526  0E94                     	;# 
  1527  0E94                     	;# 
  1528  0E95                     	;# 
  1529  0E96                     	;# 
  1530  0E97                     	;# 
  1531  0E98                     	;# 
  1532  0E99                     	;# 
  1533  0E9A                     	;# 
  1534  0E9B                     	;# 
  1535  0E9C                     	;# 
  1536  0E9D                     	;# 
  1537  0E9E                     	;# 
  1538  0E9F                     	;# 
  1539  0FE4                     	;# 
  1540  0FE5                     	;# 
  1541  0FE6                     	;# 
  1542  0FE7                     	;# 
  1543  0FE8                     	;# 
  1544  0FE9                     	;# 
  1545  0FEA                     	;# 
  1546  0FEB                     	;# 
  1547  0FED                     	;# 
  1548  0FEE                     	;# 
  1549  0FEF                     	;# 
  1550  0000                     	;# 
  1551  0001                     	;# 
  1552  0002                     	;# 
  1553  0003                     	;# 
  1554  0004                     	;# 
  1555  0005                     	;# 
  1556  0006                     	;# 
  1557  0007                     	;# 
  1558  0008                     	;# 
  1559  0009                     	;# 
  1560  000A                     	;# 
  1561  000B                     	;# 
  1562  000C                     	;# 
  1563  000D                     	;# 
  1564  000E                     	;# 
  1565  0011                     	;# 
  1566  0012                     	;# 
  1567  0015                     	;# 
  1568  0016                     	;# 
  1569  0016                     	;# 
  1570  0017                     	;# 
  1571  0018                     	;# 
  1572  0019                     	;# 
  1573  001A                     	;# 
  1574  001B                     	;# 
  1575  001C                     	;# 
  1576  008C                     	;# 
  1577  008D                     	;# 
  1578  008E                     	;# 
  1579  0091                     	;# 
  1580  0092                     	;# 
  1581  0095                     	;# 
  1582  0096                     	;# 
  1583  0097                     	;# 
  1584  0098                     	;# 
  1585  0099                     	;# 
  1586  009A                     	;# 
  1587  009B                     	;# 
  1588  009B                     	;# 
  1589  009C                     	;# 
  1590  009D                     	;# 
  1591  009E                     	;# 
  1592  009F                     	;# 
  1593  010C                     	;# 
  1594  010D                     	;# 
  1595  010E                     	;# 
  1596  0111                     	;# 
  1597  0112                     	;# 
  1598  0113                     	;# 
  1599  0114                     	;# 
  1600  0115                     	;# 
  1601  0116                     	;# 
  1602  0117                     	;# 
  1603  0118                     	;# 
  1604  0119                     	;# 
  1605  011D                     	;# 
  1606  018C                     	;# 
  1607  018D                     	;# 
  1608  018E                     	;# 
  1609  0191                     	;# 
  1610  0191                     	;# 
  1611  0192                     	;# 
  1612  0193                     	;# 
  1613  0193                     	;# 
  1614  0194                     	;# 
  1615  0195                     	;# 
  1616  0196                     	;# 
  1617  0197                     	;# 
  1618  0199                     	;# 
  1619  019A                     	;# 
  1620  019B                     	;# 
  1621  019B                     	;# 
  1622  019C                     	;# 
  1623  019D                     	;# 
  1624  019E                     	;# 
  1625  019F                     	;# 
  1626  020C                     	;# 
  1627  020D                     	;# 
  1628  0211                     	;# 
  1629  0211                     	;# 
  1630  0212                     	;# 
  1631  0212                     	;# 
  1632  0213                     	;# 
  1633  0213                     	;# 
  1634  0214                     	;# 
  1635  0214                     	;# 
  1636  0215                     	;# 
  1637  0215                     	;# 
  1638  0215                     	;# 
  1639  0216                     	;# 
  1640  0216                     	;# 
  1641  0217                     	;# 
  1642  0217                     	;# 
  1643  0391                     	;# 
  1644  0392                     	;# 
  1645  0393                     	;# 
  1646  0394                     	;# 
  1647  0395                     	;# 
  1648  0396                     	;# 
  1649  039A                     	;# 
  1650  039B                     	;# 
  1651  0611                     	;# 
  1652  0612                     	;# 
  1653  0613                     	;# 
  1654  0613                     	;# 
  1655  0614                     	;# 
  1656  0615                     	;# 
  1657  0616                     	;# 
  1658  0616                     	;# 
  1659  0691                     	;# 
  1660  0692                     	;# 
  1661  0693                     	;# 
  1662  0694                     	;# 
  1663  0695                     	;# 
  1664  0E8E                     	;# 
  1665  0E8F                     	;# 
  1666  0E90                     	;# 
  1667  0E91                     	;# 
  1668  0E92                     	;# 
  1669  0E93                     	;# 
  1670  0E94                     	;# 
  1671  0E94                     	;# 
  1672  0E95                     	;# 
  1673  0E96                     	;# 
  1674  0E97                     	;# 
  1675  0E98                     	;# 
  1676  0E99                     	;# 
  1677  0E9A                     	;# 
  1678  0E9B                     	;# 
  1679  0E9C                     	;# 
  1680  0E9D                     	;# 
  1681  0E9E                     	;# 
  1682  0E9F                     	;# 
  1683  0FE4                     	;# 
  1684  0FE5                     	;# 
  1685  0FE6                     	;# 
  1686  0FE7                     	;# 
  1687  0FE8                     	;# 
  1688  0FE9                     	;# 
  1689  0FEA                     	;# 
  1690  0FEB                     	;# 
  1691  0FED                     	;# 
  1692  0FEE                     	;# 
  1693  0FEF                     	;# 
  1694                           
  1695                           	psect	stringtext
  1696  0239                     __pstringtext:	
  1697  0239                     _USB_SD_Ptr:	
  1698  0239  34FB               	retlw	low (_sd000| (0+32768))
  1699  023A  3482               	retlw	high (_sd000| (0+32768))
  1700  023B  3441               	retlw	low (_sd001| (0+32768))
  1701  023C  3482               	retlw	high (_sd001| (0+32768))
  1702  023D  3475               	retlw	low (_sd002| (0+32768))
  1703  023E  3482               	retlw	high (_sd002| (0+32768))
  1704  023F                     __end_of_USB_SD_Ptr:	
  1705  023F                     _USB_CD_Ptr:	
  1706  023F  34A3               	retlw	low (_configDescriptor1| (0+32768))
  1707  0240  3482               	retlw	high (_configDescriptor1| (0+32768))
  1708  0241                     __end_of_USB_CD_Ptr:	
  1709  0241                     _sd001:	
  1710  0241  3434               	retlw	52
  1711  0242  3403               	retlw	3
  1712  0243  344D               	retlw	77
  1713  0244  3400               	retlw	0
  1714  0245  3469               	retlw	105
  1715  0246  3400               	retlw	0
  1716  0247  3463               	retlw	99
  1717  0248  3400               	retlw	0
  1718  0249  3472               	retlw	114
  1719  024A  3400               	retlw	0
  1720  024B  346F               	retlw	111
  1721  024C  3400               	retlw	0
  1722  024D  3463               	retlw	99
  1723  024E  3400               	retlw	0
  1724  024F  3468               	retlw	104
  1725  0250  3400               	retlw	0
  1726  0251  3469               	retlw	105
  1727  0252  3400               	retlw	0
  1728  0253  3470               	retlw	112
  1729  0254  3400               	retlw	0
  1730  0255  3420               	retlw	32
  1731  0256  3400               	retlw	0
  1732  0257  3454               	retlw	84
  1733  0258  3400               	retlw	0
  1734  0259  3465               	retlw	101
  1735  025A  3400               	retlw	0
  1736  025B  3463               	retlw	99
  1737  025C  3400               	retlw	0
  1738  025D  3468               	retlw	104
  1739  025E  3400               	retlw	0
  1740  025F  346E               	retlw	110
  1741  0260  3400               	retlw	0
  1742  0261  346F               	retlw	111
  1743  0262  3400               	retlw	0
  1744  0263  346C               	retlw	108
  1745  0264  3400               	retlw	0
  1746  0265  346F               	retlw	111
  1747  0266  3400               	retlw	0
  1748  0267  3467               	retlw	103
  1749  0268  3400               	retlw	0
  1750  0269  3479               	retlw	121
  1751  026A  3400               	retlw	0
  1752  026B  3420               	retlw	32
  1753  026C  3400               	retlw	0
  1754  026D  3449               	retlw	73
  1755  026E  3400               	retlw	0
  1756  026F  346E               	retlw	110
  1757  0270  3400               	retlw	0
  1758  0271  3463               	retlw	99
  1759  0272  3400               	retlw	0
  1760  0273  342E               	retlw	46
  1761  0274  3400               	retlw	0
  1762  0275                     __end_of_sd001:	
  1763  0275                     _sd002:	
  1764  0275  342E               	retlw	46
  1765  0276  3403               	retlw	3
  1766  0277  3453               	retlw	83
  1767  0278  3400               	retlw	0
  1768  0279  3469               	retlw	105
  1769  027A  3400               	retlw	0
  1770  027B  346D               	retlw	109
  1771  027C  3400               	retlw	0
  1772  027D  3470               	retlw	112
  1773  027E  3400               	retlw	0
  1774  027F  346C               	retlw	108
  1775  0280  3400               	retlw	0
  1776  0281  3465               	retlw	101
  1777  0282  3400               	retlw	0
  1778  0283  3420               	retlw	32
  1779  0284  3400               	retlw	0
  1780  0285  3448               	retlw	72
  1781  0286  3400               	retlw	0
  1782  0287  3449               	retlw	73
  1783  0288  3400               	retlw	0
  1784  0289  3444               	retlw	68
  1785  028A  3400               	retlw	0
  1786  028B  3420               	retlw	32
  1787  028C  3400               	retlw	0
  1788  028D  3444               	retlw	68
  1789  028E  3400               	retlw	0
  1790  028F  3465               	retlw	101
  1791  0290  3400               	retlw	0
  1792  0291  3476               	retlw	118
  1793  0292  3400               	retlw	0
  1794  0293  3469               	retlw	105
  1795  0294  3400               	retlw	0
  1796  0295  3463               	retlw	99
  1797  0296  3400               	retlw	0
  1798  0297  3465               	retlw	101
  1799  0298  3400               	retlw	0
  1800  0299  3420               	retlw	32
  1801  029A  3400               	retlw	0
  1802  029B  3444               	retlw	68
  1803  029C  3400               	retlw	0
  1804  029D  3465               	retlw	101
  1805  029E  3400               	retlw	0
  1806  029F  346D               	retlw	109
  1807  02A0  3400               	retlw	0
  1808  02A1  346F               	retlw	111
  1809  02A2  3400               	retlw	0
  1810  02A3                     __end_of_sd002:	
  1811  02A3                     _configDescriptor1:	
  1812  02A3  3409               	retlw	9
  1813  02A4  3402               	retlw	2
  1814  02A5  3429               	retlw	41
  1815  02A6  3400               	retlw	0
  1816  02A7  3401               	retlw	1
  1817  02A8  3401               	retlw	1
  1818  02A9  3400               	retlw	0
  1819  02AA  34C0               	retlw	192
  1820  02AB  3432               	retlw	50
  1821  02AC  3409               	retlw	9
  1822  02AD  3404               	retlw	4
  1823  02AE  3400               	retlw	0
  1824  02AF  3400               	retlw	0
  1825  02B0  3402               	retlw	2
  1826  02B1  3403               	retlw	3
  1827  02B2  3400               	retlw	0
  1828  02B3  3400               	retlw	0
  1829  02B4  3400               	retlw	0
  1830  02B5  3409               	retlw	9
  1831  02B6  3421               	retlw	33
  1832  02B7  3411               	retlw	17
  1833  02B8  3401               	retlw	1
  1834  02B9  3400               	retlw	0
  1835  02BA  3401               	retlw	1
  1836  02BB  3422               	retlw	34
  1837  02BC  341D               	retlw	29
  1838  02BD  3400               	retlw	0
  1839  02BE  3407               	retlw	7
  1840  02BF  3405               	retlw	5
  1841  02C0  3481               	retlw	129
  1842  02C1  3403               	retlw	3
  1843  02C2  3440               	retlw	64
  1844  02C3  3400               	retlw	0
  1845  02C4  3401               	retlw	1
  1846  02C5  3407               	retlw	7
  1847  02C6  3405               	retlw	5
  1848  02C7  3401               	retlw	1
  1849  02C8  3403               	retlw	3
  1850  02C9  3440               	retlw	64
  1851  02CA  3400               	retlw	0
  1852  02CB  3401               	retlw	1
  1853  02CC                     __end_of_configDescriptor1:	
  1854  02CC                     _hid_rpt01:	
  1855  02CC  3406               	retlw	6
  1856  02CD  3400               	retlw	0
  1857  02CE  34FF               	retlw	255
  1858  02CF  3409               	retlw	9
  1859  02D0  3401               	retlw	1
  1860  02D1  34A1               	retlw	161
  1861  02D2  3401               	retlw	1
  1862  02D3  3419               	retlw	25
  1863  02D4  3401               	retlw	1
  1864  02D5  3429               	retlw	41
  1865  02D6  3440               	retlw	64
  1866  02D7  3415               	retlw	21
  1867  02D8  3400               	retlw	0
  1868  02D9  3426               	retlw	38
  1869  02DA  34FF               	retlw	255
  1870  02DB  3400               	retlw	0
  1871  02DC  3475               	retlw	117
  1872  02DD  3408               	retlw	8
  1873  02DE  3495               	retlw	149
  1874  02DF  3440               	retlw	64
  1875  02E0  3481               	retlw	129
  1876  02E1  3400               	retlw	0
  1877  02E2  3419               	retlw	25
  1878  02E3  3401               	retlw	1
  1879  02E4  3429               	retlw	41
  1880  02E5  3440               	retlw	64
  1881  02E6  3491               	retlw	145
  1882  02E7  3400               	retlw	0
  1883  02E8  34C0               	retlw	192
  1884  02E9                     __end_of_hid_rpt01:	
  1885  02E9                     _device_dsc:	
  1886  02E9  3412               	retlw	18
  1887  02EA  3401               	retlw	1
  1888  02EB  3400               	retlw	0
  1889  02EC  3402               	retlw	2
  1890  02ED  3400               	retlw	0
  1891  02EE  3400               	retlw	0
  1892  02EF  3400               	retlw	0
  1893  02F0  3408               	retlw	8
  1894  02F1  34D8               	retlw	216
  1895  02F2  3404               	retlw	4
  1896  02F3  343F               	retlw	63
  1897  02F4  3400               	retlw	0
  1898  02F5  3400               	retlw	0
  1899  02F6  3401               	retlw	1
  1900  02F7  3401               	retlw	1
  1901  02F8  3402               	retlw	2
  1902  02F9  3400               	retlw	0
  1903  02FA  3401               	retlw	1
  1904  02FB                     __end_of_device_dsc:	
  1905  02FB                     _sd000:	
  1906  02FB  3404               	retlw	4
  1907  02FC  3403               	retlw	3
  1908  02FD  3409               	retlw	9
  1909  02FE  3404               	retlw	4
  1910  02FF                     __end_of_sd000:	
  1911  000B                     _INTCONbits	set	11
  1912  0012                     _PIR2bits	set	18
  1913  000C                     _PORTAbits	set	12
  1914  009D                     _ADCON0	set	157
  1915  009D                     _ADCON0bits	set	157
  1916  009E                     _ADCON1	set	158
  1917  009F                     _ADCON2	set	159
  1918  009C                     _ADRESH	set	156
  1919  009B                     _ADRESL	set	155
  1920  0092                     _PIE2bits	set	146
  1921  008D                     _TRISBbits	set	141
  1922  008E                     _TRISCbits	set	142
  1923  010E                     _LATCbits	set	270
  1924  018D                     _ANSELBbits	set	397
  1925  0E96                     _UADDR	set	3734
  1926  0E91                     _UCFG	set	3729
  1927  0E8E                     _UCON	set	3726
  1928  0E8E                     _UCONbits	set	3726
  1929  0E97                     _UEIE	set	3735
  1930  0E93                     _UEIR	set	3731
  1931  0E98                     _UEP0bits	set	3736
  1932  0E92                     _UIE	set	3730
  1933  0E92                     _UIEbits	set	3730
  1934  0E90                     _UIR	set	3728
  1935  0E90                     _UIRbits	set	3728
  1936  0E8F                     _USTAT	set	3727
  1937  0E98                     _UEP0	set	3736
  1938  0E99                     _UEP1	set	3737
  1939                           
  1940                           ; #config settings
  1941  0000                     
  1942                           	psect	cinit
  1943  0012                     start_initialization:	
  1944  0012                     __initialization:	
  1945                           
  1946                           ; Clear objects allocated to BANK0
  1947  0012  3066               	movlw	low __pbssBANK0
  1948  0013  0084               	movwf	4
  1949  0014  3000               	movlw	high __pbssBANK0
  1950  0015  0085               	movwf	5
  1951  0016  300A               	movlw	10
  1952  0017  3188  20CD  3180   	fcall	clear_ram0
  1953                           
  1954                           ; Clear objects allocated to BANK1
  1955  001A  0021               	movlb	1	; select bank1
  1956  001B  01EE               	clrf	__pbssBANK1& (0+127)
  1957  001C  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  1958                           
  1959                           ; Clear objects allocated to BANK2
  1960  001D  3060               	movlw	low __pbssBANK2
  1961  001E  0084               	movwf	4
  1962  001F  3001               	movlw	high __pbssBANK2
  1963  0020  0085               	movwf	5
  1964  0021  3010               	movlw	16
  1965  0022  3188  20CD  3180   	fcall	clear_ram0
  1966                           
  1967                           ; Clear objects allocated to BANK3
  1968  0025  30A0               	movlw	low __pbssBANK3
  1969  0026  0084               	movwf	4
  1970  0027  3001               	movlw	high __pbssBANK3
  1971  0028  0085               	movwf	5
  1972  0029  301D               	movlw	29
  1973  002A  3188  20CD         	fcall	clear_ram0
  1974  002C                     end_of_initialization:	
  1975                           ;End of C runtime variable initialization code
  1976                           
  1977  002C                     __end_of__initialization:	
  1978  002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1979  002D  0020               	movlb	0
  1980  002E  3189  2919         	ljmp	_main	;jump to C main() function
  1981                           
  1982                           	psect	bssBANK0
  1983  0066                     __pbssBANK0:	
  1984  0066                     _pBDTEntryIn:	
  1985  0066                     	ds	4
  1986  006A                     _pBDTEntryEP0OutNext:	
  1987  006A                     	ds	2
  1988  006C                     _USBDeviceState:	
  1989  006C                     	ds	1
  1990  006D                     _controlTransferState:	
  1991  006D                     	ds	1
  1992  006E                     _pBDTEntryEP0OutCurrent:	
  1993  006E                     	ds	1
  1994  006F                     _USTATcopy:	
  1995  006F                     	ds	1
  1996                           
  1997                           	psect	bssBANK1
  1998  00EE                     __pbssBANK1:	
  1999  00EE                     _USBActiveConfiguration:	
  2000  00EE                     	ds	1
  2001  00EF                     _USBAlternateInterface:	
  2002  00EF                     	ds	1
  2003                           
  2004                           	psect	bssBANK2
  2005  0160                     __pbssBANK2:	
  2006  0160                     _outPipes:	
  2007  0160                     	ds	7
  2008  0167                     _inPipes:	
  2009  0167                     	ds	5
  2010  016C                     _USBDeferStatusStagePacket:	
  2011  016C                     	ds	1
  2012  016D                     _USBStatusStageTimeoutCounter:	
  2013  016D                     	ds	1
  2014  016E                     _endpoint_number:	
  2015  016E                     	ds	1
  2016  016F                     _shortPacketStatus:	
  2017  016F                     	ds	1
  2018                           
  2019                           	psect	bssBANK3
  2020  01A0                     __pbssBANK3:	
  2021  01A0                     _USB1msTickCount:	
  2022  01A0                     	ds	4
  2023  01A4                     _pBDTEntryOut:	
  2024  01A4                     	ds	4
  2025  01A8                     APP_LEDUpdateUSBStatus@ledCount:	
  2026  01A8                     	ds	2
  2027  01AA                     _USBInHandle:	
  2028  01AA                     	ds	2
  2029  01AC                     _USBOutHandle:	
  2030  01AC                     	ds	2
  2031  01AE                     _ep_data_in:	
  2032  01AE                     	ds	2
  2033  01B0                     _ep_data_out:	
  2034  01B0                     	ds	2
  2035  01B2                     _BothEP0OutUOWNsSet:	
  2036  01B2                     	ds	1
  2037  01B3                     _RemoteWakeup:	
  2038  01B3                     	ds	1
  2039  01B4                     _USBBusIsSuspended:	
  2040  01B4                     	ds	1
  2041  01B5                     _USBDeferINDataStagePackets:	
  2042  01B5                     	ds	1
  2043  01B6                     _USBDeferOUTDataStagePackets:	
  2044  01B6                     	ds	1
  2045  01B7                     _USBStatusStageEnabledFlag1:	
  2046  01B7                     	ds	1
  2047  01B8                     _USBStatusStageEnabledFlag2:	
  2048  01B8                     	ds	1
  2049  01B9                     _USBTicksSinceSuspendEnd:	
  2050  01B9                     	ds	1
  2051  01BA                     _pDst:	
  2052  01BA                     	ds	1
  2053  01BB                     _active_protocol:	
  2054  01BB                     	ds	1
  2055  01BC                     _idle_rate:	
  2056  01BC                     	ds	1
  2057                           
  2058                           	psect	clrtext
  2059  08CD                     clear_ram0:	
  2060                           ;	Called with FSR0 containing the base address, and
  2061                           ;	WREG with the size to clear
  2062                           
  2063  08CD  0064               	clrwdt	;clear the watchdog before getting into this loop
  2064  08CE                     clrloop0:	
  2065  08CE  0180               	clrf	0	;clear RAM location pointed to by FSR
  2066  08CF  3101               	addfsr 0,1
  2067  08D0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2068  08D1  28CE               	goto	clrloop0	;have we reached the end yet?
  2069  08D2  3400               	retlw	0	;all done for this memory range, return
  2070                           
  2071                           	psect	cstackBANK1
  2072  00E0                     __pcstackBANK1:	
  2073  00E0                     ??_BUTTON_IsPressed:	
  2074  00E0                     ??_BUTTON_Enable:	
  2075                           ; 1 bytes @ 0x0
  2076                           
  2077  00E0                     ??_LED_Toggle:	
  2078                           ; 1 bytes @ 0x0
  2079                           
  2080  00E0                     ??_LED_Enable:	
  2081                           ; 1 bytes @ 0x0
  2082                           
  2083  00E0                     ??_ADC_Enable:	
  2084                           ; 1 bytes @ 0x0
  2085                           
  2086  00E0                     ??_ADC_SetConfiguration:	
  2087                           ; 1 bytes @ 0x0
  2088                           
  2089  00E0                     ??_USBDeviceInit:	
  2090                           ; 1 bytes @ 0x0
  2091                           
  2092  00E0                     ??_USBDeviceAttach:	
  2093                           ; 1 bytes @ 0x0
  2094                           
  2095  00E0                     ?_ADC_Read10bit:	
  2096                           ; 1 bytes @ 0x0
  2097                           
  2098  00E0                     ?_USBTransferOnePacket:	
  2099                           ; 2 bytes @ 0x0
  2100                           
  2101  00E0                     BUTTON_IsPressed@button:	
  2102                           ; 2 bytes @ 0x0
  2103                           
  2104  00E0                     BUTTON_Enable@button:	
  2105                           ; 1 bytes @ 0x0
  2106                           
  2107  00E0                     LED_Enable@led:	
  2108                           ; 1 bytes @ 0x0
  2109                           
  2110  00E0                     ADC_Enable@channel:	
  2111                           ; 1 bytes @ 0x0
  2112                           
  2113  00E0                     ADC_SetConfiguration@configuration:	
  2114                           ; 1 bytes @ 0x0
  2115                           
  2116  00E0                     USBTransferOnePacket@dir:	
  2117                           ; 1 bytes @ 0x0
  2118                           
  2119                           
  2120                           ; 1 bytes @ 0x0
  2121  00E0                     	ds	1
  2122  00E1                     ??_SYSTEM_Initialize:	
  2123  00E1                     LED_Toggle@led:	
  2124                           ; 1 bytes @ 0x1
  2125                           
  2126  00E1                     SYSTEM_Initialize@state:	
  2127                           ; 1 bytes @ 0x1
  2128                           
  2129  00E1                     USBDeviceInit@p:	
  2130                           ; 1 bytes @ 0x1
  2131                           
  2132  00E1                     USBTransferOnePacket@data:	
  2133                           ; 2 bytes @ 0x1
  2134                           
  2135                           
  2136                           ; 2 bytes @ 0x1
  2137  00E1                     	ds	1
  2138  00E2                     ??_ADC_Read10bit:	
  2139                           
  2140                           ; 1 bytes @ 0x2
  2141  00E2                     	ds	1
  2142  00E3                     USBDeviceInit@i_901:	
  2143  00E3                     USBTransferOnePacket@len:	
  2144                           ; 1 bytes @ 0x3
  2145                           
  2146                           
  2147                           ; 1 bytes @ 0x3
  2148  00E3                     	ds	1
  2149  00E4                     ??_USBTransferOnePacket:	
  2150  00E4                     USBDeviceInit@i:	
  2151                           ; 1 bytes @ 0x4
  2152                           
  2153  00E4                     ADC_Read10bit@result:	
  2154                           ; 1 bytes @ 0x4
  2155                           
  2156                           
  2157                           ; 2 bytes @ 0x4
  2158  00E4                     	ds	2
  2159  00E6                     ADC_Read10bit@channel:	
  2160                           
  2161                           ; 1 bytes @ 0x6
  2162  00E6                     	ds	2
  2163  00E8                     USBTransferOnePacket@ep:	
  2164                           
  2165                           ; 1 bytes @ 0x8
  2166  00E8                     	ds	1
  2167  00E9                     USBTransferOnePacket@handle:	
  2168                           
  2169                           ; 2 bytes @ 0x9
  2170  00E9                     	ds	2
  2171  00EB                     ??_APP_DeviceCustomHIDTasks:	
  2172                           
  2173                           ; 1 bytes @ 0xB
  2174  00EB                     	ds	1
  2175  00EC                     APP_DeviceCustomHIDTasks@pot:	
  2176                           
  2177                           ; 2 bytes @ 0xC
  2178  00EC                     	ds	2
  2179  00EE                     ??_main:	
  2180                           
  2181                           	psect	cstackCOMMON
  2182  0070                     __pcstackCOMMON:	
  2183                           ; 1 bytes @ 0xE
  2184                           
  2185  0070                     ?_USBWakeFromSuspend:	
  2186  0070                     ?_USBSuspend:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189  0070                     ?_USBIncrement1msInternalTimers:	
  2190                           ; 1 bytes @ 0x0
  2191                           
  2192  0070                     ??_USBIncrement1msInternalTimers:	
  2193                           ; 1 bytes @ 0x0
  2194                           
  2195  0070                     ?_USBCtrlEPAllowStatusStage:	
  2196                           ; 1 bytes @ 0x0
  2197                           
  2198  0070                     ??_USBCtrlEPAllowStatusStage:	
  2199                           ; 1 bytes @ 0x0
  2200                           
  2201  0070                     ?_USBStallHandler:	
  2202                           ; 1 bytes @ 0x0
  2203                           
  2204  0070                     ??_USBStallHandler:	
  2205                           ; 1 bytes @ 0x0
  2206                           
  2207  0070                     ?_USBCtrlEPService:	
  2208                           ; 1 bytes @ 0x0
  2209                           
  2210  0070                     ?_USBConfigureEndpoint:	
  2211                           ; 1 bytes @ 0x0
  2212                           
  2213  0070                     ?_USBCtrlTrfTxService:	
  2214                           ; 1 bytes @ 0x0
  2215                           
  2216  0070                     ??_USBCtrlTrfTxService:	
  2217                           ; 1 bytes @ 0x0
  2218                           
  2219  0070                     ?_memset:	
  2220                           ; 1 bytes @ 0x0
  2221                           
  2222  0070                     ?_USBCtrlTrfSetupHandler:	
  2223                           ; 1 bytes @ 0x0
  2224                           
  2225  0070                     ?_USBCtrlTrfOutHandler:	
  2226                           ; 1 bytes @ 0x0
  2227                           
  2228  0070                     ?_USBCtrlTrfInHandler:	
  2229                           ; 1 bytes @ 0x0
  2230                           
  2231  0070                     ?_USBCheckStdRequest:	
  2232                           ; 1 bytes @ 0x0
  2233                           
  2234  0070                     ?_USBStdFeatureReqHandler:	
  2235                           ; 1 bytes @ 0x0
  2236                           
  2237  0070                     ?_APP_LEDUpdateUSBStatus:	
  2238                           ; 1 bytes @ 0x0
  2239                           
  2240  0070                     ?_SYSTEM_Initialize:	
  2241                           ; 1 bytes @ 0x0
  2242                           
  2243  0070                     ?_APP_DeviceCustomHIDInitialize:	
  2244                           ; 1 bytes @ 0x0
  2245                           
  2246  0070                     ?_APP_DeviceCustomHIDTasks:	
  2247                           ; 1 bytes @ 0x0
  2248                           
  2249  0070                     ?_BUTTON_IsPressed:	
  2250                           ; 1 bytes @ 0x0
  2251                           
  2252  0070                     ?_BUTTON_Enable:	
  2253                           ; 1 bytes @ 0x0
  2254                           
  2255  0070                     ?_LED_On:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0070                     ??_LED_On:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0070                     ?_LED_Off:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0070                     ??_LED_Off:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0070                     ?_LED_Toggle:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0070                     ?_LED_Enable:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0070                     ?_ADC_Enable:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0070                     ?_ADC_SetConfiguration:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0070                     ?_USBDeviceInit:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0070                     ?_USBDeviceTasks:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0070                     ?_USBDeviceAttach:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0070                     ?_USBCtrlEPAllowDataStage:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0070                     ?_USBCtrlEPServiceComplete:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0070                     ?_USBCtrlTrfRxService:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0070                     ?_USBStdSetCfgHandler:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0070                     ?_USBStdGetDscHandler:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0070                     ??_USBStdGetDscHandler:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0070                     ?_USBStdGetStatusHandler:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0070                     ??_USBStdGetStatusHandler:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0070                     ?_USBCheckHIDRequest:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0070                     ??_USBCheckHIDRequest:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ?_main:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ?_SYS_InterruptHigh:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ?i1_BUTTON_Enable:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ??i1_BUTTON_Enable:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ?i1_LED_Enable:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ??i1_LED_Enable:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ?i1_ADC_Enable:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ??i1_ADC_Enable:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ?i1_ADC_SetConfiguration:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ??i1_ADC_SetConfiguration:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     ?i1_USBDeviceInit:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0070                     ??i1_USBDeviceInit:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0070                     ?i1_SYSTEM_Initialize:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0070                     ?i1_USBTransferOnePacket:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0070                     LED_On@led:	
  2361                           ; 2 bytes @ 0x0
  2362                           
  2363  0070                     LED_Off@led:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0070                     USBConfigureEndpoint@direction:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0070                     i1BUTTON_Enable@button:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0070                     i1LED_Enable@led:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0070                     i1ADC_Enable@channel:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0070                     i1ADC_SetConfiguration@configuration:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0070                     i1USBTransferOnePacket@dir:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0070                     memset@c:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387                           
  2388                           ; 2 bytes @ 0x0
  2389  0070                     	ds	1
  2390  0071                     ??_USBConfigureEndpoint:	
  2391  0071                     ??_APP_LEDUpdateUSBStatus:	
  2392                           ; 1 bytes @ 0x1
  2393                           
  2394  0071                     ??i1_SYSTEM_Initialize:	
  2395                           ; 1 bytes @ 0x1
  2396                           
  2397  0071                     i1SYSTEM_Initialize@state:	
  2398                           ; 1 bytes @ 0x1
  2399                           
  2400  0071                     USBStdGetStatusHandler@p:	
  2401                           ; 1 bytes @ 0x1
  2402                           
  2403  0071                     i1USBDeviceInit@p:	
  2404                           ; 2 bytes @ 0x1
  2405                           
  2406  0071                     i1USBTransferOnePacket@data:	
  2407                           ; 2 bytes @ 0x1
  2408                           
  2409                           
  2410                           ; 2 bytes @ 0x1
  2411  0071                     	ds	1
  2412  0072                     ??_USBCtrlTrfRxService:	
  2413  0072                     USBCtrlTrfTxService@byteToSend:	
  2414                           ; 1 bytes @ 0x2
  2415                           
  2416  0072                     memset@n:	
  2417                           ; 1 bytes @ 0x2
  2418                           
  2419                           
  2420                           ; 2 bytes @ 0x2
  2421  0072                     	ds	1
  2422  0073                     ??_USBCtrlTrfInHandler:	
  2423  0073                     ??_USBCtrlEPAllowDataStage:	
  2424                           ; 1 bytes @ 0x3
  2425                           
  2426  0073                     i1USBDeviceInit@i_901:	
  2427                           ; 1 bytes @ 0x3
  2428                           
  2429  0073                     i1USBTransferOnePacket@len:	
  2430                           ; 1 bytes @ 0x3
  2431                           
  2432                           
  2433                           ; 1 bytes @ 0x3
  2434  0073                     	ds	1
  2435  0074                     ??_memset:	
  2436  0074                     ??i1_USBTransferOnePacket:	
  2437                           ; 1 bytes @ 0x4
  2438                           
  2439  0074                     USBCtrlTrfRxService@i:	
  2440                           ; 1 bytes @ 0x4
  2441                           
  2442  0074                     i1USBDeviceInit@i:	
  2443                           ; 1 bytes @ 0x4
  2444                           
  2445                           
  2446                           ; 1 bytes @ 0x4
  2447  0074                     	ds	1
  2448  0075                     ??_USBCtrlEPServiceComplete:	
  2449  0075                     USBConfigureEndpoint@EPNum:	
  2450                           ; 1 bytes @ 0x5
  2451                           
  2452  0075                     USBCtrlTrfRxService@byteToRead:	
  2453                           ; 1 bytes @ 0x5
  2454                           
  2455  0075                     USBCtrlTrfInHandler@lastDTS:	
  2456                           ; 1 bytes @ 0x5
  2457                           
  2458  0075                     memset@p:	
  2459                           ; 1 bytes @ 0x5
  2460                           
  2461                           
  2462                           ; 1 bytes @ 0x5
  2463  0075                     	ds	1
  2464  0076                     ??_USBCtrlTrfOutHandler:	
  2465  0076                     USBConfigureEndpoint@handle:	
  2466                           ; 1 bytes @ 0x6
  2467                           
  2468  0076                     memset@p1:	
  2469                           ; 1 bytes @ 0x6
  2470                           
  2471                           
  2472                           ; 1 bytes @ 0x6
  2473  0076                     	ds	1
  2474  0077                     ?_USBEnableEndpoint:	
  2475  0077                     USBEnableEndpoint@options:	
  2476                           ; 1 bytes @ 0x7
  2477                           
  2478                           
  2479                           ; 1 bytes @ 0x7
  2480  0077                     	ds	1
  2481  0078                     ??_USBEnableEndpoint:	
  2482  0078                     i1USBTransferOnePacket@ep:	
  2483                           ; 1 bytes @ 0x8
  2484                           
  2485                           
  2486                           ; 1 bytes @ 0x8
  2487  0078                     	ds	1
  2488  0079                     i1USBTransferOnePacket@handle:	
  2489                           
  2490                           ; 2 bytes @ 0x9
  2491  0079                     	ds	1
  2492  007A                     USBEnableEndpoint@p:	
  2493                           
  2494                           ; 2 bytes @ 0xA
  2495  007A                     	ds	2
  2496  007C                     USBEnableEndpoint@ep:	
  2497                           
  2498                           ; 1 bytes @ 0xC
  2499  007C                     	ds	1
  2500  007D                     ??_APP_DeviceCustomHIDInitialize:	
  2501                           
  2502                           ; 1 bytes @ 0xD
  2503  007D                     	ds	1
  2504  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2505                           
  2506                           	psect	cstackBANK0
  2507  0050                     __pcstackBANK0:	
  2508                           ; 1 bytes @ 0xE
  2509                           
  2510  0050                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2511  0050                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514                           
  2515                           ; 2 bytes @ 0x0
  2516  0050                     	ds	2
  2517  0052                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2518                           
  2519                           ; 2 bytes @ 0x2
  2520  0052                     	ds	2
  2521  0054                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2522                           
  2523                           ; 2 bytes @ 0x4
  2524  0054                     	ds	2
  2525  0056                     ??_USBWakeFromSuspend:	
  2526  0056                     ??_USBSuspend:	
  2527                           ; 1 bytes @ 0x6
  2528                           
  2529  0056                     ??_USBStdFeatureReqHandler:	
  2530                           ; 1 bytes @ 0x6
  2531                           
  2532  0056                     ??_USBStdSetCfgHandler:	
  2533                           ; 1 bytes @ 0x6
  2534                           
  2535                           
  2536                           ; 1 bytes @ 0x6
  2537  0056                     	ds	1
  2538  0057                     USBStdSetCfgHandler@p:	
  2539                           
  2540                           ; 2 bytes @ 0x7
  2541  0057                     	ds	1
  2542  0058                     USBStdFeatureReqHandler@pUEP:	
  2543                           
  2544                           ; 2 bytes @ 0x8
  2545  0058                     	ds	1
  2546  0059                     USBStdSetCfgHandler@i_1253:	
  2547                           
  2548                           ; 1 bytes @ 0x9
  2549  0059                     	ds	1
  2550  005A                     USBStdSetCfgHandler@i:	
  2551  005A                     USBStdFeatureReqHandler@current_ep_data:	
  2552                           ; 1 bytes @ 0xA
  2553                           
  2554                           
  2555                           ; 1 bytes @ 0xA
  2556  005A                     	ds	1
  2557  005B                     USBStdFeatureReqHandler@p:	
  2558                           
  2559                           ; 2 bytes @ 0xB
  2560  005B                     	ds	2
  2561  005D                     ??_USBCheckStdRequest:	
  2562                           
  2563                           ; 1 bytes @ 0xD
  2564  005D                     	ds	1
  2565  005E                     ??_USBCtrlTrfSetupHandler:	
  2566                           
  2567                           ; 1 bytes @ 0xE
  2568  005E                     	ds	1
  2569  005F                     ??_USBCtrlEPService:	
  2570                           
  2571                           ; 1 bytes @ 0xF
  2572  005F                     	ds	3
  2573  0062                     ??_USBDeviceTasks:	
  2574                           
  2575                           ; 1 bytes @ 0x12
  2576  0062                     	ds	2
  2577  0064                     USBDeviceTasks@i:	
  2578                           
  2579                           ; 1 bytes @ 0x14
  2580  0064                     	ds	1
  2581  0065                     ??_SYS_InterruptHigh:	
  2582                           
  2583                           ; 1 bytes @ 0x15
  2584  0065                     	ds	1
  2585                           
  2586                           	psect	maintext
  2587  0919                     __pmaintext:	
  2588 ;;
  2589 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2590 ;;
  2591 ;; *************** function _main *****************
  2592 ;; Defined at:
  2593 ;;		line 31 in file "../demo_src/main.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : B1F/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels required when called:   12
  2613 ;; This function calls:
  2614 ;;		_APP_DeviceCustomHIDTasks
  2615 ;;		_SYSTEM_Initialize
  2616 ;;		_USBDeviceAttach
  2617 ;;		_USBDeviceInit
  2618 ;; This function is called by:
  2619 ;;		Startup code after reset
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _main
  2625  0919                     _main:	
  2626                           
  2627                           ;main.c: 33: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2631  0919  3000               	movlw	0
  2632  091A  318A  228C  3189   	fcall	_SYSTEM_Initialize
  2633                           
  2634                           ;main.c: 35: USBDeviceInit();
  2635  091D  3182  22FF  3189   	fcall	_USBDeviceInit
  2636                           
  2637                           ;main.c: 36: USBDeviceAttach();
  2638  0920  3189  21EE  3189   	fcall	_USBDeviceAttach
  2639  0923                     l628:	
  2640                           ;main.c: 38: while(1)
  2641                           
  2642                           
  2643                           ;main.c: 39: {
  2644                           ;main.c: 40: ;
  2645                           ;main.c: 59: APP_DeviceCustomHIDTasks();
  2646  0923  3184  24FF  3189   	fcall	_APP_DeviceCustomHIDTasks
  2647  0926  2923               	goto	l628
  2648  0927                     __end_of_main:	
  2649                           
  2650                           	psect	text1
  2651  02FF                     __ptext1:	
  2652 ;; *************** function _USBDeviceInit *****************
  2653 ;; Defined at:
  2654 ;;		line 277 in file "../../../../../../framework/usb/src/usb_device.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  p               2    1[BANK1 ] PTR unsigned char 
  2659 ;;		 -> UEP1(1), 
  2660 ;;  i               1    3[BANK1 ] unsigned char 
  2661 ;;  i               1    4[BANK1 ] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      void 
  2664 ;; Registers used:
  2665 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2672 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2673 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2674 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  2675 ;;Total ram usage:        5 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:   10
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_main
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _USBDeviceInit
  2687  02FF                     _USBDeviceInit:	
  2688                           
  2689                           ;usb_device.c: 279: uint8_t i;
  2690                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  2691                           
  2692                           ;incstack = 0
  2693                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2694  02FF  0021               	movlb	1	; select bank1
  2695  0300  1112               	bcf	18,2	;volatile
  2696                           
  2697                           ;usb_device.c: 285: ;
  2698                           ;usb_device.c: 288: {UEIR = 0;};
  2699  0301  003D               	movlb	29	; select bank29
  2700  0302  0193               	clrf	19	;volatile
  2701                           
  2702                           ;usb_device.c: 291: {UIR = 0;};
  2703  0303  0190               	clrf	16	;volatile
  2704                           
  2705                           ;usb_device.c: 294: UEP0 = 0;
  2706  0304  0198               	clrf	24	;volatile
  2707                           
  2708                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  2709  0305  300E               	movlw	14
  2710  0306  0021               	movlb	1	; select bank1
  2711  0307  00E2               	movwf	(USBDeviceInit@p+1)^(0+128)
  2712  0308  3099               	movlw	153
  2713  0309  00E1               	movwf	USBDeviceInit@p^(0+128)
  2714  030A  01E3               	clrf	USBDeviceInit@i_901^(0+128)
  2715  030B  0863               	movf	USBDeviceInit@i_901^(0+128),w
  2716  030C  1D03               	btfss	3,2
  2717  030D  2B1E               	goto	l3706
  2718  030E                     l3698:	
  2719  030E  0861               	movf	USBDeviceInit@p^(0+128),w
  2720  030F  0086               	movwf	6
  2721  0310  0862               	movf	(USBDeviceInit@p+1)^(0+128),w
  2722  0311  0087               	movwf	7
  2723  0312  0181               	clrf	1
  2724  0313  3001               	movlw	1
  2725  0314  07E1               	addwf	USBDeviceInit@p^(0+128),f
  2726  0315  3000               	movlw	0
  2727  0316  3DE2               	addwfc	(USBDeviceInit@p+1)^(0+128),f
  2728  0317  3001               	movlw	1
  2729  0318  00E0               	movwf	??_USBDeviceInit^(0+128)
  2730  0319  0860               	movf	??_USBDeviceInit^(0+128),w
  2731  031A  07E3               	addwf	USBDeviceInit@i_901^(0+128),f
  2732  031B  0863               	movf	USBDeviceInit@i_901^(0+128),w
  2733  031C  1903               	btfsc	3,2
  2734  031D  2B0E               	goto	l3698
  2735  031E                     l3706:	
  2736                           
  2737                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2738  031E  3016               	movlw	22
  2739  031F  003D               	movlb	29	; select bank29
  2740  0320  0091               	movwf	17	;volatile
  2741  0321  309F               	movlw	159
  2742  0322  0097               	movwf	23	;volatile
  2743  0323  307B               	movlw	123
  2744  0324  0092               	movwf	18	;volatile
  2745                           
  2746                           ;usb_device.c: 301: ;
  2747                           ;usb_device.c: 304: ;
  2748                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  2749  0325  0021               	movlb	1	; select bank1
  2750  0326  01E4               	clrf	USBDeviceInit@i^(0+128)
  2751  0327  3008               	movlw	8
  2752  0328  0264               	subwf	USBDeviceInit@i^(0+128),w
  2753  0329  1803               	btfsc	3,0
  2754  032A  2B44               	goto	l255
  2755  032B                     l3714:	
  2756                           
  2757                           ;usb_device.c: 308: {
  2758                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  2759  032B  0864               	movf	USBDeviceInit@i^(0+128),w
  2760  032C  00E0               	movwf	??_USBDeviceInit^(0+128)
  2761  032D  3001               	movlw	1
  2762  032E                     u2855:	
  2763  032E  35E0               	lslf	??_USBDeviceInit^(0+128),f
  2764  032F  3EFF               	addlw	-1
  2765  0330  1D03               	skipz
  2766  0331  2B2E               	goto	u2855
  2767  0332  3560               	lslf	??_USBDeviceInit^(0+128),w
  2768  0333  3E20               	addlw	32
  2769  0334  0086               	movwf	6
  2770  0335  0187               	clrf	7
  2771  0336  3000               	movlw	0
  2772  0337  3FC0               	movwi [0]fsr1
  2773  0338  3000               	movlw	0
  2774  0339  3FC1               	movwi [1]fsr1
  2775  033A  3FC2               	movwi [2]fsr1
  2776  033B  3FC3               	movwi [3]fsr1
  2777  033C  3001               	movlw	1
  2778  033D  00E0               	movwf	??_USBDeviceInit^(0+128)
  2779  033E  0860               	movf	??_USBDeviceInit^(0+128),w
  2780  033F  07E4               	addwf	USBDeviceInit@i^(0+128),f
  2781  0340  3008               	movlw	8
  2782  0341  0264               	subwf	USBDeviceInit@i^(0+128),w
  2783  0342  1C03               	skipc
  2784  0343  2B2B               	goto	l3714
  2785  0344                     l255:	
  2786                           
  2787                           ;usb_device.c: 310: }
  2788                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  2789  0344  003D               	movlb	29	; select bank29
  2790  0345  170E               	bsf	14,6	;volatile
  2791                           
  2792                           ;usb_device.c: 316: UADDR = 0x00;
  2793  0346  0196               	clrf	22	;volatile
  2794                           
  2795                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  2796  0347  120E               	bcf	14,4	;volatile
  2797                           
  2798                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  2799  0348  130E               	bcf	14,6	;volatile
  2800  0349                     l3726:	
  2801                           ;usb_device.c: 325: do
  2802                           
  2803                           
  2804                           ;usb_device.c: 326: {
  2805                           ;usb_device.c: 327: (UIR &= 0xF7);
  2806  0349  30F7               	movlw	247
  2807  034A  0021               	movlb	1	; select bank1
  2808  034B  00E0               	movwf	??_USBDeviceInit^(0+128)
  2809  034C  0860               	movf	??_USBDeviceInit^(0+128),w
  2810  034D  003D               	movlb	29	; select bank29
  2811  034E  0590               	andwf	16,f	;volatile
  2812                           
  2813                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  2814  034F  0022               	movlb	2	; select bank2
  2815  0350  01E9               	clrf	(_inPipes^(0+256)+2)	;volatile
  2816                           
  2817                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  2818  0351  01E2               	clrf	(_outPipes^(0+256)+2)	;volatile
  2819                           
  2820                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  2821  0352  01E3               	clrf	(_outPipes^(0+256)+3)	;volatile
  2822  0353  01E4               	clrf	((_outPipes+1)^(0+256)+3)	;volatile
  2823                           
  2824                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  2825  0354  003D               	movlb	29	; select bank29
  2826  0355  1990               	btfsc	16,3	;volatile
  2827  0356  2B49               	goto	l3726
  2828                           
  2829                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  2830  0357  3001               	movlw	1
  2831  0358  0021               	movlb	1	; select bank1
  2832  0359  00E0               	movwf	??_USBDeviceInit^(0+128)
  2833  035A  0860               	movf	??_USBDeviceInit^(0+128),w
  2834  035B  0023               	movlb	3	; select bank3
  2835  035C  00B7               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  2836                           
  2837                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  2838  035D  3001               	movlw	1
  2839  035E  0021               	movlb	1	; select bank1
  2840  035F  00E0               	movwf	??_USBDeviceInit^(0+128)
  2841  0360  0860               	movf	??_USBDeviceInit^(0+128),w
  2842  0361  0023               	movlb	3	; select bank3
  2843  0362  00B8               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  2844                           
  2845                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  2846  0363  01B5               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  2847                           
  2848                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  2849  0364  01B6               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  2850                           
  2851                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  2852  0365  01B4               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  2853                           
  2854                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(1+1u); i++)
  2855  0366  0021               	movlb	1	; select bank1
  2856  0367  01E4               	clrf	USBDeviceInit@i^(0+128)
  2857  0368  3002               	movlw	2
  2858  0369  0264               	subwf	USBDeviceInit@i^(0+128),w
  2859  036A  1803               	btfsc	3,0
  2860  036B  2B8F               	goto	l3754
  2861  036C                     l3748:	
  2862                           
  2863                           ;usb_device.c: 346: {
  2864                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  2865  036C  3564               	lslf	USBDeviceInit@i^(0+128),w
  2866  036D  3E66               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2867  036E  0086               	movwf	6
  2868  036F  0187               	clrf	7
  2869  0370  3000               	movlw	0
  2870  0371  3FC0               	movwi [0]fsr1
  2871  0372  3FC1               	movwi [1]fsr1
  2872                           
  2873                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  2874  0373  3564               	lslf	USBDeviceInit@i^(0+128),w
  2875  0374  3EA4               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2876  0375  0086               	movwf	6
  2877  0376  3001               	movlw	1	; select bank3/4
  2878  0377  0087               	movwf	7
  2879  0378  3000               	movlw	0
  2880  0379  3FC0               	movwi [0]fsr1
  2881  037A  3FC1               	movwi [1]fsr1
  2882                           
  2883                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  2884  037B  0864               	movf	USBDeviceInit@i^(0+128),w
  2885  037C  3EAE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  2886  037D  0086               	movwf	6
  2887  037E  3001               	movlw	1	; select bank3/4
  2888  037F  0087               	movwf	7
  2889  0380  0181               	clrf	1
  2890                           
  2891                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  2892  0381  0864               	movf	USBDeviceInit@i^(0+128),w
  2893  0382  3EB0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  2894  0383  0086               	movwf	6
  2895  0384  3001               	movlw	1	; select bank3/4
  2896  0385  0087               	movwf	7
  2897  0386  0181               	clrf	1
  2898  0387  3001               	movlw	1
  2899  0388  00E0               	movwf	??_USBDeviceInit^(0+128)
  2900  0389  0860               	movf	??_USBDeviceInit^(0+128),w
  2901  038A  07E4               	addwf	USBDeviceInit@i^(0+128),f
  2902  038B  3002               	movlw	2
  2903  038C  0264               	subwf	USBDeviceInit@i^(0+128),w
  2904  038D  1C03               	skipc
  2905  038E  2B6C               	goto	l3748
  2906  038F                     l3754:	
  2907                           
  2908                           ;usb_device.c: 351: }
  2909                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  2910  038F  3028               	movlw	40
  2911  0390  0020               	movlb	0	; select bank0
  2912  0391  00E6               	movwf	_pBDTEntryIn
  2913  0392  3000               	movlw	0
  2914  0393  00E7               	movwf	_pBDTEntryIn+1
  2915                           
  2916                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  2917  0394  3016               	movlw	22
  2918  0395  003D               	movlb	29	; select bank29
  2919  0396  0098               	movwf	24	;volatile
  2920                           
  2921                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  2922  0397  3000               	movlw	0
  2923  0398  0020               	movlb	0	; select bank0
  2924  0399  00A3               	movwf	35	;volatile
  2925  039A  3040               	movlw	64
  2926  039B  00A2               	movwf	34	;volatile
  2927                           
  2928                           ;usb_device.c: 359: BDT[0].CNT = 8;
  2929  039C  3008               	movlw	8
  2930  039D  00A1               	movwf	33	;volatile
  2931                           
  2932                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  2933  039E  3004               	movlw	4
  2934  039F  0021               	movlb	1	; select bank1
  2935  03A0  00E0               	movwf	??_USBDeviceInit^(0+128)
  2936  03A1  0860               	movf	??_USBDeviceInit^(0+128),w
  2937  03A2  0020               	movlb	0	; select bank0
  2938  03A3  00A0               	movwf	32	;volatile
  2939                           
  2940                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  2941  03A4  17A0               	bsf	32,7	;volatile
  2942                           
  2943                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  2944  03A5  0021               	movlb	1	; select bank1
  2945  03A6  01EE               	clrf	_USBActiveConfiguration^(0+128)	;volatile
  2946                           
  2947                           ;usb_device.c: 366: USB1msTickCount = 0;
  2948  03A7  3000               	movlw	0
  2949  03A8  0023               	movlb	3	; select bank3
  2950  03A9  00A3               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  2951  03AA  3000               	movlw	0
  2952  03AB  00A2               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  2953  03AC  3000               	movlw	0
  2954  03AD  00A1               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  2955  03AE  3000               	movlw	0
  2956  03AF  00A0               	movwf	_USB1msTickCount^(0+384)	;volatile
  2957                           
  2958                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  2959  03B0  01B9               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  2960                           
  2961                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  2962  03B1  0020               	movlb	0	; select bank0
  2963  03B2  01EC               	clrf	_USBDeviceState	;volatile
  2964  03B3  0008               	return
  2965  03B4                     __end_of_USBDeviceInit:	
  2966                           
  2967                           	psect	text2
  2968  09EE                     __ptext2:	
  2969 ;; *************** function _USBDeviceAttach *****************
  2970 ;; Defined at:
  2971 ;;		line 1352 in file "../../../../../../framework/usb/src/usb_device.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2987 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;Total ram usage:        1 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:   10
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function _USBDeviceAttach
  3001  09EE                     _USBDeviceAttach:	
  3002                           
  3003                           ;usb_device.c: 1356: {
  3004                           ;usb_device.c: 1357: if(1 == 1)
  3005                           
  3006                           ;incstack = 0
  3007                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  3008  09EE  0020               	movlb	0	; select bank0
  3009  09EF  086C               	movf	_USBDeviceState,w	;volatile
  3010  09F0  1D03               	btfss	3,2
  3011  09F1  0008               	return
  3012                           
  3013                           ;usb_device.c: 1358: {
  3014                           ;usb_device.c: 1360: UCON = 0;
  3015  09F2  003D               	movlb	29	; select bank29
  3016  09F3  018E               	clrf	14	;volatile
  3017                           
  3018                           ;usb_device.c: 1363: UIE = 0;
  3019  09F4  0192               	clrf	18	;volatile
  3020                           
  3021                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  3022  09F5  3016               	movlw	22
  3023  09F6  0091               	movwf	17	;volatile
  3024  09F7  309F               	movlw	159
  3025  09F8  0097               	movwf	23	;volatile
  3026  09F9  307B               	movlw	123
  3027  09FA  0092               	movwf	18	;volatile
  3028                           
  3029                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  3030  09FB  0021               	movlb	1	; select bank1
  3031  09FC  1512               	bsf	18,2	;volatile
  3032  09FD  170B               	bsf	11,6	;volatile
  3033  09FE  178B               	bsf	11,7	;volatile
  3034  09FF                     l315:	
  3035                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  3036                           
  3037  09FF  003D               	movlb	29	; select bank29
  3038  0A00  198E               	btfsc	14,3	;volatile
  3039  0A01  2A04               	goto	l3892
  3040  0A02  158E               	bsf	14,3	;volatile
  3041  0A03  29FF               	goto	l315
  3042  0A04                     l3892:	
  3043                           
  3044                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  3045  0A04  3001               	movlw	1
  3046  0A05  0021               	movlb	1	; select bank1
  3047  0A06  00E0               	movwf	??_USBDeviceAttach^(0+128)
  3048  0A07  0860               	movf	??_USBDeviceAttach^(0+128),w
  3049  0A08  0020               	movlb	0	; select bank0
  3050  0A09  00EC               	movwf	_USBDeviceState	;volatile
  3051  0A0A  0008               	return
  3052  0A0B                     __end_of_USBDeviceAttach:	
  3053                           
  3054                           	psect	text3
  3055  0A8C                     __ptext3:	
  3056 ;; *************** function _SYSTEM_Initialize *****************
  3057 ;; Defined at:
  3058 ;;		line 86 in file "system.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  state           1    wreg     enum E2684
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  state           1    1[BANK1 ] enum E2684
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3073 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;Total ram usage:        1 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:   11
  3079 ;; This function calls:
  3080 ;;		_ADC_Enable
  3081 ;;		_ADC_SetConfiguration
  3082 ;;		_BUTTON_Enable
  3083 ;;		_LED_Enable
  3084 ;; This function is called by:
  3085 ;;		_main
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           
  3090                           ;psect for function _SYSTEM_Initialize
  3091  0A8C                     _SYSTEM_Initialize:	
  3092                           
  3093                           ;incstack = 0
  3094                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3095                           ;SYSTEM_Initialize@state stored from wreg
  3096  0A8C  0021               	movlb	1	; select bank1
  3097  0A8D  00E1               	movwf	SYSTEM_Initialize@state^(0+128)
  3098                           
  3099                           ;system.c: 88: switch(state)
  3100  0A8E  2AA3               	goto	l3904
  3101  0A8F                     l3896:	
  3102                           ;system.c: 89: {
  3103                           ;system.c: 90: case SYSTEM_STATE_USB_START:
  3104                           
  3105                           
  3106                           ;system.c: 97: LED_Enable(LED_D1);
  3107  0A8F  3001               	movlw	1
  3108  0A90  3189  2127  318A   	fcall	_LED_Enable
  3109                           
  3110                           ;system.c: 98: LED_Enable(LED_D2);
  3111  0A93  3002               	movlw	2
  3112  0A94  3189  2127  318A   	fcall	_LED_Enable
  3113                           
  3114                           ;system.c: 100: BUTTON_Enable(BUTTON_S1);
  3115  0A97  3001               	movlw	1
  3116  0A98  3188  20F3  318A   	fcall	_BUTTON_Enable
  3117                           
  3118                           ;system.c: 102: ADC_SetConfiguration(ADC_CONFIGURATION_DEFAULT);
  3119  0A9B  3000               	movlw	0
  3120  0A9C  3188  20E8  318A   	fcall	_ADC_SetConfiguration
  3121                           
  3122                           ;system.c: 103: ADC_Enable(ADC_CHANNEL_10);
  3123  0A9F  300A               	movlw	10
  3124  0AA0  3189  210B         	fcall	_ADC_Enable
  3125                           
  3126                           ;system.c: 111: }
  3127                           
  3128                           ;system.c: 110: break;
  3129                           
  3130                           ;system.c: 109: case SYSTEM_STATE_USB_RESUME:
  3131                           
  3132                           ;system.c: 107: break;
  3133                           
  3134                           ;system.c: 106: case SYSTEM_STATE_USB_SUSPEND:
  3135                           
  3136                           ;system.c: 104: break;
  3137  0AA2  0008               	return
  3138  0AA3                     l3904:	
  3139  0AA3  0021               	movlb	1	; select bank1
  3140  0AA4  0861               	movf	SYSTEM_Initialize@state^(0+128),w
  3141                           
  3142                           ; Switch size 1, requested type "space"
  3143                           ; Number of cases is 3, Range of values is 0 to 2
  3144                           ; switch strategies available:
  3145                           ; Name         Instructions Cycles
  3146                           ; simple_byte           10     6 (average)
  3147                           ; direct_byte           12     6 (fixed)
  3148                           ; jumptable            260     6 (fixed)
  3149                           ;	Chosen strategy is simple_byte
  3150  0AA5  3A00               	xorlw	0	; case 0
  3151  0AA6  1903               	skipnz
  3152  0AA7  2A8F               	goto	l3896
  3153  0AA8  3A01               	xorlw	1	; case 1
  3154  0AA9  1903               	skipnz
  3155  0AAA  2AAF               	goto	l649
  3156  0AAB  3A03               	xorlw	3	; case 2
  3157  0AAC  1903               	skipnz
  3158  0AAD  2AAF               	goto	l649
  3159  0AAE  2AAF               	goto	l649
  3160  0AAF                     l649:	
  3161  0AAF  0008               	return
  3162  0AB0                     __end_of_SYSTEM_Initialize:	
  3163                           
  3164                           	psect	text4
  3165  0927                     __ptext4:	
  3166 ;; *************** function _LED_Enable *****************
  3167 ;; Defined at:
  3168 ;;		line 220 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  led             1    wreg     enum E2
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  led             1    0[BANK1 ] enum E2
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3183 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3185 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3186 ;;Total ram usage:        1 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:   10
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_SYSTEM_Initialize
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           
  3197                           ;psect for function _LED_Enable
  3198  0927                     _LED_Enable:	
  3199                           
  3200                           ;incstack = 0
  3201                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  3202                           ;LED_Enable@led stored from wreg
  3203  0927  0021               	movlb	1	; select bank1
  3204  0928  00E0               	movwf	LED_Enable@led^(0+128)
  3205                           
  3206                           ;leds.c: 222: switch(led)
  3207  0929  2932               	goto	l3470
  3208  092A                     l64:	
  3209                           ;leds.c: 223: {
  3210                           ;leds.c: 224: case LED_D1:
  3211                           
  3212                           
  3213                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  3214  092A  100E               	bcf	14,0	;volatile
  3215                           
  3216                           ;leds.c: 226: break;
  3217  092B  0008               	return
  3218  092C                     l66:	
  3219                           ;leds.c: 228: case LED_D2:
  3220                           
  3221                           
  3222                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  3223  092C  108E               	bcf	14,1	;volatile
  3224                           
  3225                           ;leds.c: 230: break;
  3226  092D  0008               	return
  3227  092E                     l67:	
  3228                           ;leds.c: 232: case LED_D3:
  3229                           
  3230                           
  3231                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  3232  092E  110E               	bcf	14,2	;volatile
  3233                           
  3234                           ;leds.c: 234: break;
  3235  092F  0008               	return
  3236  0930                     l68:	
  3237                           ;leds.c: 236: case LED_D4:
  3238                           
  3239                           
  3240                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  3241  0930  118E               	bcf	14,3	;volatile
  3242                           
  3243                           ;leds.c: 242: }
  3244                           
  3245                           ;leds.c: 241: break;
  3246                           
  3247                           ;leds.c: 240: case LED_NONE:
  3248                           
  3249                           ;leds.c: 238: break;
  3250  0931  0008               	return
  3251  0932                     l3470:	
  3252  0932  0860               	movf	LED_Enable@led^(0+128),w
  3253                           
  3254                           ; Switch size 1, requested type "space"
  3255                           ; Number of cases is 5, Range of values is 0 to 4
  3256                           ; switch strategies available:
  3257                           ; Name         Instructions Cycles
  3258                           ; direct_byte           16     6 (fixed)
  3259                           ; simple_byte           16     9 (average)
  3260                           ; jumptable            260     6 (fixed)
  3261                           ;	Chosen strategy is direct_byte
  3262  0933  0084               	movwf	4
  3263  0934  3005               	movlw	5
  3264  0935  0204               	subwf	4,w
  3265  0936  1803               	skipnc
  3266  0937  0008               	return
  3267  0938  3188               	movlp	high S4188
  3268  0939  3504               	lslf	4,w
  3269  093A  3E1A               	addlw	low S4188
  3270  093B  0082               	movwf	2
  3271  093C                     l70:	
  3272  093C  0008               	return
  3273  093D                     __end_of_LED_Enable:	
  3274                           
  3275                           	psect	swtext1
  3276  081A                     __pswtext1:	
  3277  081A                     S4188:	
  3278  081A  3189  293C         	ljmp	l70
  3279  081C  3189  292A         	ljmp	l64
  3280  081E  3189  292C         	ljmp	l66
  3281  0820  3189  292E         	ljmp	l67
  3282  0822  3189  2930         	ljmp	l68
  3283                           
  3284                           	psect	text5
  3285  08F3                     __ptext5:	
  3286 ;; *************** function _BUTTON_Enable *****************
  3287 ;; Defined at:
  3288 ;;		line 85 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/buttons.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  button          1    wreg     enum E2617
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  button          1    0[BANK1 ] enum E2617
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3305 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3306 ;;Total ram usage:        1 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:   10
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_SYSTEM_Initialize
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           
  3317                           ;psect for function _BUTTON_Enable
  3318  08F3                     _BUTTON_Enable:	
  3319                           
  3320                           ;incstack = 0
  3321                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  3322                           ;BUTTON_Enable@button stored from wreg
  3323  08F3  0021               	movlb	1	; select bank1
  3324  08F4  00E0               	movwf	BUTTON_Enable@button^(0+128)
  3325                           
  3326                           ;buttons.c: 94: }
  3327                           
  3328                           ;buttons.c: 93: break;
  3329                           
  3330                           ;buttons.c: 92: case BUTTON_NONE:
  3331                           
  3332                           ;buttons.c: 90: break;
  3333                           
  3334                           ;buttons.c: 88: {
  3335                           ;buttons.c: 89: case BUTTON_S1:
  3336                           
  3337                           ;buttons.c: 87: switch(button)
  3338  08F5  0860               	movf	BUTTON_Enable@button^(0+128),w
  3339                           
  3340                           ; Switch size 1, requested type "space"
  3341                           ; Number of cases is 2, Range of values is 0 to 1
  3342                           ; switch strategies available:
  3343                           ; Name         Instructions Cycles
  3344                           ; simple_byte            7     4 (average)
  3345                           ; direct_byte           10     6 (fixed)
  3346                           ; jumptable            260     6 (fixed)
  3347                           ;	Chosen strategy is simple_byte
  3348  08F6  3A00               	xorlw	0	; case 0
  3349  08F7  1903               	skipnz
  3350  08F8  28FD               	goto	l16
  3351  08F9  3A01               	xorlw	1	; case 1
  3352  08FA  1903               	skipnz
  3353  08FB  28FD               	goto	l16
  3354  08FC  28FD               	goto	l16
  3355  08FD                     l16:	
  3356  08FD  0008               	return
  3357  08FE                     __end_of_BUTTON_Enable:	
  3358                           
  3359                           	psect	text6
  3360  08E8                     __ptext6:	
  3361 ;; *************** function _ADC_SetConfiguration *****************
  3362 ;; Defined at:
  3363 ;;		line 157 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/adc.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  configuratio    1    wreg     enum E33
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  configuratio    1    0[BANK1 ] enum E33
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      unsigned char 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;Total ram usage:        1 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:   10
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_SYSTEM_Initialize
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           
  3392                           ;psect for function _ADC_SetConfiguration
  3393  08E8                     _ADC_SetConfiguration:	
  3394                           
  3395                           ;incstack = 0
  3396                           ; Regs used in _ADC_SetConfiguration: [wreg+status,2+status,0]
  3397                           ;ADC_SetConfiguration@configuration stored from wreg
  3398  08E8  0021               	movlb	1	; select bank1
  3399  08E9  00E0               	movwf	ADC_SetConfiguration@configuration^(0+128)
  3400                           
  3401                           ;adc.c: 159: if(configuration == ADC_CONFIGURATION_DEFAULT)
  3402  08EA  0860               	movf	ADC_SetConfiguration@configuration^(0+128),w
  3403  08EB  1D03               	btfss	3,2
  3404  08EC  0008               	return
  3405                           
  3406                           ;adc.c: 160: {
  3407                           ;adc.c: 161: ADCON0=0x29;
  3408  08ED  3029               	movlw	41
  3409  08EE  009D               	movwf	29	;volatile
  3410                           
  3411                           ;adc.c: 162: ADCON1=0xE0;
  3412  08EF  30E0               	movlw	224
  3413  08F0  009E               	movwf	30	;volatile
  3414                           
  3415                           ;adc.c: 163: ADCON2=0x00;
  3416  08F1  019F               	clrf	31	;volatile
  3417                           
  3418                           ;adc.c: 165: return 1;
  3419                           ;	Return value of _ADC_SetConfiguration is never used
  3420  08F2  0008               	return
  3421  08F3                     __end_of_ADC_SetConfiguration:	
  3422                           ;adc.c: 166: }
  3423                           ;adc.c: 168: return 0;
  3424                           ;	Return value of _ADC_SetConfiguration is never used
  3425                           
  3426                           
  3427                           	psect	text7
  3428  090B                     __ptext7:	
  3429 ;; *************** function _ADC_Enable *****************
  3430 ;; Defined at:
  3431 ;;		line 131 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/adc.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  channel         1    wreg     enum E30
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  channel         1    0[BANK1 ] enum E30
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      unsigned char 
  3438 ;; Registers used:
  3439 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3446 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3448 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3449 ;;Total ram usage:        1 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:   10
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		_SYSTEM_Initialize
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function _ADC_Enable
  3461  090B                     _ADC_Enable:	
  3462                           
  3463                           ;incstack = 0
  3464                           ; Regs used in _ADC_Enable: [wreg-fsr0h+status,2+status,0]
  3465                           ;ADC_Enable@channel stored from wreg
  3466  090B  0021               	movlb	1	; select bank1
  3467  090C  00E0               	movwf	ADC_Enable@channel^(0+128)
  3468                           
  3469                           ;adc.c: 133: switch(channel)
  3470  090D  2912               	goto	l3496
  3471  090E                     l110:	
  3472                           ;adc.c: 134: {
  3473                           ;adc.c: 135: case ADC_CHANNEL_10:
  3474                           
  3475                           
  3476                           ;adc.c: 136: TRISBbits.TRISB4 = 1;
  3477  090E  160D               	bsf	13,4	;volatile
  3478                           
  3479                           ;adc.c: 137: ANSELBbits.ANSB4 = 1;
  3480  090F  0023               	movlb	3	; select bank3
  3481  0910  160D               	bsf	13,4	;volatile
  3482                           
  3483                           ;adc.c: 142: }
  3484                           
  3485                           ;adc.c: 141: return 0;
  3486                           ;	Return value of _ADC_Enable is never used
  3487                           
  3488                           ;adc.c: 140: default:
  3489                           
  3490                           ;adc.c: 138: return 1;
  3491                           ;	Return value of _ADC_Enable is never used
  3492  0911  0008               	return
  3493  0912                     l3496:	
  3494  0912  0021               	movlb	1	; select bank1
  3495  0913  0860               	movf	ADC_Enable@channel^(0+128),w
  3496                           
  3497                           ; Switch size 1, requested type "space"
  3498                           ; Number of cases is 1, Range of values is 10 to 10
  3499                           ; switch strategies available:
  3500                           ; Name         Instructions Cycles
  3501                           ; simple_byte            4     3 (average)
  3502                           ; direct_byte           11     9 (fixed)
  3503                           ; jumptable            263     9 (fixed)
  3504                           ;	Chosen strategy is simple_byte
  3505  0914  3A0A               	xorlw	10	; case 10
  3506  0915  1903               	skipnz
  3507  0916  290E               	goto	l110
  3508  0917  2918               	goto	l111
  3509  0918                     l111:	
  3510  0918  0008               	return
  3511  0919                     __end_of_ADC_Enable:	
  3512                           
  3513                           	psect	text8
  3514  04FF                     __ptext8:	
  3515 ;; *************** function _APP_DeviceCustomHIDTasks *****************
  3516 ;; Defined at:
  3517 ;;		line 104 in file "../demo_src/app_device_custom_hid.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  pot             2   12[BANK1 ] unsigned int 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3532 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3533 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3534 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3535 ;;Total ram usage:        3 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:   11
  3538 ;; This function calls:
  3539 ;;		_ADC_Read10bit
  3540 ;;		_BUTTON_IsPressed
  3541 ;;		_LED_Toggle
  3542 ;;		_USBTransferOnePacket
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _APP_DeviceCustomHIDTasks
  3550  04FF                     _APP_DeviceCustomHIDTasks:	
  3551                           
  3552                           ;app_device_custom_hid.c: 109: if( USBDeviceState < CONFIGURED_STATE )
  3553                           
  3554                           ;incstack = 0
  3555                           ; Regs used in _APP_DeviceCustomHIDTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3556  04FF  3020               	movlw	32
  3557  0500  0020               	movlb	0	; select bank0
  3558  0501  026C               	subwf	_USBDeviceState,w	;volatile
  3559  0502  1C03               	btfss	3,0
  3560  0503  0008               	return
  3561                           
  3562                           ;app_device_custom_hid.c: 112: }
  3563                           ;app_device_custom_hid.c: 118: if( UCONbits.SUSPND== 1 )
  3564                           
  3565                           ;app_device_custom_hid.c: 110: {
  3566                           ;app_device_custom_hid.c: 111: return;
  3567  0504  003D               	movlb	29	; select bank29
  3568  0505  188E               	btfsc	14,1	;volatile
  3569  0506  0008               	return
  3570                           
  3571                           ;app_device_custom_hid.c: 121: }
  3572                           ;app_device_custom_hid.c: 124: if(((USBOutHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          OutHandle & 0x80) != 0x00)) == 0)
  3573                           
  3574                           ;app_device_custom_hid.c: 119: {
  3575                           ;app_device_custom_hid.c: 120: return;
  3576  0507  0023               	movlb	3	; select bank3
  3577  0508  082C               	movf	_USBOutHandle^(0+384),w
  3578  0509  042D               	iorwf	(_USBOutHandle+1)^(0+384),w
  3579  050A  1903               	btfsc	3,2
  3580  050B  2D74               	goto	l3948
  3581  050C  082C               	movf	_USBOutHandle^(0+384),w
  3582  050D  0086               	movwf	6
  3583  050E  082D               	movf	(_USBOutHandle+1)^(0+384),w
  3584  050F  0087               	movwf	7
  3585  0510  1B81               	btfsc	1,7
  3586  0511  0008               	return
  3587  0512  2D74               	goto	l3948
  3588  0513                     l3916:	
  3589                           ;app_device_custom_hid.c: 130: {
  3590                           ;app_device_custom_hid.c: 131: case COMMAND_TOGGLE_LED:
  3591                           
  3592                           ;app_device_custom_hid.c: 125: {
  3593                           ;app_device_custom_hid.c: 129: switch(ReceivedDataBuffer[0])
  3594                           
  3595                           
  3596                           ;app_device_custom_hid.c: 132: LED_Toggle(LED_D2);
  3597  0513  3002               	movlw	2
  3598  0514  318B  23BF  3184   	fcall	_LED_Toggle
  3599                           
  3600                           ;app_device_custom_hid.c: 133: break;
  3601  0517  2D80               	goto	l3950
  3602  0518                     l3918:	
  3603                           ;app_device_custom_hid.c: 134: case COMMAND_GET_BUTTON_STATUS:
  3604                           
  3605                           
  3606                           ;app_device_custom_hid.c: 136: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
  3607  0518  0023               	movlb	3	; select bank3
  3608  0519  082A               	movf	_USBInHandle^(0+384),w
  3609  051A  042B               	iorwf	(_USBInHandle+1)^(0+384),w
  3610  051B  1903               	btfsc	3,2
  3611  051C  2D23               	goto	l3922
  3612  051D  082A               	movf	_USBInHandle^(0+384),w
  3613  051E  0086               	movwf	6
  3614  051F  082B               	movf	(_USBInHandle+1)^(0+384),w
  3615  0520  0087               	movwf	7
  3616  0521  1B81               	btfsc	1,7
  3617  0522  2D80               	goto	l3950
  3618  0523                     l3922:	
  3619                           
  3620                           ;app_device_custom_hid.c: 137: {
  3621                           ;app_device_custom_hid.c: 138: ToSendDataBuffer[0] = 0x81;
  3622  0523  3081               	movlw	129
  3623  0524  0021               	movlb	1	; select bank1
  3624  0525  00EB               	movwf	??_APP_DeviceCustomHIDTasks^(0+128)
  3625  0526  086B               	movf	??_APP_DeviceCustomHIDTasks^(0+128),w
  3626  0527  0022               	movlb	2	; select bank2
  3627  0528  00A0               	movwf	32
  3628                           
  3629                           ;app_device_custom_hid.c: 139: if(BUTTON_IsPressed(BUTTON_S1) == 0)
  3630  0529  3001               	movlw	1
  3631  052A  3189  213D  3184   	fcall	_BUTTON_IsPressed
  3632  052D  3A00               	xorlw	0
  3633  052E  1D03               	skipz
  3634  052F  2D34               	goto	l3928
  3635                           
  3636                           ;app_device_custom_hid.c: 140: {
  3637                           ;app_device_custom_hid.c: 141: ToSendDataBuffer[1] = 0x01;
  3638  0530  0022               	movlb	2	; select bank2
  3639  0531  01A1               	clrf	33
  3640  0532  0AA1               	incf	33,f
  3641                           
  3642                           ;app_device_custom_hid.c: 142: }
  3643  0533  2D5C               	goto	L2
  3644  0534                     l3928:	
  3645                           
  3646                           ;app_device_custom_hid.c: 143: else
  3647                           ;app_device_custom_hid.c: 144: {
  3648                           ;app_device_custom_hid.c: 145: ToSendDataBuffer[1] = 0x00;
  3649  0534  0022               	movlb	2	; select bank2
  3650  0535  01A1               	clrf	33
  3651  0536  2D5C               	goto	L2
  3652  0537                     l3932:	
  3653                           ;app_device_custom_hid.c: 152: case COMMAND_READ_POTENTIOMETER:
  3654                           
  3655                           ;app_device_custom_hid.c: 149: }
  3656                           ;app_device_custom_hid.c: 150: break;
  3657                           
  3658                           ;app_device_custom_hid.c: 146: }
  3659                           ;app_device_custom_hid.c: 148: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
  3660                           
  3661                           
  3662                           ;app_device_custom_hid.c: 153: {
  3663                           ;app_device_custom_hid.c: 154: uint16_t pot;
  3664                           ;app_device_custom_hid.c: 157: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
  3665  0537  0023               	movlb	3	; select bank3
  3666  0538  082A               	movf	_USBInHandle^(0+384),w
  3667  0539  042B               	iorwf	(_USBInHandle+1)^(0+384),w
  3668  053A  1903               	btfsc	3,2
  3669  053B  2D42               	goto	l3936
  3670  053C  082A               	movf	_USBInHandle^(0+384),w
  3671  053D  0086               	movwf	6
  3672  053E  082B               	movf	(_USBInHandle+1)^(0+384),w
  3673  053F  0087               	movwf	7
  3674  0540  1B81               	btfsc	1,7
  3675  0541  2D80               	goto	l3950
  3676  0542                     l3936:	
  3677                           
  3678                           ;app_device_custom_hid.c: 158: {
  3679                           ;app_device_custom_hid.c: 164: pot = ADC_Read10bit(ADC_CHANNEL_10);
  3680  0542  300A               	movlw	10
  3681  0543  318A  22D5  3184   	fcall	_ADC_Read10bit
  3682  0546  0021               	movlb	1	; select bank1
  3683  0547  0861               	movf	(?_ADC_Read10bit+1)^(0+128),w
  3684  0548  00ED               	movwf	(APP_DeviceCustomHIDTasks@pot+1)^(0+128)
  3685  0549  0860               	movf	?_ADC_Read10bit^(0+128),w
  3686  054A  00EC               	movwf	APP_DeviceCustomHIDTasks@pot^(0+128)
  3687                           
  3688                           ;app_device_custom_hid.c: 166: ToSendDataBuffer[0] = 0x37;
  3689  054B  3037               	movlw	55
  3690  054C  00EB               	movwf	??_APP_DeviceCustomHIDTasks^(0+128)
  3691  054D  086B               	movf	??_APP_DeviceCustomHIDTasks^(0+128),w
  3692  054E  0022               	movlb	2	; select bank2
  3693  054F  00A0               	movwf	32
  3694                           
  3695                           ;app_device_custom_hid.c: 167: ToSendDataBuffer[1] = (uint8_t)pot;
  3696  0550  0021               	movlb	1	; select bank1
  3697  0551  086C               	movf	APP_DeviceCustomHIDTasks@pot^(0+128),w
  3698  0552  00EB               	movwf	??_APP_DeviceCustomHIDTasks^(0+128)
  3699  0553  086B               	movf	??_APP_DeviceCustomHIDTasks^(0+128),w
  3700  0554  0022               	movlb	2	; select bank2
  3701  0555  00A1               	movwf	33
  3702                           
  3703                           ;app_device_custom_hid.c: 168: ToSendDataBuffer[2] = pot >> 8;
  3704  0556  0021               	movlb	1	; select bank1
  3705  0557  086D               	movf	(APP_DeviceCustomHIDTasks@pot+1)^(0+128),w
  3706  0558  00EB               	movwf	??_APP_DeviceCustomHIDTasks^(0+128)
  3707  0559  086B               	movf	??_APP_DeviceCustomHIDTasks^(0+128),w
  3708  055A  0022               	movlb	2	; select bank2
  3709  055B  00A2               	movwf	34
  3710  055C                     L2:	
  3711                           
  3712                           ;app_device_custom_hid.c: 172: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
  3713  055C  0021               	movlb	1	; select bank1
  3714  055D  01E0               	clrf	USBTransferOnePacket@dir^(0+128)
  3715  055E  0AE0               	incf	USBTransferOnePacket@dir^(0+128),f
  3716  055F  3020               	movlw	32
  3717  0560  00E1               	movwf	USBTransferOnePacket@data^(0+128)
  3718  0561  3001               	movlw	1
  3719  0562  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  3720  0563  3040               	movlw	64
  3721  0564  00EB               	movwf	??_APP_DeviceCustomHIDTasks^(0+128)
  3722  0565  086B               	movf	??_APP_DeviceCustomHIDTasks^(0+128),w
  3723  0566  00E3               	movwf	USBTransferOnePacket@len^(0+128)
  3724  0567  3001               	movlw	1
  3725  0568  3186  26AF  3184   	fcall	_USBTransferOnePacket
  3726  056B  0021               	movlb	1	; select bank1
  3727  056C  0861               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  3728  056D  0023               	movlb	3	; select bank3
  3729  056E  00AB               	movwf	(_USBInHandle+1)^(0+384)
  3730  056F  0021               	movlb	1	; select bank1
  3731  0570  0860               	movf	?_USBTransferOnePacket^(0+128),w
  3732  0571  0023               	movlb	3	; select bank3
  3733  0572  00AA               	movwf	_USBInHandle^(0+384)
  3734                           
  3735                           ;app_device_custom_hid.c: 176: }
  3736                           
  3737                           ;app_device_custom_hid.c: 173: }
  3738                           ;app_device_custom_hid.c: 174: }
  3739                           ;app_device_custom_hid.c: 175: break;
  3740  0573  2D80               	goto	l3950
  3741  0574                     l3948:	
  3742  0574  0021               	movlb	1	; select bank1
  3743  0575  0820               	movf	32,w
  3744                           
  3745                           ; Switch size 1, requested type "space"
  3746                           ; Number of cases is 3, Range of values is 55 to 129
  3747                           ; switch strategies available:
  3748                           ; Name         Instructions Cycles
  3749                           ; simple_byte           10     6 (average)
  3750                           ; direct_byte          159     9 (fixed)
  3751                           ; jumptable            263     9 (fixed)
  3752                           ;	Chosen strategy is simple_byte
  3753  0576  3A37               	xorlw	55	; case 55
  3754  0577  1903               	skipnz
  3755  0578  2D37               	goto	l3932
  3756  0579  3AB7               	xorlw	183	; case 128
  3757  057A  1903               	skipnz
  3758  057B  2D13               	goto	l3916
  3759  057C  3A01               	xorlw	1	; case 129
  3760  057D  1903               	skipnz
  3761  057E  2D18               	goto	l3918
  3762  057F  2D80               	goto	l3950
  3763  0580                     l3950:	
  3764                           
  3765                           ;app_device_custom_hid.c: 179: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
  3766  0580  0021               	movlb	1	; select bank1
  3767  0581  01E0               	clrf	USBTransferOnePacket@dir^(0+128)
  3768  0582  30A0               	movlw	160
  3769  0583  00E1               	movwf	USBTransferOnePacket@data^(0+128)
  3770  0584  3000               	movlw	0
  3771  0585  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  3772  0586  3040               	movlw	64
  3773  0587  00EB               	movwf	??_APP_DeviceCustomHIDTasks^(0+128)
  3774  0588  086B               	movf	??_APP_DeviceCustomHIDTasks^(0+128),w
  3775  0589  00E3               	movwf	USBTransferOnePacket@len^(0+128)
  3776  058A  3001               	movlw	1
  3777  058B  3186  26AF         	fcall	_USBTransferOnePacket
  3778  058D  0021               	movlb	1	; select bank1
  3779  058E  0861               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  3780  058F  0023               	movlb	3	; select bank3
  3781  0590  00AD               	movwf	(_USBOutHandle+1)^(0+384)
  3782  0591  0021               	movlb	1	; select bank1
  3783  0592  0860               	movf	?_USBTransferOnePacket^(0+128),w
  3784  0593  0023               	movlb	3	; select bank3
  3785  0594  00AC               	movwf	_USBOutHandle^(0+384)
  3786  0595  0008               	return
  3787  0596                     __end_of_APP_DeviceCustomHIDTasks:	
  3788                           
  3789                           	psect	text9
  3790  06AF                     __ptext9:	
  3791 ;; *************** function _USBTransferOnePacket *****************
  3792 ;; Defined at:
  3793 ;;		line 995 in file "../../../../../../framework/usb/src/usb_device.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  ep              1    wreg     unsigned char 
  3796 ;;  dir             1    0[BANK1 ] unsigned char 
  3797 ;;  data            2    1[BANK1 ] PTR unsigned char 
  3798 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), 
  3799 ;;  len             1    3[BANK1 ] unsigned char 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  ep              1    8[BANK1 ] unsigned char 
  3802 ;;  handle          2    9[BANK1 ] PTR volatile struct __BD
  3803 ;;		 -> RAM(4096), NULL(0), BDT(32), 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  2    0[BANK1 ] PTR void 
  3806 ;; Registers used:
  3807 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3813 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;Total ram usage:       11 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:   10
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_APP_DeviceCustomHIDTasks
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           
  3828                           ;psect for function _USBTransferOnePacket
  3829  06AF                     _USBTransferOnePacket:	
  3830                           
  3831                           ;incstack = 0
  3832                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  3833                           ;USBTransferOnePacket@ep stored from wreg
  3834  06AF  0021               	movlb	1	; select bank1
  3835  06B0  00E8               	movwf	USBTransferOnePacket@ep^(0+128)
  3836                           
  3837                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  3838                           ;usb_device.c: 1000: if(dir != 0)
  3839  06B1  0860               	movf	USBTransferOnePacket@dir^(0+128),w
  3840  06B2  1903               	btfsc	3,2
  3841  06B3  2EBC               	goto	l3578
  3842                           
  3843                           ;usb_device.c: 1001: {
  3844                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  3845  06B4  3568               	lslf	USBTransferOnePacket@ep^(0+128),w
  3846  06B5  3E66               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3847  06B6  0086               	movwf	6
  3848  06B7  0187               	clrf	7
  3849  06B8  3F40               	moviw [0]fsr1
  3850  06B9  00E9               	movwf	USBTransferOnePacket@handle^(0+128)
  3851  06BA  3F41               	moviw [1]fsr1
  3852  06BB  2EC4               	goto	L3
  3853  06BC                     l3578:	
  3854                           ;usb_device.c: 1004: }
  3855                           
  3856                           
  3857                           ;usb_device.c: 1005: else
  3858                           ;usb_device.c: 1006: {
  3859                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  3860  06BC  3568               	lslf	USBTransferOnePacket@ep^(0+128),w
  3861  06BD  3EA4               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3862  06BE  0086               	movwf	6
  3863  06BF  3001               	movlw	1	; select bank3/4
  3864  06C0  0087               	movwf	7
  3865  06C1  3F40               	moviw [0]fsr1
  3866  06C2  00E9               	movwf	USBTransferOnePacket@handle^(0+128)
  3867  06C3  3F41               	moviw [1]fsr1
  3868  06C4                     L3:	
  3869  06C4  00EA               	movwf	(USBTransferOnePacket@handle+1)^(0+128)
  3870                           
  3871                           ;usb_device.c: 1009: }
  3872                           ;usb_device.c: 1013: if(handle == 0)
  3873  06C5  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  3874  06C6  046A               	iorwf	(USBTransferOnePacket@handle+1)^(0+128),w
  3875  06C7  1D03               	btfss	3,2
  3876  06C8  2ECC               	goto	l3586
  3877                           
  3878                           ;usb_device.c: 1014: {
  3879                           ;usb_device.c: 1015: return 0;
  3880  06C9  01E0               	clrf	?_USBTransferOnePacket^(0+128)
  3881  06CA  01E1               	clrf	(?_USBTransferOnePacket+1)^(0+128)
  3882  06CB  0008               	return
  3883  06CC                     l3586:	
  3884                           
  3885                           ;usb_device.c: 1016: }
  3886                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  3887  06CC  30FF               	movlw	255
  3888  06CD  0561               	andwf	USBTransferOnePacket@data^(0+128),w
  3889  06CE  00E4               	movwf	??_USBTransferOnePacket^(0+128)
  3890  06CF  307F               	movlw	127
  3891  06D0  0562               	andwf	(USBTransferOnePacket@data+1)^(0+128),w
  3892  06D1  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  3893  06D2  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  3894  06D3  0086               	movwf	6
  3895  06D4  086A               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  3896  06D5  0087               	movwf	7
  3897  06D6  3142               	addfsr 1,2
  3898  06D7  0864               	movf	??_USBTransferOnePacket^(0+128),w
  3899  06D8  3FC0               	movwi [0]fsr1
  3900  06D9  0865               	movf	(??_USBTransferOnePacket^(0+128)+1),w
  3901  06DA  3FC1               	movwi [1]fsr1
  3902                           
  3903                           ;usb_device.c: 1030: handle->CNT = len;
  3904  06DB  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  3905  06DC  3E01               	addlw	1
  3906  06DD  00E4               	movwf	??_USBTransferOnePacket^(0+128)
  3907  06DE  3000               	movlw	0
  3908  06DF  3D6A               	addwfc	(USBTransferOnePacket@handle+1)^(0+128),w
  3909  06E0  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  3910  06E1  0864               	movf	??_USBTransferOnePacket^(0+128),w
  3911  06E2  0086               	movwf	6
  3912  06E3  0865               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  3913  06E4  0087               	movwf	7
  3914  06E5  0863               	movf	USBTransferOnePacket@len^(0+128),w
  3915  06E6  0081               	movwf	1
  3916                           
  3917                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  3918  06E7  3040               	movlw	64
  3919  06E8  00E4               	movwf	??_USBTransferOnePacket^(0+128)
  3920  06E9  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  3921  06EA  0086               	movwf	6
  3922  06EB  086A               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  3923  06EC  0087               	movwf	7
  3924  06ED  0864               	movf	??_USBTransferOnePacket^(0+128),w
  3925  06EE  0581               	andwf	1,f
  3926                           
  3927                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  3928  06EF  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  3929  06F0  0086               	movwf	6
  3930  06F1  086A               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  3931  06F2  0087               	movwf	7
  3932  06F3  1581               	bsf	1,3
  3933                           
  3934                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  3935  06F4  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  3936  06F5  0086               	movwf	6
  3937  06F6  086A               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  3938  06F7  0087               	movwf	7
  3939  06F8  1781               	bsf	1,7
  3940                           
  3941                           ;usb_device.c: 1036: if(dir != 0)
  3942  06F9  0860               	movf	USBTransferOnePacket@dir^(0+128),w
  3943  06FA  1903               	btfsc	3,2
  3944  06FB  2F13               	goto	l3596
  3945                           
  3946                           ;usb_device.c: 1037: {
  3947                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  3948  06FC  3568               	lslf	USBTransferOnePacket@ep^(0+128),w
  3949  06FD  3E66               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3950  06FE  0086               	movwf	6
  3951  06FF  0187               	clrf	7
  3952  0700  3F40               	moviw [0]fsr1
  3953  0701  00E4               	movwf	??_USBTransferOnePacket^(0+128)
  3954  0702  3F41               	moviw [1]fsr1
  3955  0703  00E5               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  3956  0704  3004               	movlw	4
  3957  0705  0664               	xorwf	??_USBTransferOnePacket^(0+128),w
  3958  0706  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  3959  0707  3000               	movlw	0
  3960  0708  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  3961  0709  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  3962  070A  3568               	lslf	USBTransferOnePacket@ep^(0+128),w
  3963  070B  3E66               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3964  070C  0086               	movwf	6
  3965  070D  0187               	clrf	7
  3966  070E  0866               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  3967  070F  3FC0               	movwi [0]fsr1
  3968  0710  0867               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  3969  0711  3FC1               	movwi [1]fsr1
  3970                           
  3971                           ;usb_device.c: 1040: }
  3972  0712  2F2B               	goto	l3598
  3973  0713                     l3596:	
  3974                           
  3975                           ;usb_device.c: 1041: else
  3976                           ;usb_device.c: 1042: {
  3977                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  3978  0713  3568               	lslf	USBTransferOnePacket@ep^(0+128),w
  3979  0714  3EA4               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3980  0715  0086               	movwf	6
  3981  0716  3001               	movlw	1	; select bank3/4
  3982  0717  0087               	movwf	7
  3983  0718  3F40               	moviw [0]fsr1
  3984  0719  00E4               	movwf	??_USBTransferOnePacket^(0+128)
  3985  071A  3F41               	moviw [1]fsr1
  3986  071B  00E5               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  3987  071C  3004               	movlw	4
  3988  071D  0664               	xorwf	??_USBTransferOnePacket^(0+128),w
  3989  071E  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  3990  071F  3000               	movlw	0
  3991  0720  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  3992  0721  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  3993  0722  3568               	lslf	USBTransferOnePacket@ep^(0+128),w
  3994  0723  3EA4               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3995  0724  0086               	movwf	6
  3996  0725  3001               	movlw	1	; select bank3/4
  3997  0726  0087               	movwf	7
  3998  0727  0866               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  3999  0728  3FC0               	movwi [0]fsr1
  4000  0729  0867               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  4001  072A  3FC1               	movwi [1]fsr1
  4002  072B                     l3598:	
  4003                           
  4004                           ;usb_device.c: 1045: }
  4005                           ;usb_device.c: 1046: return (void*)handle;
  4006  072B  086A               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  4007  072C  00E1               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  4008  072D  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  4009  072E  00E0               	movwf	?_USBTransferOnePacket^(0+128)
  4010  072F  0008               	return
  4011  0730                     __end_of_USBTransferOnePacket:	
  4012                           
  4013                           	psect	text10
  4014  0BBF                     __ptext10:	
  4015 ;; *************** function _LED_Toggle *****************
  4016 ;; Defined at:
  4017 ;;		line 141 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  led             1    wreg     enum E2
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  led             1    1[BANK1 ] enum E2
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;Total ram usage:        2 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:   10
  4038 ;; This function calls:
  4039 ;;		Nothing
  4040 ;; This function is called by:
  4041 ;;		_APP_DeviceCustomHIDTasks
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           
  4046                           ;psect for function _LED_Toggle
  4047  0BBF                     _LED_Toggle:	
  4048                           
  4049                           ;incstack = 0
  4050                           ; Regs used in _LED_Toggle: [wreg-fsr0h+status,2+status,0]
  4051                           ;LED_Toggle@led stored from wreg
  4052  0BBF  0021               	movlb	1	; select bank1
  4053  0BC0  00E1               	movwf	LED_Toggle@led^(0+128)
  4054                           
  4055                           ;leds.c: 143: switch(led)
  4056  0BC1  2BF9               	goto	l3458
  4057  0BC2                     l3450:	
  4058                           ;leds.c: 144: {
  4059                           ;leds.c: 145: case LED_D1:
  4060                           
  4061                           
  4062                           ;leds.c: 146: LATCbits.LATC0 ^= 1;
  4063  0BC2  0022               	movlb	2	; select bank2
  4064  0BC3  080E               	movf	14,w	;volatile
  4065  0BC4  3901               	andlw	1
  4066  0BC5  0021               	movlb	1	; select bank1
  4067  0BC6  00E0               	movwf	??_LED_Toggle^(0+128)
  4068  0BC7  3001               	movlw	1
  4069  0BC8  06E0               	xorwf	??_LED_Toggle^(0+128),f
  4070  0BC9  0022               	movlb	2	; select bank2
  4071  0BCA  080E               	movf	14,w	;volatile
  4072  0BCB  0021               	movlb	1	; select bank1
  4073  0BCC  0660               	xorwf	??_LED_Toggle^(0+128),w
  4074  0BCD  39FE               	andlw	-2
  4075  0BCE  0660               	xorwf	??_LED_Toggle^(0+128),w
  4076  0BCF  0022               	movlb	2	; select bank2
  4077  0BD0  008E               	movwf	14	;volatile
  4078                           
  4079                           ;leds.c: 147: break;
  4080  0BD1  0008               	return
  4081  0BD2                     l3452:	
  4082                           ;leds.c: 149: case LED_D2:
  4083                           
  4084                           
  4085                           ;leds.c: 150: LATCbits.LATC1 ^= 1;
  4086  0BD2  0022               	movlb	2	; select bank2
  4087  0BD3  0C0E               	rrf	14,w	;volatile
  4088  0BD4  3901               	andlw	1
  4089  0BD5  0021               	movlb	1	; select bank1
  4090  0BD6  00E0               	movwf	??_LED_Toggle^(0+128)
  4091  0BD7  3001               	movlw	1
  4092  0BD8  06E0               	xorwf	??_LED_Toggle^(0+128),f
  4093  0BD9  0DE0               	rlf	??_LED_Toggle^(0+128),f
  4094  0BDA  0022               	movlb	2	; select bank2
  4095  0BDB  080E               	movf	14,w	;volatile
  4096  0BDC  0021               	movlb	1	; select bank1
  4097  0BDD  0660               	xorwf	??_LED_Toggle^(0+128),w
  4098  0BDE  39FD               	andlw	-3
  4099  0BDF  0660               	xorwf	??_LED_Toggle^(0+128),w
  4100  0BE0  0022               	movlb	2	; select bank2
  4101  0BE1  008E               	movwf	14	;volatile
  4102                           
  4103                           ;leds.c: 155: break;
  4104                           
  4105                           ;leds.c: 153: case LED_D3:
  4106                           
  4107                           ;leds.c: 151: break;
  4108  0BE2  0008               	return
  4109  0BE3                     l3454:	
  4110                           ;leds.c: 157: case LED_D4:
  4111                           
  4112                           
  4113                           ;leds.c: 158: LATCbits.LATC3 ^= 1;
  4114  0BE3  0022               	movlb	2	; select bank2
  4115  0BE4  0C0E               	rrf	14,w	;volatile
  4116  0BE5  0021               	movlb	1	; select bank1
  4117  0BE6  00E0               	movwf	??_LED_Toggle^(0+128)
  4118  0BE7  0CE0               	rrf	??_LED_Toggle^(0+128),f
  4119  0BE8  0C60               	rrf	??_LED_Toggle^(0+128),w
  4120  0BE9  3901               	andlw	1
  4121  0BEA  00E0               	movwf	??_LED_Toggle^(0+128)
  4122  0BEB  3001               	movlw	1
  4123  0BEC  06E0               	xorwf	??_LED_Toggle^(0+128),f
  4124  0BED  0DE0               	rlf	??_LED_Toggle^(0+128),f
  4125  0BEE  0DE0               	rlf	??_LED_Toggle^(0+128),f
  4126  0BEF  0DE0               	rlf	??_LED_Toggle^(0+128),f
  4127  0BF0  0022               	movlb	2	; select bank2
  4128  0BF1  080E               	movf	14,w	;volatile
  4129  0BF2  0021               	movlb	1	; select bank1
  4130  0BF3  0660               	xorwf	??_LED_Toggle^(0+128),w
  4131  0BF4  39F7               	andlw	-9
  4132  0BF5  0660               	xorwf	??_LED_Toggle^(0+128),w
  4133  0BF6  0022               	movlb	2	; select bank2
  4134  0BF7  008E               	movwf	14	;volatile
  4135                           
  4136                           ;leds.c: 163: }
  4137                           
  4138                           ;leds.c: 162: break;
  4139                           
  4140                           ;leds.c: 161: case LED_NONE:
  4141                           
  4142                           ;leds.c: 159: break;
  4143  0BF8  0008               	return
  4144  0BF9                     l3458:	
  4145  0BF9  0021               	movlb	1	; select bank1
  4146  0BFA  0861               	movf	LED_Toggle@led^(0+128),w
  4147                           
  4148                           ; Switch size 1, requested type "space"
  4149                           ; Number of cases is 5, Range of values is 0 to 4
  4150                           ; switch strategies available:
  4151                           ; Name         Instructions Cycles
  4152                           ; direct_byte           16     6 (fixed)
  4153                           ; simple_byte           16     9 (average)
  4154                           ; jumptable            260     6 (fixed)
  4155                           ;	Chosen strategy is direct_byte
  4156  0BFB  0084               	movwf	4
  4157  0BFC  3005               	movlw	5
  4158  0BFD  0204               	subwf	4,w
  4159  0BFE  1803               	skipnc
  4160  0BFF  0008               	return
  4161  0C00  3188               	movlp	high S4190
  4162  0C01  3504               	lslf	4,w
  4163  0C02  3E24               	addlw	low S4190
  4164  0C03  0082               	movwf	2
  4165  0C04                     l50:	
  4166  0C04  0008               	return
  4167  0C05                     __end_of_LED_Toggle:	
  4168                           
  4169                           	psect	swtext2
  4170  0824                     __pswtext2:	
  4171  0824                     S4190:	
  4172  0824  318C  2C04         	ljmp	l50
  4173  0826  318B  2BC2         	ljmp	l3450
  4174  0828  318B  2BD2         	ljmp	l3452
  4175  082A  318C  2C04         	ljmp	l50
  4176  082C  318B  2BE3         	ljmp	l3454
  4177                           
  4178                           	psect	text11
  4179  093D                     __ptext11:	
  4180 ;; *************** function _BUTTON_IsPressed *****************
  4181 ;; Defined at:
  4182 ;;		line 55 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/buttons.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  button          1    wreg     enum E2617
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  button          1    0[BANK1 ] enum E2617
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      unsigned char 
  4189 ;; Registers used:
  4190 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;Total ram usage:        1 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:   10
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_APP_DeviceCustomHIDTasks
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           
  4211                           ;psect for function _BUTTON_IsPressed
  4212  093D                     _BUTTON_IsPressed:	
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in _BUTTON_IsPressed: [wreg-fsr0h+status,2+status,0]
  4216                           ;BUTTON_IsPressed@button stored from wreg
  4217  093D  0021               	movlb	1	; select bank1
  4218  093E  00E0               	movwf	BUTTON_IsPressed@button^(0+128)
  4219                           
  4220                           ;buttons.c: 57: switch(button)
  4221  093F  2949               	goto	l3436
  4222  0940                     l3426:	
  4223                           ;buttons.c: 58: {
  4224                           ;buttons.c: 59: case BUTTON_S1:
  4225                           
  4226                           
  4227                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  4228  0940  1003               	clrc
  4229  0941  0020               	movlb	0	; select bank0
  4230  0942  1D8C               	btfss	12,3	;volatile
  4231  0943  1403               	setc
  4232  0944  3000               	movlw	0
  4233  0945  3D09               	addwfc	9,w
  4234  0946  0008               	return
  4235  0947                     l3430:	
  4236                           ;buttons.c: 62: case BUTTON_NONE:
  4237                           
  4238                           
  4239                           ;buttons.c: 63: return 0;
  4240  0947  3000               	movlw	0
  4241  0948  0008               	return
  4242  0949                     l3436:	
  4243                           ;buttons.c: 64: }
  4244                           
  4245  0949  0021               	movlb	1	; select bank1
  4246  094A  0860               	movf	BUTTON_IsPressed@button^(0+128),w
  4247                           
  4248                           ; Switch size 1, requested type "space"
  4249                           ; Number of cases is 2, Range of values is 0 to 1
  4250                           ; switch strategies available:
  4251                           ; Name         Instructions Cycles
  4252                           ; simple_byte            7     4 (average)
  4253                           ; direct_byte           10     6 (fixed)
  4254                           ; jumptable            260     6 (fixed)
  4255                           ;	Chosen strategy is simple_byte
  4256  094B  3A00               	xorlw	0	; case 0
  4257  094C  1903               	skipnz
  4258  094D  2947               	goto	l3430
  4259  094E  3A01               	xorlw	1	; case 1
  4260  094F  1903               	skipnz
  4261  0950  2940               	goto	l3426
  4262  0951  2952               	goto	l3438
  4263  0952                     l3438:	
  4264                           
  4265                           ;buttons.c: 66: return 0;
  4266  0952  3000               	movlw	0
  4267  0953  0008               	return
  4268  0954                     __end_of_BUTTON_IsPressed:	
  4269                           
  4270                           	psect	text12
  4271  0AD5                     __ptext12:	
  4272 ;; *************** function _ADC_Read10bit *****************
  4273 ;; Defined at:
  4274 ;;		line 94 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/adc.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  channel         1    wreg     enum E30
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  channel         1    6[BANK1 ] enum E30
  4279 ;;  result          2    4[BANK1 ] unsigned int 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  2    0[BANK1 ] unsigned int 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4289 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4292 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4293 ;;Total ram usage:        7 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:   10
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_APP_DeviceCustomHIDTasks
  4300 ;;		_ADC_ReadPercentage
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           
  4305                           ;psect for function _ADC_Read10bit
  4306  0AD5                     _ADC_Read10bit:	
  4307                           
  4308                           ;incstack = 0
  4309                           ; Regs used in _ADC_Read10bit: [wreg-fsr0h+status,2+status,0]
  4310                           ;ADC_Read10bit@channel stored from wreg
  4311  0AD5  0021               	movlb	1	; select bank1
  4312  0AD6  00E6               	movwf	ADC_Read10bit@channel^(0+128)
  4313                           
  4314                           ;adc.c: 96: uint16_t result;
  4315                           ;adc.c: 98: switch(channel)
  4316  0AD7  2ADD               	goto	l3482
  4317  0AD8                     l102:	
  4318                           ;adc.c: 102: default:
  4319                           
  4320                           ;adc.c: 101: break;
  4321                           
  4322                           ;adc.c: 99: {
  4323                           ;adc.c: 100: case ADC_CHANNEL_10:
  4324                           
  4325                           
  4326                           ;adc.c: 103: return 0xFFFF;
  4327  0AD8  30FF               	movlw	255
  4328  0AD9  00E0               	movwf	?_ADC_Read10bit^(0+128)
  4329  0ADA  30FF               	movlw	255
  4330  0ADB  00E1               	movwf	(?_ADC_Read10bit^(0+128)+1)
  4331  0ADC  0008               	return
  4332  0ADD                     l3482:	
  4333                           ;adc.c: 104: }
  4334                           
  4335  0ADD  0866               	movf	ADC_Read10bit@channel^(0+128),w
  4336                           
  4337                           ; Switch size 1, requested type "space"
  4338                           ; Number of cases is 1, Range of values is 10 to 10
  4339                           ; switch strategies available:
  4340                           ; Name         Instructions Cycles
  4341                           ; simple_byte            4     3 (average)
  4342                           ; direct_byte           11     9 (fixed)
  4343                           ; jumptable            263     9 (fixed)
  4344                           ;	Chosen strategy is simple_byte
  4345  0ADE  3A0A               	xorlw	10	; case 10
  4346  0ADF  1903               	skipnz
  4347  0AE0  2AE2               	goto	l3484
  4348  0AE1  2AD8               	goto	l102
  4349  0AE2                     l3484:	
  4350                           
  4351                           ;adc.c: 106: ADCON0bits.CHS = channel;
  4352  0AE2  0866               	movf	ADC_Read10bit@channel^(0+128),w
  4353  0AE3  00E2               	movwf	??_ADC_Read10bit^(0+128)
  4354  0AE4  0DE2               	rlf	??_ADC_Read10bit^(0+128),f
  4355  0AE5  0DE2               	rlf	??_ADC_Read10bit^(0+128),f
  4356  0AE6  081D               	movf	29,w	;volatile
  4357  0AE7  0662               	xorwf	??_ADC_Read10bit^(0+128),w
  4358  0AE8  3983               	andlw	-125
  4359  0AE9  0662               	xorwf	??_ADC_Read10bit^(0+128),w
  4360  0AEA  009D               	movwf	29	;volatile
  4361                           
  4362                           ;adc.c: 108: ADCON0bits.GO = 1;
  4363  0AEB  149D               	bsf	29,1	;volatile
  4364  0AEC                     l104:	
  4365                           ;adc.c: 109: while(ADCON0bits.GO_nDONE);
  4366                           
  4367  0AEC  189D               	btfsc	29,1	;volatile
  4368  0AED  2AEC               	goto	l104
  4369                           
  4370                           ;adc.c: 111: result = ADRESH;
  4371  0AEE  081C               	movf	28,w	;volatile
  4372  0AEF  00E2               	movwf	??_ADC_Read10bit^(0+128)
  4373  0AF0  01E3               	clrf	(??_ADC_Read10bit^(0+128)+1)
  4374  0AF1  0862               	movf	??_ADC_Read10bit^(0+128),w
  4375  0AF2  00E4               	movwf	ADC_Read10bit@result^(0+128)
  4376  0AF3  0863               	movf	(??_ADC_Read10bit+1)^(0+128),w
  4377  0AF4  00E5               	movwf	(ADC_Read10bit@result+1)^(0+128)
  4378                           
  4379                           ;adc.c: 112: result <<=8;
  4380  0AF5  3008               	movlw	8
  4381  0AF6                     u2585:	
  4382  0AF6  35E4               	lslf	ADC_Read10bit@result^(0+128),f
  4383  0AF7  0DE5               	rlf	(ADC_Read10bit@result+1)^(0+128),f
  4384  0AF8  0B89               	decfsz	9,f
  4385  0AF9  2AF6               	goto	u2585
  4386                           
  4387                           ;adc.c: 113: result |= ADRESL;
  4388  0AFA  081B               	movf	27,w	;volatile
  4389  0AFB  00E2               	movwf	??_ADC_Read10bit^(0+128)
  4390  0AFC  01E3               	clrf	(??_ADC_Read10bit^(0+128)+1)
  4391  0AFD  0862               	movf	??_ADC_Read10bit^(0+128),w
  4392  0AFE  04E4               	iorwf	ADC_Read10bit@result^(0+128),f
  4393  0AFF  0863               	movf	(??_ADC_Read10bit+1)^(0+128),w
  4394  0B00  04E5               	iorwf	(ADC_Read10bit@result+1)^(0+128),f
  4395                           
  4396                           ;adc.c: 115: return result;
  4397  0B01  0865               	movf	(ADC_Read10bit@result+1)^(0+128),w
  4398  0B02  00E1               	movwf	(?_ADC_Read10bit+1)^(0+128)
  4399  0B03  0864               	movf	ADC_Read10bit@result^(0+128),w
  4400  0B04  00E0               	movwf	?_ADC_Read10bit^(0+128)
  4401  0B05  0008               	return
  4402  0B06                     __end_of_ADC_Read10bit:	
  4403                           
  4404                           	psect	intentry
  4405  0004                     __pintentry:	
  4406 ;; *************** function _SYS_InterruptHigh *****************
  4407 ;; Defined at:
  4408 ;;		line 116 in file "system.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4426 ;;Total ram usage:        1 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    9
  4429 ;; This function calls:
  4430 ;;		_USBDeviceTasks
  4431 ;; This function is called by:
  4432 ;;		Interrupt level 1
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436  0004                     _SYS_InterruptHigh:	
  4437                           
  4438                           ;incstack = 0
  4439  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4440                           
  4441                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4442  0005  3180               	pagesel	$
  4443  0006  0020               	movlb	0	; select bank0
  4444  0007  087F               	movf	127,w
  4445  0008  00E5               	movwf	??_SYS_InterruptHigh
  4446                           
  4447                           ;system.c: 119: USBDeviceTasks();
  4448  0009  3181  2156         	fcall	_USBDeviceTasks
  4449  000B  0020               	movlb	0	; select bank0
  4450  000C  0865               	movf	??_SYS_InterruptHigh,w
  4451  000D  00FF               	movwf	127
  4452  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4453  000F  0009               	retfie
  4454  0010                     __end_of_SYS_InterruptHigh:	
  4455                           
  4456                           	psect	text14
  4457  0156                     __ptext14:	
  4458 ;; *************** function _USBDeviceTasks *****************
  4459 ;; Defined at:
  4460 ;;		line 477 in file "../../../../../../framework/usb/src/usb_device.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  i               1   20[BANK0 ] unsigned char 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;Total ram usage:        3 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    8
  4481 ;; This function calls:
  4482 ;;		_USBCtrlEPAllowStatusStage
  4483 ;;		_USBCtrlEPService
  4484 ;;		_USBIncrement1msInternalTimers
  4485 ;;		_USBStallHandler
  4486 ;;		_USBSuspend
  4487 ;;		_USBWakeFromSuspend
  4488 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4489 ;;		i1_USBDeviceInit
  4490 ;; This function is called by:
  4491 ;;		_SYS_InterruptHigh
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           
  4496                           ;psect for function _USBDeviceTasks
  4497  0156                     _USBDeviceTasks:	
  4498                           
  4499                           ;usb_device.c: 479: uint8_t i;
  4500                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4501                           
  4502                           ;incstack = 0
  4503                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4504  0156  0020               	movlb	0	; select bank0
  4505  0157  036C               	decf	_USBDeviceState,w	;volatile
  4506  0158  1D03               	btfss	3,2
  4507  0159  2965               	goto	i1l3786
  4508                           
  4509                           ;usb_device.c: 591: {
  4510                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4511  015A  003D               	movlb	29	; select bank29
  4512  015B  1A8E               	btfsc	14,5	;volatile
  4513  015C  2965               	goto	i1l3786
  4514                           
  4515                           ;usb_device.c: 602: {
  4516                           ;usb_device.c: 608: {UIR = 0;};
  4517  015D  0190               	clrf	16	;volatile
  4518                           
  4519                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4520  015E  1412               	bsf	18,0	;volatile
  4521                           
  4522                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4523  015F  1612               	bsf	18,4	;volatile
  4524                           
  4525                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4526  0160  3002               	movlw	2
  4527  0161  0020               	movlb	0	; select bank0
  4528  0162  00E2               	movwf	??_USBDeviceTasks
  4529  0163  0862               	movf	??_USBDeviceTasks,w
  4530  0164  00EC               	movwf	_USBDeviceState	;volatile
  4531  0165                     i1l3786:	
  4532                           
  4533                           ;usb_device.c: 617: }
  4534                           ;usb_device.c: 618: }
  4535                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4536  0165  003D               	movlb	29	; select bank29
  4537  0166  1910               	btfsc	16,2	;volatile
  4538  0167  1D12               	btfss	18,2	;volatile
  4539  0168  2972               	goto	i1l3794
  4540                           
  4541                           ;usb_device.c: 635: {
  4542                           ;usb_device.c: 636: (UIR &= 0xFB);
  4543  0169  30FB               	movlw	251
  4544  016A  0020               	movlb	0	; select bank0
  4545  016B  00E2               	movwf	??_USBDeviceTasks
  4546  016C  0862               	movf	??_USBDeviceTasks,w
  4547  016D  003D               	movlb	29	; select bank29
  4548  016E  0590               	andwf	16,f	;volatile
  4549                           
  4550                           ;usb_device.c: 640: USBWakeFromSuspend();
  4551  016F  318A  224A  3181   	fcall	_USBWakeFromSuspend
  4552  0172                     i1l3794:	
  4553                           
  4554                           ;usb_device.c: 642: }
  4555                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4556  0172  003D               	movlb	29	; select bank29
  4557  0173  1C8E               	btfss	14,1	;volatile
  4558  0174  2978               	goto	i1l266
  4559                           
  4560                           ;usb_device.c: 648: {
  4561                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  4562  0175  0020               	movlb	0	; select bank0
  4563  0176  1112               	bcf	18,2	;volatile
  4564                           
  4565                           ;usb_device.c: 650: return;
  4566  0177  0008               	return
  4567  0178                     i1l266:	
  4568                           
  4569                           ;usb_device.c: 651: }
  4570                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4571  0178  1810               	btfsc	16,0	;volatile
  4572  0179  1C12               	btfss	18,0	;volatile
  4573  017A  298A               	goto	i1l3808
  4574                           
  4575                           ;usb_device.c: 664: {
  4576                           ;usb_device.c: 665: USBDeviceInit();
  4577  017B  3183  23B4  3181   	fcall	i1_USBDeviceInit
  4578                           
  4579                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4580  017E  0021               	movlb	1	; select bank1
  4581  017F  1512               	bsf	18,2	;volatile
  4582                           
  4583                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4584  0180  3004               	movlw	4
  4585  0181  0020               	movlb	0	; select bank0
  4586  0182  00E2               	movwf	??_USBDeviceTasks
  4587  0183  0862               	movf	??_USBDeviceTasks,w
  4588  0184  00EC               	movwf	_USBDeviceState	;volatile
  4589                           
  4590                           ;usb_device.c: 681: (UIR &= 0xFE);
  4591  0185  30FE               	movlw	254
  4592  0186  00E2               	movwf	??_USBDeviceTasks
  4593  0187  0862               	movf	??_USBDeviceTasks,w
  4594  0188  003D               	movlb	29	; select bank29
  4595  0189  0590               	andwf	16,f	;volatile
  4596  018A                     i1l3808:	
  4597                           
  4598                           ;usb_device.c: 682: }
  4599                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4600  018A  1A10               	btfsc	16,4	;volatile
  4601  018B  1E12               	btfss	18,4	;volatile
  4602  018C  2990               	goto	i1l3814
  4603                           
  4604                           ;usb_device.c: 688: {
  4605                           ;usb_device.c: 694: USBSuspend();
  4606  018D  318A  220B  3181   	fcall	_USBSuspend
  4607  0190                     i1l3814:	
  4608                           
  4609                           ;usb_device.c: 696: }
  4610                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4611  0190  003D               	movlb	29	; select bank29
  4612  0191  1F10               	btfss	16,6	;volatile
  4613  0192  29BA               	goto	i1l3830
  4614                           
  4615                           ;usb_device.c: 709: {
  4616                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4617  0193  1F12               	btfss	18,6	;volatile
  4618  0194  29A5               	goto	i1l3820
  4619                           
  4620                           ;usb_device.c: 712: {
  4621                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4622  0195  3073               	movlw	115
  4623  0196  0020               	movlb	0	; select bank0
  4624  0197  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4625  0198  3000               	movlw	0
  4626  0199  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4627  019A  3000               	movlw	0
  4628  019B  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4629  019C  3000               	movlw	0
  4630  019D  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4631  019E  3001               	movlw	1
  4632  019F  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4633  01A0  3000               	movlw	0
  4634  01A1  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4635  01A2  318B  237E  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4636  01A5                     i1l3820:	
  4637                           
  4638                           ;usb_device.c: 714: }
  4639                           ;usb_device.c: 715: (UIR &= 0xBF);
  4640  01A5  30BF               	movlw	191
  4641  01A6  0020               	movlb	0	; select bank0
  4642  01A7  00E2               	movwf	??_USBDeviceTasks
  4643  01A8  0862               	movf	??_USBDeviceTasks,w
  4644  01A9  003D               	movlb	29	; select bank29
  4645  01AA  0590               	andwf	16,f	;volatile
  4646                           
  4647                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4648  01AB  3189  2154  3181   	fcall	_USBIncrement1msInternalTimers
  4649                           
  4650                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4651  01AE  0022               	movlb	2	; select bank2
  4652  01AF  086D               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  4653  01B0  1903               	btfsc	3,2
  4654  01B1  29B4               	goto	i1l272
  4655                           
  4656                           ;usb_device.c: 736: {
  4657                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4658  01B2  3001               	movlw	1
  4659  01B3  02ED               	subwf	_USBStatusStageTimeoutCounter^(0+256),f	;volatile
  4660  01B4                     i1l272:	
  4661                           
  4662                           ;usb_device.c: 738: }
  4663                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4664  01B4  086D               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  4665  01B5  1D03               	btfss	3,2
  4666  01B6  29BA               	goto	i1l3830
  4667                           
  4668                           ;usb_device.c: 745: {
  4669                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4670  01B7  318E  261E  3181   	fcall	_USBCtrlEPAllowStatusStage
  4671  01BA                     i1l3830:	
  4672                           
  4673                           ;usb_device.c: 747: }
  4674                           ;usb_device.c: 749: }
  4675                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4676  01BA  003D               	movlb	29	; select bank29
  4677  01BB  1A90               	btfsc	16,5	;volatile
  4678  01BC  1E92               	btfss	18,5	;volatile
  4679  01BD  29C1               	goto	i1l3836
  4680                           
  4681                           ;usb_device.c: 752: {
  4682                           ;usb_device.c: 753: USBStallHandler();
  4683  01BE  318A  22B0  3181   	fcall	_USBStallHandler
  4684  01C1                     i1l3836:	
  4685                           
  4686                           ;usb_device.c: 754: }
  4687                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4688  01C1  003D               	movlb	29	; select bank29
  4689  01C2  1890               	btfsc	16,1	;volatile
  4690  01C3  1C92               	btfss	18,1	;volatile
  4691  01C4  29D7               	goto	i1l3844
  4692                           
  4693                           ;usb_device.c: 757: {
  4694                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4695  01C5  30FF               	movlw	255
  4696  01C6  0020               	movlb	0	; select bank0
  4697  01C7  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4698  01C8  307F               	movlw	127
  4699  01C9  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4700  01CA  3000               	movlw	0
  4701  01CB  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4702  01CC  3000               	movlw	0
  4703  01CD  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4704  01CE  3001               	movlw	1
  4705  01CF  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4706  01D0  3000               	movlw	0
  4707  01D1  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4708  01D2  318B  237E  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4709                           
  4710                           ;usb_device.c: 759: {UEIR = 0;};
  4711  01D5  003D               	movlb	29	; select bank29
  4712  01D6  0193               	clrf	19	;volatile
  4713  01D7                     i1l3844:	
  4714                           
  4715                           ;usb_device.c: 767: }
  4716                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4717  01D7  3004               	movlw	4
  4718  01D8  0020               	movlb	0	; select bank0
  4719  01D9  026C               	subwf	_USBDeviceState,w	;volatile
  4720  01DA  1803               	skipnc
  4721  01DB  29DE               	goto	i1l276
  4722                           
  4723                           ;usb_device.c: 775: {
  4724                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  4725  01DC  1112               	bcf	18,2	;volatile
  4726                           
  4727                           ;usb_device.c: 777: return;
  4728  01DD  0008               	return
  4729  01DE                     i1l276:	
  4730                           
  4731                           ;usb_device.c: 778: }
  4732                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4733  01DE  003D               	movlb	29	; select bank29
  4734  01DF  1D92               	btfss	18,3	;volatile
  4735  01E0  2A36               	goto	i1l277
  4736                           
  4737                           ;usb_device.c: 784: {
  4738                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4739  01E1  0020               	movlb	0	; select bank0
  4740  01E2  01E4               	clrf	USBDeviceTasks@i
  4741  01E3  3004               	movlw	4
  4742  01E4  0264               	subwf	USBDeviceTasks@i,w
  4743  01E5  1803               	btfsc	3,0
  4744  01E6  2A36               	goto	i1l277
  4745  01E7                     i1l278:	
  4746                           
  4747                           ;usb_device.c: 786: {
  4748                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4749  01E7  003D               	movlb	29	; select bank29
  4750  01E8  1D90               	btfss	16,3	;volatile
  4751  01E9  2A36               	goto	i1l277
  4752                           
  4753                           ;usb_device.c: 788: {
  4754                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4755  01EA  080F               	movf	15,w	;volatile
  4756  01EB  0020               	movlb	0	; select bank0
  4757  01EC  00E2               	movwf	??_USBDeviceTasks
  4758  01ED  0862               	movf	??_USBDeviceTasks,w
  4759  01EE  00EF               	movwf	_USTATcopy	;volatile
  4760                           
  4761                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4762  01EF  0C6F               	rrf	_USTATcopy,w	;volatile
  4763  01F0  00E2               	movwf	??_USBDeviceTasks
  4764  01F1  0CE2               	rrf	??_USBDeviceTasks,f
  4765  01F2  0C62               	rrf	??_USBDeviceTasks,w
  4766  01F3  390F               	andlw	15
  4767  01F4  00E3               	movwf	??_USBDeviceTasks+1
  4768  01F5  0863               	movf	??_USBDeviceTasks+1,w
  4769  01F6  0022               	movlb	2	; select bank2
  4770  01F7  00EE               	movwf	_endpoint_number^(0+256)	;volatile
  4771                           
  4772                           ;usb_device.c: 793: (UIR &= 0xF7);
  4773  01F8  30F7               	movlw	247
  4774  01F9  0020               	movlb	0	; select bank0
  4775  01FA  00E2               	movwf	??_USBDeviceTasks
  4776  01FB  0862               	movf	??_USBDeviceTasks,w
  4777  01FC  003D               	movlb	29	; select bank29
  4778  01FD  0590               	andwf	16,f	;volatile
  4779                           
  4780                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4781  01FE  0020               	movlb	0	; select bank0
  4782  01FF  196F               	btfsc	_USTATcopy,2	;volatile
  4783  0200  2A05               	goto	i1l3864
  4784                           
  4785                           ;usb_device.c: 799: {
  4786                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4787  0201  0022               	movlb	2	; select bank2
  4788  0202  086E               	movf	_endpoint_number^(0+256),w	;volatile
  4789  0203  3EB0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4790  0204  2A08               	goto	L4
  4791  0205                     i1l3864:	
  4792                           ;usb_device.c: 801: }
  4793                           
  4794                           
  4795                           ;usb_device.c: 802: else
  4796                           ;usb_device.c: 803: {
  4797                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4798  0205  0022               	movlb	2	; select bank2
  4799  0206  086E               	movf	_endpoint_number^(0+256),w	;volatile
  4800  0207  3EAE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4801  0208                     L4:	
  4802  0208  0086               	movwf	6
  4803  0209  3001               	movlw	1	; select bank3/4
  4804  020A  0087               	movwf	7
  4805  020B  0801               	movf	1,w
  4806  020C  3901               	andlw	1
  4807  020D  0020               	movlb	0	; select bank0
  4808  020E  00E2               	movwf	??_USBDeviceTasks
  4809  020F  3001               	movlw	1
  4810  0210  06E2               	xorwf	??_USBDeviceTasks,f
  4811  0211  0801               	movf	1,w
  4812  0212  0662               	xorwf	??_USBDeviceTasks,w
  4813  0213  39FE               	andlw	-2
  4814  0214  0662               	xorwf	??_USBDeviceTasks,w
  4815  0215  0081               	movwf	1
  4816                           
  4817                           ;usb_device.c: 805: }
  4818                           ;usb_device.c: 810: if(endpoint_number == 0)
  4819  0216  0022               	movlb	2	; select bank2
  4820  0217  086E               	movf	_endpoint_number^(0+256),w	;volatile
  4821  0218  1D03               	btfss	3,2
  4822  0219  2A1E               	goto	i1l3870
  4823                           
  4824                           ;usb_device.c: 811: {
  4825                           ;usb_device.c: 812: USBCtrlEPService();
  4826  021A  318C  24A2  3181   	fcall	_USBCtrlEPService
  4827                           
  4828                           ;usb_device.c: 813: }
  4829  021D  2A2D               	goto	i1l3872
  4830  021E                     i1l3870:	
  4831                           
  4832                           ;usb_device.c: 814: else
  4833                           ;usb_device.c: 815: {
  4834                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4835  021E  3072               	movlw	114
  4836  021F  0020               	movlb	0	; select bank0
  4837  0220  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4838  0221  3000               	movlw	0
  4839  0222  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4840  0223  306F               	movlw	low _USTATcopy
  4841  0224  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4842  0225  3000               	movlw	high _USTATcopy
  4843  0226  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4844  0227  3000               	movlw	0
  4845  0228  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4846  0229  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4847  022A  318B  237E  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4848  022D                     i1l3872:	
  4849                           ;usb_device.c: 819: else
  4850                           ;usb_device.c: 820: {
  4851                           ;usb_device.c: 821: break;
  4852                           
  4853                           ;usb_device.c: 817: }
  4854                           ;usb_device.c: 818: }
  4855                           
  4856  022D  3001               	movlw	1
  4857  022E  0020               	movlb	0	; select bank0
  4858  022F  00E2               	movwf	??_USBDeviceTasks
  4859  0230  0862               	movf	??_USBDeviceTasks,w
  4860  0231  07E4               	addwf	USBDeviceTasks@i,f
  4861  0232  3004               	movlw	4
  4862  0233  0264               	subwf	USBDeviceTasks@i,w
  4863  0234  1C03               	skipc
  4864  0235  29E7               	goto	i1l278
  4865  0236                     i1l277:	
  4866                           
  4867                           ;usb_device.c: 822: }
  4868                           ;usb_device.c: 823: }
  4869                           ;usb_device.c: 824: }
  4870                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  4871  0236  0020               	movlb	0	; select bank0
  4872  0237  1112               	bcf	18,2	;volatile
  4873  0238  0008               	return
  4874  0239                     __end_of_USBDeviceTasks:	
  4875                           
  4876                           	psect	text15
  4877  03B4                     __ptext15:	
  4878 ;; *************** function i1_USBDeviceInit *****************
  4879 ;; Defined at:
  4880 ;;		line 277 in file "../../../../../../framework/usb/src/usb_device.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  4885 ;;		 -> UEP1(1), 
  4886 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  4887 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  1    wreg      void 
  4890 ;; Registers used:
  4891 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;Total ram usage:        5 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_USBDeviceTasks
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           
  4911                           ;psect for function i1_USBDeviceInit
  4912  03B4                     i1_USBDeviceInit:	
  4913                           
  4914                           ;usb_device.c: 279: uint8_t i;
  4915                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  4916                           
  4917                           ;incstack = 0
  4918                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4919  03B4  0021               	movlb	1	; select bank1
  4920  03B5  1112               	bcf	18,2	;volatile
  4921                           
  4922                           ;usb_device.c: 285: ;
  4923                           ;usb_device.c: 288: {UEIR = 0;};
  4924  03B6  003D               	movlb	29	; select bank29
  4925  03B7  0193               	clrf	19	;volatile
  4926                           
  4927                           ;usb_device.c: 291: {UIR = 0;};
  4928  03B8  0190               	clrf	16	;volatile
  4929                           
  4930                           ;usb_device.c: 294: UEP0 = 0;
  4931  03B9  0198               	clrf	24	;volatile
  4932                           
  4933                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  4934  03BA  300E               	movlw	14
  4935  03BB  00F2               	movwf	i1USBDeviceInit@p+1
  4936  03BC  3099               	movlw	153
  4937  03BD  00F1               	movwf	i1USBDeviceInit@p
  4938  03BE  01F3               	clrf	i1USBDeviceInit@i_901
  4939  03BF  0873               	movf	i1USBDeviceInit@i_901,w
  4940  03C0  1D03               	btfss	3,2
  4941  03C1  2BD2               	goto	i1l3620
  4942  03C2                     i1l3612:	
  4943  03C2  0871               	movf	i1USBDeviceInit@p,w
  4944  03C3  0086               	movwf	6
  4945  03C4  0872               	movf	i1USBDeviceInit@p+1,w
  4946  03C5  0087               	movwf	7
  4947  03C6  0181               	clrf	1
  4948  03C7  3001               	movlw	1
  4949  03C8  07F1               	addwf	i1USBDeviceInit@p,f
  4950  03C9  3000               	movlw	0
  4951  03CA  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  4952  03CB  3001               	movlw	1
  4953  03CC  00F0               	movwf	??i1_USBDeviceInit
  4954  03CD  0870               	movf	??i1_USBDeviceInit,w
  4955  03CE  07F3               	addwf	i1USBDeviceInit@i_901,f
  4956  03CF  0873               	movf	i1USBDeviceInit@i_901,w
  4957  03D0  1903               	btfsc	3,2
  4958  03D1  2BC2               	goto	i1l3612
  4959  03D2                     i1l3620:	
  4960                           
  4961                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4962  03D2  3016               	movlw	22
  4963  03D3  003D               	movlb	29	; select bank29
  4964  03D4  0091               	movwf	17	;volatile
  4965  03D5  309F               	movlw	159
  4966  03D6  0097               	movwf	23	;volatile
  4967  03D7  307B               	movlw	123
  4968  03D8  0092               	movwf	18	;volatile
  4969                           
  4970                           ;usb_device.c: 301: ;
  4971                           ;usb_device.c: 304: ;
  4972                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  4973  03D9  01F4               	clrf	i1USBDeviceInit@i
  4974  03DA  3008               	movlw	8
  4975  03DB  0274               	subwf	i1USBDeviceInit@i,w
  4976  03DC  1803               	btfsc	3,0
  4977  03DD  2BF7               	goto	i1l255
  4978  03DE                     i1l3628:	
  4979                           
  4980                           ;usb_device.c: 308: {
  4981                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  4982  03DE  0874               	movf	i1USBDeviceInit@i,w
  4983  03DF  00F0               	movwf	??i1_USBDeviceInit
  4984  03E0  3001               	movlw	1
  4985  03E1                     u277_25:	
  4986  03E1  35F0               	lslf	??i1_USBDeviceInit,f
  4987  03E2  3EFF               	addlw	-1
  4988  03E3  1D03               	skipz
  4989  03E4  2BE1               	goto	u277_25
  4990  03E5  3570               	lslf	??i1_USBDeviceInit,w
  4991  03E6  3E20               	addlw	32
  4992  03E7  0086               	movwf	6
  4993  03E8  0187               	clrf	7
  4994  03E9  3000               	movlw	0
  4995  03EA  3FC0               	movwi [0]fsr1
  4996  03EB  3000               	movlw	0
  4997  03EC  3FC1               	movwi [1]fsr1
  4998  03ED  3FC2               	movwi [2]fsr1
  4999  03EE  3FC3               	movwi [3]fsr1
  5000  03EF  3001               	movlw	1
  5001  03F0  00F0               	movwf	??i1_USBDeviceInit
  5002  03F1  0870               	movf	??i1_USBDeviceInit,w
  5003  03F2  07F4               	addwf	i1USBDeviceInit@i,f
  5004  03F3  3008               	movlw	8
  5005  03F4  0274               	subwf	i1USBDeviceInit@i,w
  5006  03F5  1C03               	skipc
  5007  03F6  2BDE               	goto	i1l3628
  5008  03F7                     i1l255:	
  5009                           
  5010                           ;usb_device.c: 310: }
  5011                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  5012  03F7  003D               	movlb	29	; select bank29
  5013  03F8  170E               	bsf	14,6	;volatile
  5014                           
  5015                           ;usb_device.c: 316: UADDR = 0x00;
  5016  03F9  0196               	clrf	22	;volatile
  5017                           
  5018                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  5019  03FA  120E               	bcf	14,4	;volatile
  5020                           
  5021                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  5022  03FB  130E               	bcf	14,6	;volatile
  5023  03FC                     i1l3640:	
  5024                           ;usb_device.c: 325: do
  5025                           
  5026                           
  5027                           ;usb_device.c: 326: {
  5028                           ;usb_device.c: 327: (UIR &= 0xF7);
  5029  03FC  30F7               	movlw	247
  5030  03FD  00F0               	movwf	??i1_USBDeviceInit
  5031  03FE  0870               	movf	??i1_USBDeviceInit,w
  5032  03FF  0590               	andwf	16,f	;volatile
  5033                           
  5034                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  5035  0400  0022               	movlb	2	; select bank2
  5036  0401  01E9               	clrf	(_inPipes^(0+256)+2)	;volatile
  5037                           
  5038                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  5039  0402  01E2               	clrf	(_outPipes^(0+256)+2)	;volatile
  5040                           
  5041                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  5042  0403  01E3               	clrf	(_outPipes^(0+256)+3)	;volatile
  5043  0404  01E4               	clrf	((_outPipes+1)^(0+256)+3)	;volatile
  5044                           
  5045                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  5046  0405  003D               	movlb	29	; select bank29
  5047  0406  1990               	btfsc	16,3	;volatile
  5048  0407  2BFC               	goto	i1l3640
  5049                           
  5050                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  5051  0408  3001               	movlw	1
  5052  0409  00F0               	movwf	??i1_USBDeviceInit
  5053  040A  0870               	movf	??i1_USBDeviceInit,w
  5054  040B  0023               	movlb	3	; select bank3
  5055  040C  00B7               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5056                           
  5057                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  5058  040D  3001               	movlw	1
  5059  040E  00F0               	movwf	??i1_USBDeviceInit
  5060  040F  0870               	movf	??i1_USBDeviceInit,w
  5061  0410  00B8               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5062                           
  5063                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  5064  0411  01B5               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5065                           
  5066                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  5067  0412  01B6               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5068                           
  5069                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  5070  0413  01B4               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5071                           
  5072                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(1+1u); i++)
  5073  0414  01F4               	clrf	i1USBDeviceInit@i
  5074  0415  3002               	movlw	2
  5075  0416  0274               	subwf	i1USBDeviceInit@i,w
  5076  0417  1803               	btfsc	3,0
  5077  0418  2C3C               	goto	i1l3668
  5078  0419                     i1l3662:	
  5079                           
  5080                           ;usb_device.c: 346: {
  5081                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  5082  0419  3574               	lslf	i1USBDeviceInit@i,w
  5083  041A  3E66               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5084  041B  0086               	movwf	6
  5085  041C  0187               	clrf	7
  5086  041D  3000               	movlw	0
  5087  041E  3FC0               	movwi [0]fsr1
  5088  041F  3FC1               	movwi [1]fsr1
  5089                           
  5090                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  5091  0420  3574               	lslf	i1USBDeviceInit@i,w
  5092  0421  3EA4               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5093  0422  0086               	movwf	6
  5094  0423  3001               	movlw	1	; select bank3/4
  5095  0424  0087               	movwf	7
  5096  0425  3000               	movlw	0
  5097  0426  3FC0               	movwi [0]fsr1
  5098  0427  3FC1               	movwi [1]fsr1
  5099                           
  5100                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  5101  0428  0874               	movf	i1USBDeviceInit@i,w
  5102  0429  3EAE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5103  042A  0086               	movwf	6
  5104  042B  3001               	movlw	1	; select bank3/4
  5105  042C  0087               	movwf	7
  5106  042D  0181               	clrf	1
  5107                           
  5108                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  5109  042E  0874               	movf	i1USBDeviceInit@i,w
  5110  042F  3EB0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5111  0430  0086               	movwf	6
  5112  0431  3001               	movlw	1	; select bank3/4
  5113  0432  0087               	movwf	7
  5114  0433  0181               	clrf	1
  5115  0434  3001               	movlw	1
  5116  0435  00F0               	movwf	??i1_USBDeviceInit
  5117  0436  0870               	movf	??i1_USBDeviceInit,w
  5118  0437  07F4               	addwf	i1USBDeviceInit@i,f
  5119  0438  3002               	movlw	2
  5120  0439  0274               	subwf	i1USBDeviceInit@i,w
  5121  043A  1C03               	skipc
  5122  043B  2C19               	goto	i1l3662
  5123  043C                     i1l3668:	
  5124                           
  5125                           ;usb_device.c: 351: }
  5126                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5127  043C  3028               	movlw	40
  5128  043D  0020               	movlb	0	; select bank0
  5129  043E  00E6               	movwf	_pBDTEntryIn
  5130  043F  3000               	movlw	0
  5131  0440  00E7               	movwf	_pBDTEntryIn+1
  5132                           
  5133                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  5134  0441  3016               	movlw	22
  5135  0442  003D               	movlb	29	; select bank29
  5136  0443  0098               	movwf	24	;volatile
  5137                           
  5138                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5139  0444  3000               	movlw	0
  5140  0445  0020               	movlb	0	; select bank0
  5141  0446  00A3               	movwf	35	;volatile
  5142  0447  3040               	movlw	64
  5143  0448  00A2               	movwf	34	;volatile
  5144                           
  5145                           ;usb_device.c: 359: BDT[0].CNT = 8;
  5146  0449  3008               	movlw	8
  5147  044A  00A1               	movwf	33	;volatile
  5148                           
  5149                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  5150  044B  3004               	movlw	4
  5151  044C  00F0               	movwf	??i1_USBDeviceInit
  5152  044D  0870               	movf	??i1_USBDeviceInit,w
  5153  044E  00A0               	movwf	32	;volatile
  5154                           
  5155                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  5156  044F  17A0               	bsf	32,7	;volatile
  5157                           
  5158                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  5159  0450  0021               	movlb	1	; select bank1
  5160  0451  01EE               	clrf	_USBActiveConfiguration^(0+128)	;volatile
  5161                           
  5162                           ;usb_device.c: 366: USB1msTickCount = 0;
  5163  0452  3000               	movlw	0
  5164  0453  0023               	movlb	3	; select bank3
  5165  0454  00A3               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  5166  0455  3000               	movlw	0
  5167  0456  00A2               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  5168  0457  3000               	movlw	0
  5169  0458  00A1               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  5170  0459  3000               	movlw	0
  5171  045A  00A0               	movwf	_USB1msTickCount^(0+384)	;volatile
  5172                           
  5173                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  5174  045B  01B9               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5175                           
  5176                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  5177  045C  0020               	movlb	0	; select bank0
  5178  045D  01EC               	clrf	_USBDeviceState	;volatile
  5179  045E  0008               	return
  5180  045F                     __end_ofi1_USBDeviceInit:	
  5181                           
  5182                           	psect	text16
  5183  0A4A                     __ptext16:	
  5184 ;; *************** function _USBWakeFromSuspend *****************
  5185 ;; Defined at:
  5186 ;;		line 2303 in file "../../../../../../framework/usb/src/usb_device.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;		None
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5203 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5204 ;;Total ram usage:        1 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    4
  5207 ;; This function calls:
  5208 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5209 ;; This function is called by:
  5210 ;;		_USBDeviceTasks
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           
  5215                           ;psect for function _USBWakeFromSuspend
  5216  0A4A                     _USBWakeFromSuspend:	
  5217                           
  5218                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5219                           
  5220                           ;incstack = 0
  5221                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5222  0A4A  0023               	movlb	3	; select bank3
  5223  0A4B  01B4               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5224                           
  5225                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5226  0A4C  3074               	movlw	116
  5227  0A4D  0020               	movlb	0	; select bank0
  5228  0A4E  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5229  0A4F  3000               	movlw	0
  5230  0A50  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5231  0A51  3000               	movlw	0
  5232  0A52  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5233  0A53  3000               	movlw	0
  5234  0A54  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5235  0A55  3000               	movlw	0
  5236  0A56  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5237  0A57  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5238  0A58  318B  237E  318A   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5239                           
  5240                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5241  0A5B  003D               	movlb	29	; select bank29
  5242  0A5C  108E               	bcf	14,1	;volatile
  5243                           
  5244                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5245  0A5D  1112               	bcf	18,2	;volatile
  5246  0A5E                     i1l3516:	
  5247                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5248                           
  5249  0A5E  1D10               	btfss	16,2	;volatile
  5250  0A5F  2A67               	goto	i1l3518
  5251                           
  5252                           ;usb_device.c: 2343: {
  5253                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5254  0A60  30FB               	movlw	251
  5255  0A61  0020               	movlb	0	; select bank0
  5256  0A62  00D6               	movwf	??_USBWakeFromSuspend
  5257  0A63  0856               	movf	??_USBWakeFromSuspend,w
  5258  0A64  003D               	movlb	29	; select bank29
  5259  0A65  0590               	andwf	16,f	;volatile
  5260  0A66  2A5E               	goto	i1l3516
  5261  0A67                     i1l3518:	
  5262                           
  5263                           ;usb_device.c: 2345: }
  5264                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5265  0A67  0023               	movlb	3	; select bank3
  5266  0A68  01B9               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5267  0A69  0008               	return
  5268  0A6A                     __end_of_USBWakeFromSuspend:	
  5269                           
  5270                           	psect	text17
  5271  0A0B                     __ptext17:	
  5272 ;; *************** function _USBSuspend *****************
  5273 ;; Defined at:
  5274 ;;		line 2245 in file "../../../../../../framework/usb/src/usb_device.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;		None
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;Total ram usage:        1 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    4
  5295 ;; This function calls:
  5296 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5297 ;; This function is called by:
  5298 ;;		_USBDeviceTasks
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           
  5303                           ;psect for function _USBSuspend
  5304  0A0B                     _USBSuspend:	
  5305                           
  5306                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5307                           
  5308                           ;incstack = 0
  5309                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5310  0A0B  003D               	movlb	29	; select bank29
  5311  0A0C  1512               	bsf	18,2	;volatile
  5312                           
  5313                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5314  0A0D  30EF               	movlw	239
  5315  0A0E  0020               	movlb	0	; select bank0
  5316  0A0F  00D6               	movwf	??_USBSuspend
  5317  0A10  0856               	movf	??_USBSuspend,w
  5318  0A11  003D               	movlb	29	; select bank29
  5319  0A12  0590               	andwf	16,f	;volatile
  5320                           
  5321                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5322  0A13  148E               	bsf	14,1	;volatile
  5323                           
  5324                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5325  0A14  3001               	movlw	1
  5326  0A15  0020               	movlb	0	; select bank0
  5327  0A16  00D6               	movwf	??_USBSuspend
  5328  0A17  0856               	movf	??_USBSuspend,w
  5329  0A18  0023               	movlb	3	; select bank3
  5330  0A19  00B4               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  5331                           
  5332                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5333  0A1A  01B9               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5334                           
  5335                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5336  0A1B  3075               	movlw	117
  5337  0A1C  0020               	movlb	0	; select bank0
  5338  0A1D  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5339  0A1E  3000               	movlw	0
  5340  0A1F  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5341  0A20  3000               	movlw	0
  5342  0A21  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5343  0A22  3000               	movlw	0
  5344  0A23  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5345  0A24  3000               	movlw	0
  5346  0A25  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5347  0A26  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5348  0A27  318B  237E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5349  0A29  0008               	return
  5350  0A2A                     __end_of_USBSuspend:	
  5351                           
  5352                           	psect	text18
  5353  0AB0                     __ptext18:	
  5354 ;; *************** function _USBStallHandler *****************
  5355 ;; Defined at:
  5356 ;;		line 2202 in file "../../../../../../framework/usb/src/usb_device.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;		None
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;		None
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      void 
  5363 ;; Registers used:
  5364 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;Total ram usage:        1 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; This function calls:
  5377 ;;		Nothing
  5378 ;; This function is called by:
  5379 ;;		_USBDeviceTasks
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           
  5384                           ;psect for function _USBStallHandler
  5385  0AB0                     _USBStallHandler:	
  5386                           
  5387                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5388                           
  5389                           ;incstack = 0
  5390                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5391  0AB0  003D               	movlb	29	; select bank29
  5392  0AB1  1C18               	btfss	24,0	;volatile
  5393  0AB2  2AD0               	goto	i1l3550
  5394                           
  5395                           ;usb_device.c: 2215: {
  5396                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5397  0AB3  0020               	movlb	0	; select bank0
  5398  0AB4  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5399  0AB5  0086               	movwf	6
  5400  0AB6  0187               	clrf	7
  5401  0AB7  3080               	movlw	128
  5402  0AB8  0601               	xorwf	1,w
  5403  0AB9  1D03               	btfss	3,2
  5404  0ABA  2ACE               	goto	i1l3548
  5405  0ABB  0866               	movf	_pBDTEntryIn,w
  5406  0ABC  0086               	movwf	6
  5407  0ABD  0867               	movf	_pBDTEntryIn+1,w
  5408  0ABE  0087               	movwf	7
  5409  0ABF  3084               	movlw	132
  5410  0AC0  0601               	xorwf	1,w
  5411  0AC1  1D03               	btfss	3,2
  5412  0AC2  2ACE               	goto	i1l3548
  5413                           
  5414                           ;usb_device.c: 2218: {
  5415                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5416  0AC3  300C               	movlw	12
  5417  0AC4  00F0               	movwf	??_USBStallHandler
  5418  0AC5  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5419  0AC6  0086               	movwf	6
  5420  0AC7  0187               	clrf	7
  5421  0AC8  0870               	movf	??_USBStallHandler,w
  5422  0AC9  0081               	movwf	1
  5423                           
  5424                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5425  0ACA  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5426  0ACB  0086               	movwf	6
  5427  0ACC  0187               	clrf	7
  5428  0ACD  1781               	bsf	1,7
  5429  0ACE                     i1l3548:	
  5430                           
  5431                           ;usb_device.c: 2222: }
  5432                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5433  0ACE  003D               	movlb	29	; select bank29
  5434  0ACF  1018               	bcf	24,0	;volatile
  5435  0AD0                     i1l3550:	
  5436                           
  5437                           ;usb_device.c: 2224: }
  5438                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5439  0AD0  30DF               	movlw	223
  5440  0AD1  00F0               	movwf	??_USBStallHandler
  5441  0AD2  0870               	movf	??_USBStallHandler,w
  5442  0AD3  0590               	andwf	16,f	;volatile
  5443  0AD4  0008               	return
  5444  0AD5                     __end_of_USBStallHandler:	
  5445                           
  5446                           	psect	text19
  5447  0954                     __ptext19:	
  5448 ;; *************** function _USBIncrement1msInternalTimers *****************
  5449 ;; Defined at:
  5450 ;;		line 3025 in file "../../../../../../framework/usb/src/usb_device.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;		None
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;		None
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		wreg, status,2, status,0
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5466 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5467 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5468 ;;Total ram usage:        1 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; This function calls:
  5471 ;;		Nothing
  5472 ;; This function is called by:
  5473 ;;		_USBDeviceTasks
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           
  5478                           ;psect for function _USBIncrement1msInternalTimers
  5479  0954                     _USBIncrement1msInternalTimers:	
  5480                           
  5481                           ;usb_device.c: 3033: USB1msTickCount++;
  5482                           
  5483                           ;incstack = 0
  5484                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  5485  0954  3001               	movlw	1
  5486  0955  0023               	movlb	3	; select bank3
  5487  0956  07A0               	addwf	_USB1msTickCount^(0+384),f	;volatile
  5488  0957  3000               	movlw	0
  5489  0958  3DA1               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  5490  0959  3000               	movlw	0
  5491  095A  3DA2               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  5492  095B  3000               	movlw	0
  5493  095C  3DA3               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  5494                           
  5495                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5496  095D  0834               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  5497  095E  1D03               	btfss	3,2
  5498  095F  0008               	return
  5499                           
  5500                           ;usb_device.c: 3035: {
  5501                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5502  0960  3001               	movlw	1
  5503  0961  00F0               	movwf	??_USBIncrement1msInternalTimers
  5504  0962  0870               	movf	??_USBIncrement1msInternalTimers,w
  5505  0963  07B9               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  5506                           
  5507                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5508  0964  0839               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  5509  0965  1D03               	btfss	3,2
  5510  0966  0008               	return
  5511                           
  5512                           ;usb_device.c: 3039: {
  5513                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5514  0967  30FF               	movlw	255
  5515  0968  00F0               	movwf	??_USBIncrement1msInternalTimers
  5516  0969  0870               	movf	??_USBIncrement1msInternalTimers,w
  5517  096A  00B9               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5518  096B  0008               	return
  5519  096C                     __end_of_USBIncrement1msInternalTimers:	
  5520                           
  5521                           	psect	text20
  5522  0CA2                     __ptext20:	
  5523 ;; *************** function _USBCtrlEPService *****************
  5524 ;; Defined at:
  5525 ;;		line 2372 in file "../../../../../../framework/usb/src/usb_device.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;		None
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;		None
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5541 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5542 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5543 ;;Total ram usage:        3 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    7
  5546 ;; This function calls:
  5547 ;;		_USBCtrlTrfInHandler
  5548 ;;		_USBCtrlTrfOutHandler
  5549 ;;		_USBCtrlTrfSetupHandler
  5550 ;; This function is called by:
  5551 ;;		_USBDeviceTasks
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           
  5556                           ;psect for function _USBCtrlEPService
  5557  0CA2                     _USBCtrlEPService:	
  5558                           
  5559                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5560                           
  5561                           ;incstack = 0
  5562                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5563  0CA2  302D               	movlw	45
  5564  0CA3  0020               	movlb	0	; select bank0
  5565  0CA4  00DF               	movwf	??_USBCtrlEPService
  5566  0CA5  085F               	movf	??_USBCtrlEPService,w
  5567  0CA6  0022               	movlb	2	; select bank2
  5568  0CA7  00ED               	movwf	_USBStatusStageTimeoutCounter^(0+256)	;volatile
  5569                           
  5570                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5571  0CA8  0020               	movlb	0	; select bank0
  5572  0CA9  086F               	movf	_USTATcopy,w	;volatile
  5573  0CAA  39FD               	andlw	253
  5574  0CAB  1D03               	btfss	3,2
  5575  0CAC  2CEB               	goto	i1l3570
  5576                           
  5577                           ;usb_device.c: 2383: {
  5578                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5579  0CAD  366F               	lsrf	_USTATcopy,w	;volatile
  5580  0CAE  393F               	andlw	63
  5581  0CAF  00DF               	movwf	??_USBCtrlEPService
  5582  0CB0  3001               	movlw	1
  5583  0CB1                     u267_25:	
  5584  0CB1  35DF               	lslf	??_USBCtrlEPService,f
  5585  0CB2  3EFF               	addlw	-1
  5586  0CB3  1D03               	skipz
  5587  0CB4  2CB1               	goto	u267_25
  5588  0CB5  355F               	lslf	??_USBCtrlEPService,w
  5589  0CB6  3E20               	addlw	32
  5590  0CB7  00E0               	movwf	??_USBCtrlEPService+1
  5591  0CB8  0860               	movf	??_USBCtrlEPService+1,w
  5592  0CB9  00EE               	movwf	_pBDTEntryEP0OutCurrent
  5593                           
  5594                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5595  0CBA  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5596  0CBB  00EA               	movwf	_pBDTEntryEP0OutNext
  5597  0CBC  39FF               	andlw	255
  5598  0CBD  1D03               	skipz
  5599  0CBE  3000               	movlw	0
  5600  0CBF  00EB               	movwf	_pBDTEntryEP0OutNext+1
  5601                           
  5602                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5603  0CC0  3004               	movlw	4
  5604  0CC1  066A               	xorwf	_pBDTEntryEP0OutNext,w
  5605  0CC2  00EA               	movwf	_pBDTEntryEP0OutNext
  5606  0CC3  3000               	movlw	0
  5607  0CC4  066B               	xorwf	_pBDTEntryEP0OutNext+1,w
  5608  0CC5  00EB               	movwf	_pBDTEntryEP0OutNext+1
  5609                           
  5610                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5611  0CC6  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5612  0CC7  0086               	movwf	6
  5613  0CC8  0187               	clrf	7
  5614  0CC9  0C01               	rrf	1,w
  5615  0CCA  0C89               	rrf	9,f
  5616  0CCB  390F               	andlw	15
  5617  0CCC  3A0D               	xorlw	13
  5618  0CCD  1D03               	skipz
  5619  0CCE  2CE8               	goto	i1l3568
  5620                           
  5621                           ;usb_device.c: 2400: {
  5622                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  5623  0CCF  3040               	movlw	64
  5624  0CD0  0086               	movwf	6
  5625  0CD1  0187               	clrf	7
  5626  0CD2  0020               	movlb	0	; select bank0
  5627  0CD3  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5628  0CD4  3E02               	addlw	2
  5629  0CD5  0084               	movwf	4
  5630  0CD6  0185               	clrf	5
  5631  0CD7  3F00               	moviw [0]fsr0
  5632  0CD8  00DF               	movwf	??_USBCtrlEPService
  5633  0CD9  3F01               	moviw [1]fsr0
  5634  0CDA  00E0               	movwf	??_USBCtrlEPService+1
  5635  0CDB  085F               	movf	??_USBCtrlEPService,w
  5636  0CDC  0084               	movwf	4
  5637  0CDD  0860               	movf	??_USBCtrlEPService+1,w
  5638  0CDE  0085               	movwf	5
  5639  0CDF  3008               	movlw	8
  5640  0CE0  00E1               	movwf	??_USBCtrlEPService+2
  5641  0CE1                     u269_2m0:	
  5642  0CE1  0012               	moviw fsr0++
  5643  0CE2  001E               	movwi fsr1++
  5644  0CE3  0BE1               	decfsz	??_USBCtrlEPService+2,f
  5645  0CE4  2CE1               	goto	u269_2m0
  5646                           
  5647                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5648  0CE5  318C  2405         	fcall	_USBCtrlTrfSetupHandler
  5649                           
  5650                           ;usb_device.c: 2409: }
  5651  0CE7  0008               	return
  5652  0CE8                     i1l3568:	
  5653                           
  5654                           ;usb_device.c: 2410: else
  5655                           ;usb_device.c: 2411: {
  5656                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  5657  0CE8  318B  2306         	fcall	_USBCtrlTrfOutHandler
  5658                           
  5659                           ;usb_device.c: 2414: }
  5660                           ;usb_device.c: 2415: }
  5661  0CEA  0008               	return
  5662  0CEB                     i1l3570:	
  5663                           
  5664                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5665  0CEB  30FD               	movlw	253
  5666  0CEC  0020               	movlb	0	; select bank0
  5667  0CED  056F               	andwf	_USTATcopy,w	;volatile
  5668  0CEE  00DF               	movwf	??_USBCtrlEPService
  5669  0CEF  3004               	movlw	4
  5670  0CF0  065F               	xorwf	??_USBCtrlEPService,w
  5671  0CF1  1D03               	btfss	3,2
  5672  0CF2  0008               	return
  5673                           
  5674                           ;usb_device.c: 2417: {
  5675                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5676  0CF3  318D  25B2         	fcall	_USBCtrlTrfInHandler
  5677  0CF5  0008               	return
  5678  0CF6                     __end_of_USBCtrlEPService:	
  5679                           
  5680                           	psect	text21
  5681  0C05                     __ptext21:	
  5682 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5683 ;; Defined at:
  5684 ;;		line 2465 in file "../../../../../../framework/usb/src/usb_device.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;		None
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;		None
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  1    wreg      void 
  5691 ;; Registers used:
  5692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5700 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;Total ram usage:        1 bytes
  5703 ;; Hardware stack levels used:    1
  5704 ;; Hardware stack levels required when called:    6
  5705 ;; This function calls:
  5706 ;;		_USBCheckStdRequest
  5707 ;;		_USBCtrlEPServiceComplete
  5708 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5709 ;; This function is called by:
  5710 ;;		_USBCtrlEPService
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           
  5715                           ;psect for function _USBCtrlTrfSetupHandler
  5716  0C05                     _USBCtrlTrfSetupHandler:	
  5717                           
  5718                           ;usb_device.c: 2470: shortPacketStatus = 0;
  5719                           
  5720                           ;incstack = 0
  5721                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5722  0C05  0022               	movlb	2	; select bank2
  5723  0C06  01EF               	clrf	_shortPacketStatus^(0+256)	;volatile
  5724                           
  5725                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  5726  0C07  01EC               	clrf	_USBDeferStatusStagePacket^(0+256)	;volatile
  5727                           
  5728                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  5729  0C08  0023               	movlb	3	; select bank3
  5730  0C09  01B5               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5731                           
  5732                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  5733  0C0A  01B6               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5734                           
  5735                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  5736  0C0B  01B2               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  5737                           
  5738                           ;usb_device.c: 2475: controlTransferState = 0;
  5739  0C0C  0020               	movlb	0	; select bank0
  5740  0C0D  01ED               	clrf	_controlTransferState	;volatile
  5741                           
  5742                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5743  0C0E  307F               	movlw	127
  5744  0C0F  00DE               	movwf	??_USBCtrlTrfSetupHandler
  5745  0C10  0866               	movf	_pBDTEntryIn,w
  5746  0C11  0086               	movwf	6
  5747  0C12  0867               	movf	_pBDTEntryIn+1,w
  5748  0C13  0087               	movwf	7
  5749  0C14  085E               	movf	??_USBCtrlTrfSetupHandler,w
  5750  0C15  0581               	andwf	1,f
  5751                           
  5752                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5753  0C16  3004               	movlw	4
  5754  0C17  0666               	xorwf	_pBDTEntryIn,w
  5755  0C18  00E6               	movwf	_pBDTEntryIn
  5756  0C19  3000               	movlw	0
  5757  0C1A  0667               	xorwf	_pBDTEntryIn+1,w
  5758  0C1B  00E7               	movwf	_pBDTEntryIn+1
  5759                           
  5760                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5761  0C1C  307F               	movlw	127
  5762  0C1D  00DE               	movwf	??_USBCtrlTrfSetupHandler
  5763  0C1E  0866               	movf	_pBDTEntryIn,w
  5764  0C1F  0086               	movwf	6
  5765  0C20  0867               	movf	_pBDTEntryIn+1,w
  5766  0C21  0087               	movwf	7
  5767  0C22  085E               	movf	??_USBCtrlTrfSetupHandler,w
  5768  0C23  0581               	andwf	1,f
  5769                           
  5770                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5771  0C24  3004               	movlw	4
  5772  0C25  0666               	xorwf	_pBDTEntryIn,w
  5773  0C26  00E6               	movwf	_pBDTEntryIn
  5774  0C27  3000               	movlw	0
  5775  0C28  0667               	xorwf	_pBDTEntryIn+1,w
  5776  0C29  00E7               	movwf	_pBDTEntryIn+1
  5777                           
  5778                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5779  0C2A  307F               	movlw	127
  5780  0C2B  00DE               	movwf	??_USBCtrlTrfSetupHandler
  5781  0C2C  086A               	movf	_pBDTEntryEP0OutNext,w
  5782  0C2D  0086               	movwf	6
  5783  0C2E  086B               	movf	_pBDTEntryEP0OutNext+1,w
  5784  0C2F  0087               	movwf	7
  5785  0C30  085E               	movf	??_USBCtrlTrfSetupHandler,w
  5786  0C31  0581               	andwf	1,f
  5787                           
  5788                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  5789  0C32  0022               	movlb	2	; select bank2
  5790  0C33  01E9               	clrf	(_inPipes^(0+256)+2)	;volatile
  5791                           
  5792                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  5793  0C34  01EA               	clrf	(_inPipes^(0+256)+3)	;volatile
  5794  0C35  01EB               	clrf	((_inPipes+1)^(0+256)+3)	;volatile
  5795                           
  5796                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  5797  0C36  01E2               	clrf	(_outPipes^(0+256)+2)	;volatile
  5798                           
  5799                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  5800  0C37  01E3               	clrf	(_outPipes^(0+256)+3)	;volatile
  5801  0C38  01E4               	clrf	((_outPipes+1)^(0+256)+3)	;volatile
  5802                           
  5803                           ;usb_device.c: 2500: USBCheckStdRequest();
  5804  0C39  318D  2552  318C   	fcall	_USBCheckStdRequest
  5805                           
  5806                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5807  0C3C  3000               	movlw	0
  5808  0C3D  0020               	movlb	0	; select bank0
  5809  0C3E  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5810  0C3F  3003               	movlw	3
  5811  0C40  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5812  0C41  3000               	movlw	0
  5813  0C42  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5814  0C43  3000               	movlw	0
  5815  0C44  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5816  0C45  3000               	movlw	0
  5817  0C46  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5818  0C47  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5819  0C48  318B  237E  318C   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5820                           
  5821                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  5822  0C4B  3185  2596         	fcall	_USBCtrlEPServiceComplete
  5823  0C4D  0008               	return
  5824  0C4E                     __end_of_USBCtrlTrfSetupHandler:	
  5825                           
  5826                           	psect	text22
  5827  0596                     __ptext22:	
  5828 ;; *************** function _USBCtrlEPServiceComplete *****************
  5829 ;; Defined at:
  5830 ;;		line 1616 in file "../../../../../../framework/usb/src/usb_device.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;		None
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;		None
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  1    wreg      void 
  5837 ;; Registers used:
  5838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;Total ram usage:        2 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:    2
  5851 ;; This function calls:
  5852 ;;		_USBCtrlEPAllowDataStage
  5853 ;;		_USBCtrlEPAllowStatusStage
  5854 ;; This function is called by:
  5855 ;;		_USBCtrlTrfSetupHandler
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           
  5860                           ;psect for function _USBCtrlEPServiceComplete
  5861  0596                     _USBCtrlEPServiceComplete:	
  5862                           
  5863                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5864                           
  5865                           ;incstack = 0
  5866                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5867  0596  003D               	movlb	29	; select bank29
  5868  0597  120E               	bcf	14,4	;volatile
  5869                           
  5870                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5871  0598  0022               	movlb	2	; select bank2
  5872  0599  1BE9               	btfsc	(_inPipes^(0+256)+2),7	;volatile
  5873  059A  2DDD               	goto	i1l340
  5874                           
  5875                           ;usb_device.c: 1629: {
  5876                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5877  059B  1FE2               	btfss	(_outPipes^(0+256)+2),7	;volatile
  5878  059C  2DAC               	goto	i1l3220
  5879                           
  5880                           ;usb_device.c: 1631: {
  5881                           ;usb_device.c: 1632: controlTransferState = 2;
  5882  059D  3002               	movlw	2
  5883  059E  00F5               	movwf	??_USBCtrlEPServiceComplete
  5884  059F  0875               	movf	??_USBCtrlEPServiceComplete,w
  5885  05A0  0020               	movlb	0	; select bank0
  5886  05A1  00ED               	movwf	_controlTransferState	;volatile
  5887                           
  5888                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5889  05A2  0023               	movlb	3	; select bank3
  5890  05A3  0836               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  5891  05A4  1D03               	btfss	3,2
  5892  05A5  2DA8               	goto	i1l3216
  5893                           
  5894                           ;usb_device.c: 1644: {
  5895                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5896  05A6  318C  24F6         	fcall	_USBCtrlEPAllowDataStage
  5897  05A8                     i1l3216:	
  5898                           
  5899                           ;usb_device.c: 1646: }
  5900                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5901  05A8  0023               	movlb	3	; select bank3
  5902  05A9  01B8               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5903                           
  5904                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5905  05AA  01B7               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5906                           
  5907                           ;usb_device.c: 1652: }
  5908  05AB  0008               	return
  5909  05AC                     i1l3220:	
  5910                           
  5911                           ;usb_device.c: 1653: else
  5912                           ;usb_device.c: 1654: {
  5913                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5914  05AC  0020               	movlb	0	; select bank0
  5915  05AD  086A               	movf	_pBDTEntryEP0OutNext,w
  5916  05AE  3E01               	addlw	1
  5917  05AF  00F5               	movwf	??_USBCtrlEPServiceComplete
  5918  05B0  3000               	movlw	0
  5919  05B1  3D6B               	addwfc	_pBDTEntryEP0OutNext+1,w
  5920  05B2  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5921  05B3  0875               	movf	??_USBCtrlEPServiceComplete,w
  5922  05B4  0086               	movwf	6
  5923  05B5  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5924  05B6  0087               	movwf	7
  5925  05B7  3008               	movlw	8
  5926  05B8  0081               	movwf	1
  5927                           
  5928                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5929  05B9  3040               	movlw	64
  5930  05BA  00F5               	movwf	??_USBCtrlEPServiceComplete
  5931  05BB  3000               	movlw	0
  5932  05BC  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5933  05BD  086A               	movf	_pBDTEntryEP0OutNext,w
  5934  05BE  0086               	movwf	6
  5935  05BF  086B               	movf	_pBDTEntryEP0OutNext+1,w
  5936  05C0  0087               	movwf	7
  5937  05C1  3142               	addfsr 1,2
  5938  05C2  0875               	movf	??_USBCtrlEPServiceComplete,w
  5939  05C3  3FC0               	movwi [0]fsr1
  5940  05C4  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5941  05C5  3FC1               	movwi [1]fsr1
  5942                           
  5943                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5944  05C6  086A               	movf	_pBDTEntryEP0OutNext,w
  5945  05C7  0086               	movwf	6
  5946  05C8  086B               	movf	_pBDTEntryEP0OutNext+1,w
  5947  05C9  0087               	movwf	7
  5948  05CA  300C               	movlw	12
  5949  05CB  0081               	movwf	1
  5950                           
  5951                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5952  05CC  086A               	movf	_pBDTEntryEP0OutNext,w
  5953  05CD  0086               	movwf	6
  5954  05CE  086B               	movf	_pBDTEntryEP0OutNext+1,w
  5955  05CF  0087               	movwf	7
  5956  05D0  1781               	bsf	1,7
  5957                           
  5958                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  5959  05D1  0866               	movf	_pBDTEntryIn,w
  5960  05D2  0086               	movwf	6
  5961  05D3  0867               	movf	_pBDTEntryIn+1,w
  5962  05D4  0087               	movwf	7
  5963  05D5  3004               	movlw	4
  5964  05D6  0081               	movwf	1
  5965                           
  5966                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5967  05D7  0866               	movf	_pBDTEntryIn,w
  5968  05D8  0086               	movwf	6
  5969  05D9  0867               	movf	_pBDTEntryIn+1,w
  5970  05DA  0087               	movwf	7
  5971  05DB  1781               	bsf	1,7
  5972                           
  5973                           ;usb_device.c: 1665: }
  5974                           ;usb_device.c: 1666: }
  5975  05DC  0008               	return
  5976  05DD                     i1l340:	
  5977                           
  5978                           ;usb_device.c: 1667: else
  5979                           ;usb_device.c: 1668: {
  5980                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  5981  05DD  0020               	movlb	0	; select bank0
  5982  05DE  1FC0               	btfss	64,7	;volatile
  5983  05DF  2DF5               	goto	i1l3246
  5984                           
  5985                           ;usb_device.c: 1670: {
  5986                           ;usb_device.c: 1671: controlTransferState = 1;
  5987  05E0  3001               	movlw	1
  5988  05E1  00F5               	movwf	??_USBCtrlEPServiceComplete
  5989  05E2  0875               	movf	??_USBCtrlEPServiceComplete,w
  5990  05E3  00ED               	movwf	_controlTransferState	;volatile
  5991                           
  5992                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  5993  05E4  0023               	movlb	3	; select bank3
  5994  05E5  0835               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  5995  05E6  1D03               	btfss	3,2
  5996  05E7  2DEB               	goto	i1l3238
  5997                           
  5998                           ;usb_device.c: 1686: {
  5999                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6000  05E8  318C  24F6  3185   	fcall	_USBCtrlEPAllowDataStage
  6001  05EB                     i1l3238:	
  6002                           
  6003                           ;usb_device.c: 1688: }
  6004                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6005  05EB  0023               	movlb	3	; select bank3
  6006  05EC  01B8               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6007                           
  6008                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6009  05ED  01B7               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6010                           
  6011                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6012  05EE  0022               	movlb	2	; select bank2
  6013  05EF  086C               	movf	_USBDeferStatusStagePacket^(0+256),w	;volatile
  6014  05F0  1D03               	btfss	3,2
  6015  05F1  0008               	return
  6016                           
  6017                           ;usb_device.c: 1713: {
  6018                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6019  05F2  318E  261E         	fcall	_USBCtrlEPAllowStatusStage
  6020                           
  6021                           ;usb_device.c: 1715: }
  6022                           ;usb_device.c: 1716: }
  6023  05F4  0008               	return
  6024  05F5                     i1l3246:	
  6025                           
  6026                           ;usb_device.c: 1717: else
  6027                           ;usb_device.c: 1718: {
  6028                           ;usb_device.c: 1729: controlTransferState = 2;
  6029  05F5  3002               	movlw	2
  6030  05F6  00F5               	movwf	??_USBCtrlEPServiceComplete
  6031  05F7  0875               	movf	??_USBCtrlEPServiceComplete,w
  6032  05F8  0020               	movlb	0	; select bank0
  6033  05F9  00ED               	movwf	_controlTransferState	;volatile
  6034                           
  6035                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6036  05FA  086A               	movf	_pBDTEntryEP0OutNext,w
  6037  05FB  3E01               	addlw	1
  6038  05FC  00F5               	movwf	??_USBCtrlEPServiceComplete
  6039  05FD  3000               	movlw	0
  6040  05FE  3D6B               	addwfc	_pBDTEntryEP0OutNext+1,w
  6041  05FF  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6042  0600  0875               	movf	??_USBCtrlEPServiceComplete,w
  6043  0601  0086               	movwf	6
  6044  0602  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6045  0603  0087               	movwf	7
  6046  0604  3008               	movlw	8
  6047  0605  0081               	movwf	1
  6048                           
  6049                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6050  0606  3040               	movlw	64
  6051  0607  00F5               	movwf	??_USBCtrlEPServiceComplete
  6052  0608  3000               	movlw	0
  6053  0609  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6054  060A  086A               	movf	_pBDTEntryEP0OutNext,w
  6055  060B  0086               	movwf	6
  6056  060C  086B               	movf	_pBDTEntryEP0OutNext+1,w
  6057  060D  0087               	movwf	7
  6058  060E  3142               	addfsr 1,2
  6059  060F  0875               	movf	??_USBCtrlEPServiceComplete,w
  6060  0610  3FC0               	movwi [0]fsr1
  6061  0611  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6062  0612  3FC1               	movwi [1]fsr1
  6063                           
  6064                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6065  0613  086A               	movf	_pBDTEntryEP0OutNext,w
  6066  0614  0086               	movwf	6
  6067  0615  086B               	movf	_pBDTEntryEP0OutNext+1,w
  6068  0616  0087               	movwf	7
  6069  0617  3004               	movlw	4
  6070  0618  0081               	movwf	1
  6071                           
  6072                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6073  0619  086A               	movf	_pBDTEntryEP0OutNext,w
  6074  061A  0086               	movwf	6
  6075  061B  086B               	movf	_pBDTEntryEP0OutNext+1,w
  6076  061C  0087               	movwf	7
  6077  061D  1781               	bsf	1,7
  6078                           
  6079                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6080  061E  0023               	movlb	3	; select bank3
  6081  061F  01B8               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6082                           
  6083                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6084  0620  01B7               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6085                           
  6086                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6087  0621  0022               	movlb	2	; select bank2
  6088  0622  086C               	movf	_USBDeferStatusStagePacket^(0+256),w	;volatile
  6089  0623  1D03               	btfss	3,2
  6090  0624  0008               	return
  6091                           
  6092                           ;usb_device.c: 1741: {
  6093                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  6094  0625  318E  261E         	fcall	_USBCtrlEPAllowStatusStage
  6095  0627  0008               	return
  6096  0628                     __end_of_USBCtrlEPServiceComplete:	
  6097                           
  6098                           	psect	text23
  6099  0CF6                     __ptext23:	
  6100 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6101 ;; Defined at:
  6102 ;;		line 1488 in file "../../../../../../framework/usb/src/usb_device.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;		None
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;		None
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      void 
  6109 ;; Registers used:
  6110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;Total ram usage:        2 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    1
  6123 ;; This function calls:
  6124 ;;		_USBCtrlTrfTxService
  6125 ;; This function is called by:
  6126 ;;		_USBCtrlEPServiceComplete
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           
  6131                           ;psect for function _USBCtrlEPAllowDataStage
  6132  0CF6                     _USBCtrlEPAllowDataStage:	
  6133                           
  6134                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6135                           
  6136                           ;incstack = 0
  6137                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6138  0CF6  0023               	movlb	3	; select bank3
  6139  0CF7  01B5               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  6140                           
  6141                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6142  0CF8  01B6               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  6143                           
  6144                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6145  0CF9  3002               	movlw	2
  6146  0CFA  0020               	movlb	0	; select bank0
  6147  0CFB  066D               	xorwf	_controlTransferState,w	;volatile
  6148  0CFC  1D03               	btfss	3,2
  6149  0CFD  2D23               	goto	i1l2998
  6150                           
  6151                           ;usb_device.c: 1494: {
  6152                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6153  0CFE  086A               	movf	_pBDTEntryEP0OutNext,w
  6154  0CFF  3E01               	addlw	1
  6155  0D00  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6156  0D01  3000               	movlw	0
  6157  0D02  3D6B               	addwfc	_pBDTEntryEP0OutNext+1,w
  6158  0D03  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6159  0D04  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6160  0D05  0086               	movwf	6
  6161  0D06  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6162  0D07  0087               	movwf	7
  6163  0D08  3008               	movlw	8
  6164  0D09  0081               	movwf	1
  6165                           
  6166                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6167  0D0A  3048               	movlw	72
  6168  0D0B  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6169  0D0C  3000               	movlw	0
  6170  0D0D  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6171  0D0E  086A               	movf	_pBDTEntryEP0OutNext,w
  6172  0D0F  0086               	movwf	6
  6173  0D10  086B               	movf	_pBDTEntryEP0OutNext+1,w
  6174  0D11  0087               	movwf	7
  6175  0D12  3142               	addfsr 1,2
  6176  0D13  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6177  0D14  3FC0               	movwi [0]fsr1
  6178  0D15  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6179  0D16  3FC1               	movwi [1]fsr1
  6180                           
  6181                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6182  0D17  086A               	movf	_pBDTEntryEP0OutNext,w
  6183  0D18  0086               	movwf	6
  6184  0D19  086B               	movf	_pBDTEntryEP0OutNext+1,w
  6185  0D1A  0087               	movwf	7
  6186  0D1B  3048               	movlw	72
  6187  0D1C  0081               	movwf	1
  6188                           
  6189                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6190  0D1D  086A               	movf	_pBDTEntryEP0OutNext,w
  6191  0D1E  0086               	movwf	6
  6192  0D1F  086B               	movf	_pBDTEntryEP0OutNext+1,w
  6193  0D20  0087               	movwf	7
  6194  0D21  1781               	bsf	1,7
  6195                           
  6196                           ;usb_device.c: 1500: }
  6197  0D22  0008               	return
  6198  0D23                     i1l2998:	
  6199                           
  6200                           ;usb_device.c: 1501: else
  6201                           ;usb_device.c: 1502: {
  6202                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6203  0D23  0022               	movlb	2	; select bank2
  6204  0D24  086B               	movf	((_inPipes+1)^(0+256)+3),w	;volatile
  6205  0D25  0020               	movlb	0	; select bank0
  6206  0D26  0247               	subwf	71,w	;volatile
  6207  0D27  1D03               	skipz
  6208  0D28  2D2D               	goto	u204_25
  6209  0D29  0022               	movlb	2	; select bank2
  6210  0D2A  086A               	movf	(_inPipes^(0+256)+3),w	;volatile
  6211  0D2B  0020               	movlb	0	; select bank0
  6212  0D2C  0246               	subwf	70,w	;volatile
  6213  0D2D                     u204_25:	
  6214  0D2D  1803               	skipnc
  6215  0D2E  2D36               	goto	i1l3002
  6216                           
  6217                           ;usb_device.c: 1506: {
  6218                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6219  0D2F  0847               	movf	71,w	;volatile
  6220  0D30  0022               	movlb	2	; select bank2
  6221  0D31  00EB               	movwf	((_inPipes+1)^(0+256)+3)	;volatile
  6222  0D32  0020               	movlb	0	; select bank0
  6223  0D33  0846               	movf	70,w	;volatile
  6224  0D34  0022               	movlb	2	; select bank2
  6225  0D35  00EA               	movwf	(_inPipes^(0+256)+3)	;volatile
  6226  0D36                     i1l3002:	
  6227                           
  6228                           ;usb_device.c: 1508: }
  6229                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6230  0D36  318E  268E         	fcall	_USBCtrlTrfTxService
  6231                           
  6232                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6233  0D38  3048               	movlw	72
  6234  0D39  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6235  0D3A  3000               	movlw	0
  6236  0D3B  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6237  0D3C  0020               	movlb	0	; select bank0
  6238  0D3D  0866               	movf	_pBDTEntryIn,w
  6239  0D3E  0086               	movwf	6
  6240  0D3F  0867               	movf	_pBDTEntryIn+1,w
  6241  0D40  0087               	movwf	7
  6242  0D41  3142               	addfsr 1,2
  6243  0D42  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6244  0D43  3FC0               	movwi [0]fsr1
  6245  0D44  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6246  0D45  3FC1               	movwi [1]fsr1
  6247                           
  6248                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6249  0D46  0866               	movf	_pBDTEntryIn,w
  6250  0D47  0086               	movwf	6
  6251  0D48  0867               	movf	_pBDTEntryIn+1,w
  6252  0D49  0087               	movwf	7
  6253  0D4A  3048               	movlw	72
  6254  0D4B  0081               	movwf	1
  6255                           
  6256                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6257  0D4C  0866               	movf	_pBDTEntryIn,w
  6258  0D4D  0086               	movwf	6
  6259  0D4E  0867               	movf	_pBDTEntryIn+1,w
  6260  0D4F  0087               	movwf	7
  6261  0D50  1781               	bsf	1,7
  6262  0D51  0008               	return
  6263  0D52                     __end_of_USBCtrlEPAllowDataStage:	
  6264                           
  6265                           	psect	text24
  6266  0D52                     __ptext24:	
  6267 ;; *************** function _USBCheckStdRequest *****************
  6268 ;; Defined at:
  6269 ;;		line 2686 in file "../../../../../../framework/usb/src/usb_device.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;		None
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;		None
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1    wreg      void 
  6276 ;; Registers used:
  6277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;Total ram usage:        1 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; Hardware stack levels required when called:    5
  6290 ;; This function calls:
  6291 ;;		_USBStdFeatureReqHandler
  6292 ;;		_USBStdGetDscHandler
  6293 ;;		_USBStdGetStatusHandler
  6294 ;;		_USBStdSetCfgHandler
  6295 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6296 ;; This function is called by:
  6297 ;;		_USBCtrlTrfSetupHandler
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           
  6302                           ;psect for function _USBCheckStdRequest
  6303  0D52                     _USBCheckStdRequest:	
  6304                           
  6305                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6306                           
  6307                           ;incstack = 0
  6308                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6309  0D52  0020               	movlb	0	; select bank0
  6310  0D53  0E40               	swapf	64,w	;volatile
  6311  0D54  0C89               	rrf	9,f
  6312  0D55  3903               	andlw	3
  6313  0D56  3A00               	xorlw	0
  6314  0D57  1D03               	btfss	3,2
  6315  0D58  0008               	return
  6316  0D59  2DA6               	goto	i1l3340
  6317  0D5A                     i1l467:	
  6318                           ;usb_device.c: 2691: {
  6319                           ;usb_device.c: 2692: case 5:
  6320                           
  6321                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  6322                           
  6323                           
  6324                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6325  0D5A  0022               	movlb	2	; select bank2
  6326  0D5B  17E9               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6327                           
  6328                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6329  0D5C  3008               	movlw	8
  6330  0D5D  0020               	movlb	0	; select bank0
  6331  0D5E  00DD               	movwf	??_USBCheckStdRequest
  6332  0D5F  085D               	movf	??_USBCheckStdRequest,w
  6333  0D60  00EC               	movwf	_USBDeviceState	;volatile
  6334                           
  6335                           ;usb_device.c: 2696: break;
  6336  0D61  0008               	return
  6337  0D62                     i1l3310:	
  6338                           ;usb_device.c: 2697: case 6:
  6339                           
  6340                           
  6341                           ;usb_device.c: 2698: USBStdGetDscHandler();
  6342  0D62  318F  2701         	fcall	_USBStdGetDscHandler
  6343                           
  6344                           ;usb_device.c: 2699: break;
  6345  0D64  0008               	return
  6346  0D65                     i1l3312:	
  6347                           ;usb_device.c: 2700: case 9:
  6348                           
  6349                           
  6350                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  6351  0D65  3187  2730         	fcall	_USBStdSetCfgHandler
  6352                           
  6353                           ;usb_device.c: 2702: break;
  6354  0D67  0008               	return
  6355  0D68                     i1l3314:	
  6356                           ;usb_device.c: 2703: case 8:
  6357                           
  6358                           
  6359                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6360  0D68  30EE               	movlw	low _USBActiveConfiguration
  6361  0D69  0022               	movlb	2	; select bank2
  6362  0D6A  00E7               	movwf	_inPipes^(0+256)	;volatile
  6363  0D6B  3000               	movlw	high _USBActiveConfiguration
  6364  0D6C  00E8               	movwf	(_inPipes+1)^(0+256)	;volatile
  6365                           
  6366                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6367  0D6D  1469               	bsf	(_inPipes^(0+256)+2),0	;volatile
  6368                           
  6369                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6370  0D6E  3001               	movlw	1
  6371  0D6F  0020               	movlb	0	; select bank0
  6372  0D70  00DD               	movwf	??_USBCheckStdRequest
  6373  0D71  085D               	movf	??_USBCheckStdRequest,w
  6374  0D72  0022               	movlb	2	; select bank2
  6375  0D73  00EA               	movwf	(_inPipes^(0+256)+3)	;volatile
  6376                           
  6377                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6378  0D74  17E9               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6379                           
  6380                           ;usb_device.c: 2708: break;
  6381  0D75  0008               	return
  6382  0D76                     i1l3322:	
  6383                           ;usb_device.c: 2709: case 0:
  6384                           
  6385                           
  6386                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  6387  0D76  318C  244E         	fcall	_USBStdGetStatusHandler
  6388                           
  6389                           ;usb_device.c: 2711: break;
  6390  0D78  0008               	return
  6391  0D79                     i1l3324:	
  6392                           ;usb_device.c: 2712: case 1:
  6393                           
  6394                           
  6395                           ;usb_device.c: 2713: case 3:
  6396                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  6397  0D79  3180  2030         	fcall	_USBStdFeatureReqHandler
  6398                           
  6399                           ;usb_device.c: 2715: break;
  6400  0D7B  0008               	return
  6401  0D7C                     i1l3326:	
  6402                           ;usb_device.c: 2716: case 10:
  6403                           
  6404                           
  6405                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6406  0D7C  0020               	movlb	0	; select bank0
  6407  0D7D  0844               	movf	68,w	;volatile
  6408  0D7E  3EEF               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  6409  0D7F  0022               	movlb	2	; select bank2
  6410  0D80  00E7               	movwf	_inPipes^(0+256)	;volatile
  6411  0D81  3000               	movlw	0
  6412  0D82  00E8               	movwf	(_inPipes+1)^(0+256)	;volatile
  6413                           
  6414                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6415  0D83  1469               	bsf	(_inPipes^(0+256)+2),0	;volatile
  6416                           
  6417                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6418  0D84  3001               	movlw	1
  6419  0D85  0020               	movlb	0	; select bank0
  6420  0D86  00DD               	movwf	??_USBCheckStdRequest
  6421  0D87  085D               	movf	??_USBCheckStdRequest,w
  6422  0D88  0022               	movlb	2	; select bank2
  6423  0D89  00EA               	movwf	(_inPipes^(0+256)+3)	;volatile
  6424                           
  6425                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6426  0D8A  17E9               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6427                           
  6428                           ;usb_device.c: 2721: break;
  6429  0D8B  0008               	return
  6430  0D8C                     i1l476:	
  6431                           ;usb_device.c: 2722: case 11:
  6432                           
  6433                           
  6434                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6435  0D8C  0022               	movlb	2	; select bank2
  6436  0D8D  17E9               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6437                           
  6438                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6439  0D8E  0020               	movlb	0	; select bank0
  6440  0D8F  0842               	movf	66,w	;volatile
  6441  0D90  00DD               	movwf	??_USBCheckStdRequest
  6442  0D91  0844               	movf	68,w	;volatile
  6443  0D92  3EEF               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  6444  0D93  0086               	movwf	6
  6445  0D94  0187               	clrf	7
  6446  0D95  085D               	movf	??_USBCheckStdRequest,w
  6447  0D96  0081               	movwf	1
  6448                           
  6449                           ;usb_device.c: 2725: break;
  6450  0D97  0008               	return
  6451  0D98                     i1l3336:	
  6452                           ;usb_device.c: 2726: case 7:
  6453                           
  6454                           
  6455                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6456  0D98  3000               	movlw	0
  6457  0D99  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6458  0D9A  3002               	movlw	2
  6459  0D9B  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6460  0D9C  3000               	movlw	0
  6461  0D9D  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6462  0D9E  3000               	movlw	0
  6463  0D9F  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6464  0DA0  3000               	movlw	0
  6465  0DA1  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6466  0DA2  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6467  0DA3  318B  237E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6468                           
  6469                           ;usb_device.c: 2732: }
  6470                           
  6471                           ;usb_device.c: 2731: break;
  6472                           
  6473                           ;usb_device.c: 2730: default:
  6474                           
  6475                           ;usb_device.c: 2729: case 12:
  6476                           
  6477                           ;usb_device.c: 2728: break;
  6478  0DA5  0008               	return
  6479  0DA6                     i1l3340:	
  6480  0DA6  0020               	movlb	0	; select bank0
  6481  0DA7  0841               	movf	65,w	;volatile
  6482                           
  6483                           ; Switch size 1, requested type "space"
  6484                           ; Number of cases is 11, Range of values is 0 to 12
  6485                           ; switch strategies available:
  6486                           ; Name         Instructions Cycles
  6487                           ; direct_byte           32     6 (fixed)
  6488                           ; simple_byte           34    18 (average)
  6489                           ; jumptable            260     6 (fixed)
  6490                           ;	Chosen strategy is direct_byte
  6491  0DA8  0084               	movwf	4
  6492  0DA9  300D               	movlw	13
  6493  0DAA  0204               	subwf	4,w
  6494  0DAB  1803               	skipnc
  6495  0DAC  0008               	return
  6496  0DAD  3188               	movlp	high i1S4192
  6497  0DAE  3504               	lslf	4,w
  6498  0DAF  3E00               	addlw	low i1S4192
  6499  0DB0  0082               	movwf	2
  6500  0DB1                     i1l465:	
  6501  0DB1  0008               	return
  6502  0DB2                     __end_of_USBCheckStdRequest:	
  6503                           
  6504                           	psect	swtext3
  6505  0800                     __pswtext3:	
  6506  0800                     i1S4192:	
  6507  0800  318D  2D76         	ljmp	i1l3322
  6508  0802  318D  2D79         	ljmp	i1l3324
  6509  0804  318D  2DB1         	ljmp	i1l465
  6510  0806  318D  2D79         	ljmp	i1l3324
  6511  0808  318D  2DB1         	ljmp	i1l465
  6512  080A  318D  2D5A         	ljmp	i1l467
  6513  080C  318D  2D62         	ljmp	i1l3310
  6514  080E  318D  2D98         	ljmp	i1l3336
  6515  0810  318D  2D68         	ljmp	i1l3314
  6516  0812  318D  2D65         	ljmp	i1l3312
  6517  0814  318D  2D7C         	ljmp	i1l3326
  6518  0816  318D  2D8C         	ljmp	i1l476
  6519  0818  318D  2DB1         	ljmp	i1l465
  6520                           
  6521                           	psect	text25
  6522  0730                     __ptext25:	
  6523 ;; *************** function _USBStdSetCfgHandler *****************
  6524 ;; Defined at:
  6525 ;;		line 1968 in file "../../../../../../framework/usb/src/usb_device.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;		None
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  p               2    7[BANK0 ] PTR unsigned char 
  6530 ;;		 -> UEP1(1), 
  6531 ;;  i               1    9[BANK0 ] unsigned char 
  6532 ;;  i               1   10[BANK0 ] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  1    wreg      void 
  6535 ;; Registers used:
  6536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6544 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6546 ;;Total ram usage:        5 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; Hardware stack levels required when called:    4
  6549 ;; This function calls:
  6550 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6551 ;;		_memset
  6552 ;; This function is called by:
  6553 ;;		_USBCheckStdRequest
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           
  6558                           ;psect for function _USBStdSetCfgHandler
  6559  0730                     _USBStdSetCfgHandler:	
  6560                           
  6561                           ;usb_device.c: 1970: uint8_t i;
  6562                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6563                           
  6564                           ;incstack = 0
  6565                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6566  0730  0022               	movlb	2	; select bank2
  6567  0731  17E9               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6568                           
  6569                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 
      +                          0; };
  6570  0732  300E               	movlw	14
  6571  0733  0020               	movlb	0	; select bank0
  6572  0734  00D8               	movwf	USBStdSetCfgHandler@p+1
  6573  0735  3099               	movlw	153
  6574  0736  00D7               	movwf	USBStdSetCfgHandler@p
  6575  0737  01D9               	clrf	USBStdSetCfgHandler@i_1253
  6576  0738  0859               	movf	USBStdSetCfgHandler@i_1253,w
  6577  0739  1D03               	btfss	3,2
  6578  073A  2F4B               	goto	i1l3026
  6579  073B                     i1l3018:	
  6580  073B  0857               	movf	USBStdSetCfgHandler@p,w
  6581  073C  0086               	movwf	6
  6582  073D  0858               	movf	USBStdSetCfgHandler@p+1,w
  6583  073E  0087               	movwf	7
  6584  073F  0181               	clrf	1
  6585  0740  3001               	movlw	1
  6586  0741  07D7               	addwf	USBStdSetCfgHandler@p,f
  6587  0742  3000               	movlw	0
  6588  0743  3DD8               	addwfc	USBStdSetCfgHandler@p+1,f
  6589  0744  3001               	movlw	1
  6590  0745  00D6               	movwf	??_USBStdSetCfgHandler
  6591  0746  0856               	movf	??_USBStdSetCfgHandler,w
  6592  0747  07D9               	addwf	USBStdSetCfgHandler@i_1253,f
  6593  0748  0859               	movf	USBStdSetCfgHandler@i_1253,w
  6594  0749  1903               	btfsc	3,2
  6595  074A  2F3B               	goto	i1l3018
  6596  074B                     i1l3026:	
  6597                           
  6598                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6599  074B  3000               	movlw	0
  6600  074C  00F0               	movwf	memset@c
  6601  074D  00F1               	movwf	memset@c+1
  6602  074E  3020               	movlw	32
  6603  074F  00F2               	movwf	memset@n
  6604  0750  3000               	movlw	0
  6605  0751  00F3               	movwf	memset@n+1
  6606  0752  3020               	movlw	32
  6607  0753  3189  21B7  3187   	fcall	_memset
  6608                           
  6609                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6610  0756  003D               	movlb	29	; select bank29
  6611  0757  170E               	bsf	14,6	;volatile
  6612                           
  6613                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(1+1u); i++)
  6614  0758  0020               	movlb	0	; select bank0
  6615  0759  01DA               	clrf	USBStdSetCfgHandler@i
  6616  075A  3002               	movlw	2
  6617  075B  025A               	subwf	USBStdSetCfgHandler@i,w
  6618  075C  1803               	btfsc	3,0
  6619  075D  2F72               	goto	i1l3042
  6620  075E                     i1l3036:	
  6621                           
  6622                           ;usb_device.c: 1988: {
  6623                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6624  075E  085A               	movf	USBStdSetCfgHandler@i,w
  6625  075F  3EAE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6626  0760  0086               	movwf	6
  6627  0761  3001               	movlw	1	; select bank3/4
  6628  0762  0087               	movwf	7
  6629  0763  0181               	clrf	1
  6630                           
  6631                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6632  0764  085A               	movf	USBStdSetCfgHandler@i,w
  6633  0765  3EB0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6634  0766  0086               	movwf	6
  6635  0767  3001               	movlw	1	; select bank3/4
  6636  0768  0087               	movwf	7
  6637  0769  0181               	clrf	1
  6638  076A  3001               	movlw	1
  6639  076B  00D6               	movwf	??_USBStdSetCfgHandler
  6640  076C  0856               	movf	??_USBStdSetCfgHandler,w
  6641  076D  07DA               	addwf	USBStdSetCfgHandler@i,f
  6642  076E  3002               	movlw	2
  6643  076F  025A               	subwf	USBStdSetCfgHandler@i,w
  6644  0770  1C03               	skipc
  6645  0771  2F5E               	goto	i1l3036
  6646  0772                     i1l3042:	
  6647                           
  6648                           ;usb_device.c: 1991: }
  6649                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,1);
  6650  0772  3000               	movlw	0
  6651  0773  00F0               	movwf	memset@c
  6652  0774  00F1               	movwf	memset@c+1
  6653  0775  3001               	movlw	1
  6654  0776  00F2               	movwf	memset@n
  6655  0777  3000               	movlw	0
  6656  0778  00F3               	movwf	memset@n+1
  6657  0779  30EF               	movlw	(low (_USBAlternateInterface| 0))& (0+255)
  6658  077A  3189  21B7  3187   	fcall	_memset
  6659                           
  6660                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6661  077D  003D               	movlb	29	; select bank29
  6662  077E  130E               	bcf	14,6	;volatile
  6663                           
  6664                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6665  077F  3028               	movlw	40
  6666  0780  0020               	movlb	0	; select bank0
  6667  0781  00E6               	movwf	_pBDTEntryIn
  6668  0782  3000               	movlw	0
  6669  0783  00E7               	movwf	_pBDTEntryIn+1
  6670                           
  6671                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6672  0784  3020               	movlw	32
  6673  0785  00D6               	movwf	??_USBStdSetCfgHandler
  6674  0786  0856               	movf	??_USBStdSetCfgHandler,w
  6675  0787  00EE               	movwf	_pBDTEntryEP0OutCurrent
  6676                           
  6677                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6678  0788  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6679  0789  00EA               	movwf	_pBDTEntryEP0OutNext
  6680  078A  39FF               	andlw	255
  6681  078B  1D03               	skipz
  6682  078C  3000               	movlw	0
  6683  078D  00EB               	movwf	_pBDTEntryEP0OutNext+1
  6684                           
  6685                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6686  078E  0842               	movf	66,w	;volatile
  6687  078F  00D6               	movwf	??_USBStdSetCfgHandler
  6688  0790  0856               	movf	??_USBStdSetCfgHandler,w
  6689  0791  0021               	movlb	1	; select bank1
  6690  0792  00EE               	movwf	_USBActiveConfiguration^(0+128)	;volatile
  6691                           
  6692                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6693  0793  086E               	movf	_USBActiveConfiguration^(0+128),w	;volatile
  6694  0794  1D03               	btfss	3,2
  6695  0795  2F9C               	goto	i1l3058
  6696                           
  6697                           ;usb_device.c: 2010: {
  6698                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6699  0796  3010               	movlw	16
  6700  0797  0020               	movlb	0	; select bank0
  6701  0798  00D6               	movwf	??_USBStdSetCfgHandler
  6702  0799  0856               	movf	??_USBStdSetCfgHandler,w
  6703  079A  00EC               	movwf	_USBDeviceState	;volatile
  6704                           
  6705                           ;usb_device.c: 2013: }
  6706  079B  0008               	return
  6707  079C                     i1l3058:	
  6708                           
  6709                           ;usb_device.c: 2014: else
  6710                           ;usb_device.c: 2015: {
  6711                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6712  079C  3000               	movlw	0
  6713  079D  0020               	movlb	0	; select bank0
  6714  079E  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6715  079F  3001               	movlw	1
  6716  07A0  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6717  07A1  30EE               	movlw	low _USBActiveConfiguration
  6718  07A2  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6719  07A3  3000               	movlw	high _USBActiveConfiguration
  6720  07A4  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6721  07A5  3001               	movlw	1
  6722  07A6  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6723  07A7  3000               	movlw	0
  6724  07A8  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6725  07A9  318B  237E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6726                           
  6727                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6728  07AB  3020               	movlw	32
  6729  07AC  0020               	movlb	0	; select bank0
  6730  07AD  00D6               	movwf	??_USBStdSetCfgHandler
  6731  07AE  0856               	movf	??_USBStdSetCfgHandler,w
  6732  07AF  00EC               	movwf	_USBDeviceState	;volatile
  6733  07B0  0008               	return
  6734  07B1                     __end_of_USBStdSetCfgHandler:	
  6735                           
  6736                           	psect	text26
  6737  09B7                     __ptext26:	
  6738 ;; *************** function _memset *****************
  6739 ;; Defined at:
  6740 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\memset.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  p1              1    wreg     PTR void 
  6743 ;;		 -> USBAlternateInterface(1), BDT(32), 
  6744 ;;  c               2    0[COMMON] int 
  6745 ;;  n               2    2[COMMON] unsigned int 
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;  p1              1    6[COMMON] PTR void 
  6748 ;;		 -> USBAlternateInterface(1), BDT(32), 
  6749 ;;  p               1    5[COMMON] PTR unsigned char 
  6750 ;;		 -> USBAlternateInterface(1), BDT(32), 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      PTR void 
  6753 ;; Registers used:
  6754 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6763 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6764 ;;Total ram usage:        7 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; This function calls:
  6767 ;;		Nothing
  6768 ;; This function is called by:
  6769 ;;		_USBStdSetCfgHandler
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           
  6774                           ;psect for function _memset
  6775  09B7                     _memset:	
  6776                           
  6777                           ;incstack = 0
  6778                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6779                           ;memset@p1 stored from wreg
  6780  09B7  00F6               	movwf	memset@p1
  6781  09B8  0876               	movf	memset@p1,w
  6782  09B9  00F4               	movwf	??_memset
  6783  09BA  0874               	movf	??_memset,w
  6784  09BB  00F5               	movwf	memset@p
  6785  09BC                     i1l2948:	
  6786  09BC  3001               	movlw	1
  6787  09BD  02F2               	subwf	memset@n,f
  6788  09BE  3000               	movlw	0
  6789  09BF  3BF3               	subwfb	memset@n+1,f
  6790  09C0  0A72               	incf	memset@n,w
  6791  09C1  1903               	btfsc	3,2
  6792  09C2  0A73               	incf	memset@n+1,w
  6793  09C3  1903               	btfsc	3,2
  6794  09C4  0008               	return
  6795  09C5  0870               	movf	memset@c,w
  6796  09C6  00F4               	movwf	??_memset
  6797  09C7  0875               	movf	memset@p,w
  6798  09C8  0086               	movwf	6
  6799  09C9  0187               	clrf	7
  6800  09CA  0874               	movf	??_memset,w
  6801  09CB  0081               	movwf	1
  6802  09CC  3001               	movlw	1
  6803  09CD  00F4               	movwf	??_memset
  6804  09CE  0874               	movf	??_memset,w
  6805  09CF  07F5               	addwf	memset@p,f
  6806  09D0  29BC               	goto	i1l2948
  6807  09D1                     __end_of_memset:	
  6808                           ;	Return value of _memset is never used
  6809                           
  6810                           
  6811                           	psect	text27
  6812  0C4E                     __ptext27:	
  6813 ;; *************** function _USBStdGetStatusHandler *****************
  6814 ;; Defined at:
  6815 ;;		line 2129 in file "../../../../../../framework/usb/src/usb_device.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;		None
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;  p               2    1[COMMON] PTR struct __BDT
  6820 ;;		 -> RAM(4096), NULL(0), BDT(32), 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  1    wreg      void 
  6823 ;; Registers used:
  6824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6834 ;;Total ram usage:        3 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_USBCheckStdRequest
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           
  6844                           ;psect for function _USBStdGetStatusHandler
  6845  0C4E                     _USBStdGetStatusHandler:	
  6846                           
  6847                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6848                           
  6849                           ;incstack = 0
  6850                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  6851  0C4E  0020               	movlb	0	; select bank0
  6852  0C4F  01C8               	clrf	72	;volatile
  6853                           
  6854                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6855  0C50  01C9               	clrf	73	;volatile
  6856                           
  6857                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6858  0C51  2C89               	goto	i1l3114
  6859  0C52                     i1l405:	
  6860                           ;usb_device.c: 2135: {
  6861                           ;usb_device.c: 2136: case (0x00):
  6862                           
  6863                           
  6864                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6865  0C52  0022               	movlb	2	; select bank2
  6866  0C53  17E9               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6867                           
  6868                           ;usb_device.c: 2145: }
  6869                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6870                           
  6871                           ;usb_device.c: 2143: {
  6872                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  6873                           
  6874                           ;usb_device.c: 2142: if(0 == 1)
  6875  0C54  0023               	movlb	3	; select bank3
  6876  0C55  0333               	decf	_RemoteWakeup^(0+384),w	;volatile
  6877  0C56  1D03               	btfss	3,2
  6878  0C57  2C95               	goto	i1l408
  6879                           
  6880                           ;usb_device.c: 2148: {
  6881                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6882  0C58  0020               	movlb	0	; select bank0
  6883  0C59  14C8               	bsf	72,1	;volatile
  6884                           
  6885                           ;usb_device.c: 2150: }
  6886                           ;usb_device.c: 2151: break;
  6887  0C5A  2C95               	goto	i1l408
  6888  0C5B                     i1l409:	
  6889                           ;usb_device.c: 2152: case (0x01):
  6890                           
  6891                           
  6892                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6893  0C5B  0022               	movlb	2	; select bank2
  6894  0C5C  17E9               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6895                           
  6896                           ;usb_device.c: 2154: break;
  6897  0C5D  2C95               	goto	i1l408
  6898  0C5E                     i1l410:	
  6899                           ;usb_device.c: 2155: case (0x02):
  6900                           
  6901                           
  6902                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6903  0C5E  0022               	movlb	2	; select bank2
  6904  0C5F  17E9               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6905                           
  6906                           ;usb_device.c: 2160: {
  6907                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6908                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6909  0C60  0020               	movlb	0	; select bank0
  6910  0C61  1BC4               	btfsc	68,7	;volatile
  6911  0C62  2C6E               	goto	i1l3104
  6912                           
  6913                           ;usb_device.c: 2164: {
  6914                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6915  0C63  0844               	movf	68,w	;volatile
  6916  0C64  390F               	andlw	15
  6917  0C65  0709               	addwf	9,w
  6918  0C66  3EA4               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6919  0C67  0086               	movwf	6
  6920  0C68  3001               	movlw	1	; select bank3/4
  6921  0C69  0087               	movwf	7
  6922  0C6A  3F40               	moviw [0]fsr1
  6923  0C6B  00F1               	movwf	USBStdGetStatusHandler@p
  6924  0C6C  3F41               	moviw [1]fsr1
  6925  0C6D  2C77               	goto	L5
  6926  0C6E                     i1l3104:	
  6927                           ;usb_device.c: 2166: }
  6928                           
  6929                           
  6930                           ;usb_device.c: 2167: else
  6931                           ;usb_device.c: 2168: {
  6932                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6933  0C6E  0844               	movf	68,w	;volatile
  6934  0C6F  390F               	andlw	15
  6935  0C70  0709               	addwf	9,w
  6936  0C71  3E66               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6937  0C72  0086               	movwf	6
  6938  0C73  0187               	clrf	7
  6939  0C74  3F40               	moviw [0]fsr1
  6940  0C75  00F1               	movwf	USBStdGetStatusHandler@p
  6941  0C76  3F41               	moviw [1]fsr1
  6942  0C77                     L5:	
  6943  0C77  00F2               	movwf	USBStdGetStatusHandler@p+1
  6944                           
  6945                           ;usb_device.c: 2170: }
  6946                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6947  0C78  0871               	movf	USBStdGetStatusHandler@p,w
  6948  0C79  0086               	movwf	6
  6949  0C7A  0872               	movf	USBStdGetStatusHandler@p+1,w
  6950  0C7B  0087               	movwf	7
  6951  0C7C  1F81               	btfss	1,7
  6952  0C7D  2C95               	goto	i1l408
  6953  0C7E  0871               	movf	USBStdGetStatusHandler@p,w
  6954  0C7F  0086               	movwf	6
  6955  0C80  0872               	movf	USBStdGetStatusHandler@p+1,w
  6956  0C81  0087               	movwf	7
  6957  0C82  1D01               	btfss	1,2
  6958  0C83  2C95               	goto	i1l408
  6959                           
  6960                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6961  0C84  3001               	movlw	1
  6962  0C85  00F0               	movwf	??_USBStdGetStatusHandler
  6963  0C86  0870               	movf	??_USBStdGetStatusHandler,w
  6964  0C87  00C8               	movwf	72	;volatile
  6965                           
  6966                           ;usb_device.c: 2175: }
  6967                           ;usb_device.c: 2176: }
  6968                           
  6969                           ;usb_device.c: 2174: break;
  6970  0C88  2C95               	goto	i1l408
  6971  0C89                     i1l3114:	
  6972  0C89  0840               	movf	64,w	;volatile
  6973  0C8A  391F               	andlw	31
  6974                           
  6975                           ; Switch size 1, requested type "space"
  6976                           ; Number of cases is 3, Range of values is 0 to 2
  6977                           ; switch strategies available:
  6978                           ; Name         Instructions Cycles
  6979                           ; simple_byte           10     6 (average)
  6980                           ; direct_byte           12     6 (fixed)
  6981                           ; jumptable            260     6 (fixed)
  6982                           ;	Chosen strategy is simple_byte
  6983  0C8B  3A00               	xorlw	0	; case 0
  6984  0C8C  1903               	skipnz
  6985  0C8D  2C52               	goto	i1l405
  6986  0C8E  3A01               	xorlw	1	; case 1
  6987  0C8F  1903               	skipnz
  6988  0C90  2C5B               	goto	i1l409
  6989  0C91  3A03               	xorlw	3	; case 2
  6990  0C92  1903               	skipnz
  6991  0C93  2C5E               	goto	i1l410
  6992  0C94  2C95               	goto	i1l408
  6993  0C95                     i1l408:	
  6994                           
  6995                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6996  0C95  0022               	movlb	2	; select bank2
  6997  0C96  1FE9               	btfss	(_inPipes^(0+256)+2),7	;volatile
  6998  0C97  0008               	return
  6999                           
  7000                           ;usb_device.c: 2179: {
  7001                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7002  0C98  3048               	movlw	72
  7003  0C99  00E7               	movwf	_inPipes^(0+256)	;volatile
  7004  0C9A  3000               	movlw	0
  7005  0C9B  00E8               	movwf	(_inPipes+1)^(0+256)	;volatile
  7006                           
  7007                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7008  0C9C  1469               	bsf	(_inPipes^(0+256)+2),0	;volatile
  7009                           
  7010                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  7011  0C9D  3002               	movlw	2
  7012  0C9E  00F0               	movwf	??_USBStdGetStatusHandler
  7013  0C9F  0870               	movf	??_USBStdGetStatusHandler,w
  7014  0CA0  00EA               	movwf	(_inPipes^(0+256)+3)	;volatile
  7015  0CA1  0008               	return
  7016  0CA2                     __end_of_USBStdGetStatusHandler:	
  7017                           
  7018                           	psect	text28
  7019  0F01                     __ptext28:	
  7020 ;; *************** function _USBStdGetDscHandler *****************
  7021 ;; Defined at:
  7022 ;;		line 2043 in file "../../../../../../framework/usb/src/usb_device.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;		None
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;		None
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  1    wreg      void 
  7029 ;; Registers used:
  7030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7038 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;Total ram usage:        3 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; This function calls:
  7043 ;;		Nothing
  7044 ;; This function is called by:
  7045 ;;		_USBCheckStdRequest
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           
  7050                           ;psect for function _USBStdGetDscHandler
  7051  0F01                     _USBStdGetDscHandler:	
  7052                           
  7053                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  7054                           
  7055                           ;incstack = 0
  7056                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  7057  0F01  3080               	movlw	128
  7058  0F02  0020               	movlb	0	; select bank0
  7059  0F03  0640               	xorwf	64,w	;volatile
  7060  0F04  1D03               	btfss	3,2
  7061  0F05  0008               	return
  7062                           
  7063                           ;usb_device.c: 2046: {
  7064                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7065  0F06  30C0               	movlw	192
  7066  0F07  00F0               	movwf	??_USBStdGetDscHandler
  7067  0F08  0870               	movf	??_USBStdGetDscHandler,w
  7068  0F09  0022               	movlb	2	; select bank2
  7069  0F0A  00E9               	movwf	(_inPipes^(0+256)+2)	;volatile
  7070                           
  7071                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  7072  0F0B  2F73               	goto	i1l3092
  7073  0F0C                     i1l3066:	
  7074                           ;usb_device.c: 2050: {
  7075                           ;usb_device.c: 2051: case 0x01:
  7076                           
  7077                           
  7078                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  7079  0F0C  30E9               	movlw	low (_device_dsc| (0+32768))
  7080  0F0D  0022               	movlb	2	; select bank2
  7081  0F0E  00E7               	movwf	_inPipes^(0+256)	;volatile
  7082  0F0F  3082               	movlw	high (_device_dsc| (0+32768))
  7083  0F10  00E8               	movwf	(_inPipes^(0+256)+1)	;volatile
  7084                           
  7085                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  7086  0F11  3000               	movlw	0
  7087  0F12  00EB               	movwf	((_inPipes+1)^(0+256)+3)	;volatile
  7088  0F13  3012               	movlw	18
  7089  0F14  00EA               	movwf	(_inPipes^(0+256)+3)	;volatile
  7090                           
  7091                           ;usb_device.c: 2058: break;
  7092  0F15  0008               	return
  7093  0F16                     i1l3070:	
  7094                           ;usb_device.c: 2059: case 0x02:
  7095                           
  7096                           
  7097                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7098  0F16  0020               	movlb	0	; select bank0
  7099  0F17  0842               	movf	66,w	;volatile
  7100  0F18  1D03               	btfss	3,2
  7101  0F19  2F49               	goto	i1l3078
  7102                           
  7103                           ;usb_device.c: 2064: {
  7104                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7105  0F1A  0842               	movf	66,w	;volatile
  7106  0F1B  00F0               	movwf	??_USBStdGetDscHandler
  7107  0F1C  01F1               	clrf	??_USBStdGetDscHandler+1
  7108  0F1D  35F0               	lslf	??_USBStdGetDscHandler,f
  7109  0F1E  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7110  0F1F  303F               	movlw	low (_USB_CD_Ptr| (0+32768))
  7111  0F20  0770               	addwf	??_USBStdGetDscHandler,w
  7112  0F21  0084               	movwf	4
  7113  0F22  3082               	movlw	high (_USB_CD_Ptr| (0+32768))
  7114  0F23  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7115  0F24  0085               	movwf	5
  7116  0F25  3F00               	moviw [0]fsr0
  7117  0F26  0022               	movlb	2	; select bank2
  7118  0F27  00E7               	movwf	_inPipes^(0+256)	;volatile
  7119  0F28  3F01               	moviw [1]fsr0
  7120  0F29  00E8               	movwf	(_inPipes+1)^(0+256)	;volatile
  7121                           
  7122                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7123  0F2A  0868               	movf	(_inPipes+1)^(0+256),w	;volatile
  7124  0F2B  00F1               	movwf	??_USBStdGetDscHandler+1
  7125  0F2C  0867               	movf	_inPipes^(0+256),w	;volatile
  7126  0F2D  00F0               	movwf	??_USBStdGetDscHandler
  7127  0F2E  3002               	movlw	2
  7128  0F2F  0770               	addwf	??_USBStdGetDscHandler,w
  7129  0F30  0084               	movwf	4
  7130  0F31  0871               	movf	??_USBStdGetDscHandler+1,w
  7131  0F32  1803               	skipnc
  7132  0F33  0A71               	incf	??_USBStdGetDscHandler+1,w
  7133  0F34  0085               	movwf	5
  7134  0F35  0800               	movf	0,w	;code access
  7135  0F36  00F2               	movwf	??_USBStdGetDscHandler+2
  7136  0F37  0872               	movf	??_USBStdGetDscHandler+2,w
  7137  0F38  00EA               	movwf	(_inPipes^(0+256)+3)	;volatile
  7138                           
  7139                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7140  0F39  0868               	movf	(_inPipes+1)^(0+256),w	;volatile
  7141  0F3A  00F1               	movwf	??_USBStdGetDscHandler+1
  7142  0F3B  0867               	movf	_inPipes^(0+256),w	;volatile
  7143  0F3C  00F0               	movwf	??_USBStdGetDscHandler
  7144  0F3D  3003               	movlw	3
  7145  0F3E  0770               	addwf	??_USBStdGetDscHandler,w
  7146  0F3F  0084               	movwf	4
  7147  0F40  0871               	movf	??_USBStdGetDscHandler+1,w
  7148  0F41  1803               	skipnc
  7149  0F42  0A71               	incf	??_USBStdGetDscHandler+1,w
  7150  0F43  0085               	movwf	5
  7151  0F44  0800               	movf	0,w	;code access
  7152  0F45  00F2               	movwf	??_USBStdGetDscHandler+2
  7153  0F46  0872               	movf	??_USBStdGetDscHandler+2,w
  7154  0F47  00EB               	movwf	(_inPipes^(0+256)+4)	;volatile
  7155                           
  7156                           ;usb_device.c: 2076: }
  7157  0F48  0008               	return
  7158  0F49                     i1l3078:	
  7159                           
  7160                           ;usb_device.c: 2077: else
  7161                           ;usb_device.c: 2078: {
  7162                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7163  0F49  0022               	movlb	2	; select bank2
  7164  0F4A  01E9               	clrf	(_inPipes^(0+256)+2)	;volatile
  7165                           
  7166                           ;usb_device.c: 2080: }
  7167                           ;usb_device.c: 2081: break;
  7168  0F4B  0008               	return
  7169  0F4C                     i1l3080:	
  7170                           ;usb_device.c: 2082: case 0x03:
  7171                           
  7172                           
  7173                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7174  0F4C  3003               	movlw	3
  7175  0F4D  0020               	movlb	0	; select bank0
  7176  0F4E  0242               	subwf	66,w	;volatile
  7177  0F4F  1803               	skipnc
  7178  0F50  2F6D               	goto	i1l3086
  7179                           
  7180                           ;usb_device.c: 2087: {
  7181                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7182  0F51  0842               	movf	66,w	;volatile
  7183  0F52  00F0               	movwf	??_USBStdGetDscHandler
  7184  0F53  01F1               	clrf	??_USBStdGetDscHandler+1
  7185  0F54  35F0               	lslf	??_USBStdGetDscHandler,f
  7186  0F55  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7187  0F56  3039               	movlw	low (_USB_SD_Ptr| (0+32768))
  7188  0F57  0770               	addwf	??_USBStdGetDscHandler,w
  7189  0F58  0084               	movwf	4
  7190  0F59  3082               	movlw	high (_USB_SD_Ptr| (0+32768))
  7191  0F5A  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7192  0F5B  0085               	movwf	5
  7193  0F5C  3F00               	moviw [0]fsr0
  7194  0F5D  0022               	movlb	2	; select bank2
  7195  0F5E  00E7               	movwf	_inPipes^(0+256)	;volatile
  7196  0F5F  3F01               	moviw [1]fsr0
  7197  0F60  00E8               	movwf	(_inPipes+1)^(0+256)	;volatile
  7198                           
  7199                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7200  0F61  0867               	movf	_inPipes^(0+256),w	;volatile
  7201  0F62  0084               	movwf	4
  7202  0F63  0868               	movf	(_inPipes+1)^(0+256),w	;volatile
  7203  0F64  0085               	movwf	5
  7204  0F65  0800               	movf	0,w	;code access
  7205  0F66  00F0               	movwf	??_USBStdGetDscHandler
  7206  0F67  01F1               	clrf	??_USBStdGetDscHandler+1
  7207  0F68  0870               	movf	??_USBStdGetDscHandler,w
  7208  0F69  00EA               	movwf	(_inPipes^(0+256)+3)	;volatile
  7209  0F6A  0871               	movf	??_USBStdGetDscHandler+1,w
  7210  0F6B  00EB               	movwf	((_inPipes+1)^(0+256)+3)	;volatile
  7211                           
  7212                           ;usb_device.c: 2092: }
  7213  0F6C  0008               	return
  7214  0F6D                     i1l3086:	
  7215                           
  7216                           ;usb_device.c: 2102: else
  7217                           ;usb_device.c: 2103: {
  7218                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7219  0F6D  0022               	movlb	2	; select bank2
  7220  0F6E  01E9               	clrf	(_inPipes^(0+256)+2)	;volatile
  7221                           
  7222                           ;usb_device.c: 2105: }
  7223                           ;usb_device.c: 2106: break;
  7224  0F6F  0008               	return
  7225  0F70                     i1l3088:	
  7226                           ;usb_device.c: 2107: default:
  7227                           
  7228                           
  7229                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7230  0F70  0022               	movlb	2	; select bank2
  7231  0F71  01E9               	clrf	(_inPipes^(0+256)+2)	;volatile
  7232                           
  7233                           ;usb_device.c: 2110: }
  7234                           
  7235                           ;usb_device.c: 2109: break;
  7236  0F72  0008               	return
  7237  0F73                     i1l3092:	
  7238  0F73  0020               	movlb	0	; select bank0
  7239  0F74  0843               	movf	67,w	;volatile
  7240                           
  7241                           ; Switch size 1, requested type "space"
  7242                           ; Number of cases is 3, Range of values is 1 to 3
  7243                           ; switch strategies available:
  7244                           ; Name         Instructions Cycles
  7245                           ; simple_byte           10     6 (average)
  7246                           ; direct_byte           15     9 (fixed)
  7247                           ; jumptable            263     9 (fixed)
  7248                           ;	Chosen strategy is simple_byte
  7249  0F75  3A01               	xorlw	1	; case 1
  7250  0F76  1903               	skipnz
  7251  0F77  2F0C               	goto	i1l3066
  7252  0F78  3A03               	xorlw	3	; case 2
  7253  0F79  1903               	skipnz
  7254  0F7A  2F16               	goto	i1l3070
  7255  0F7B  3A01               	xorlw	1	; case 3
  7256  0F7C  1903               	skipnz
  7257  0F7D  2F4C               	goto	i1l3080
  7258  0F7E  2F70               	goto	i1l3088
  7259  0F7F  0008               	return
  7260  0F80                     __end_of_USBStdGetDscHandler:	
  7261                           
  7262                           	psect	text29
  7263  0030                     __ptext29:	
  7264 ;; *************** function _USBStdFeatureReqHandler *****************
  7265 ;; Defined at:
  7266 ;;		line 2754 in file "../../../../../../framework/usb/src/usb_device.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;		None
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;  p               2   11[BANK0 ] PTR struct __BDT
  7271 ;;		 -> RAM(4096), NULL(0), BDT(32), 
  7272 ;;  pUEP            2    8[BANK0 ] PTR unsigned char 
  7273 ;;		 -> UEP0(1), 
  7274 ;;  current_ep_d    1   10[BANK0 ] struct .
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7285 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;Total ram usage:        7 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:    4
  7291 ;; This function calls:
  7292 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7293 ;; This function is called by:
  7294 ;;		_USBCheckStdRequest
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298                           
  7299                           ;psect for function _USBStdFeatureReqHandler
  7300  0030                     _USBStdFeatureReqHandler:	
  7301                           
  7302                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7303                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7304                           ;usb_device.c: 2761: unsigned char* pUEP;
  7305                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7306                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7307                           
  7308                           ;incstack = 0
  7309                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7310  0030  0020               	movlb	0	; select bank0
  7311  0031  0342               	decf	66,w	;volatile
  7312  0032  1D03               	btfss	3,2
  7313  0033  2848               	goto	i1l3134
  7314  0034  0840               	movf	64,w	;volatile
  7315  0035  391F               	andlw	31
  7316  0036  3A00               	xorlw	0
  7317  0037  1D03               	skipz
  7318  0038  2848               	goto	i1l3134
  7319                           
  7320                           ;usb_device.c: 2801: {
  7321                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7322  0039  0022               	movlb	2	; select bank2
  7323  003A  17E9               	bsf	(_inPipes^(0+256)+2),7	;volatile
  7324                           
  7325                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7326  003B  3003               	movlw	3
  7327  003C  0020               	movlb	0	; select bank0
  7328  003D  0641               	xorwf	65,w	;volatile
  7329  003E  1D03               	btfss	3,2
  7330  003F  2846               	goto	i1l3132
  7331                           
  7332                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7333  0040  3001               	movlw	1
  7334  0041  00D6               	movwf	??_USBStdFeatureReqHandler
  7335  0042  0856               	movf	??_USBStdFeatureReqHandler,w
  7336  0043  0023               	movlb	3	; select bank3
  7337  0044  00B3               	movwf	_RemoteWakeup^(0+384)	;volatile
  7338  0045  2848               	goto	i1l3134
  7339  0046                     i1l3132:	
  7340                           
  7341                           ;usb_device.c: 2805: else
  7342                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7343  0046  0023               	movlb	3	; select bank3
  7344  0047  01B3               	clrf	_RemoteWakeup^(0+384)	;volatile
  7345  0048                     i1l3134:	
  7346                           
  7347                           ;usb_device.c: 2807: }
  7348                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7349                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7350                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  7351                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7352  0048  0020               	movlb	0	; select bank0
  7353  0049  0842               	movf	66,w	;volatile
  7354  004A  1D03               	btfss	3,2
  7355  004B  0008               	return
  7356  004C  0840               	movf	64,w	;volatile
  7357  004D  391F               	andlw	31
  7358  004E  3A02               	xorlw	2
  7359  004F  1D03               	skipz
  7360  0050  0008               	return
  7361  0051  0844               	movf	68,w	;volatile
  7362  0052  390F               	andlw	15
  7363  0053  3A00               	xorlw	0
  7364  0054  1903               	skipnz
  7365  0055  0008               	return
  7366  0056  0844               	movf	68,w	;volatile
  7367  0057  390F               	andlw	15
  7368  0058  00D6               	movwf	??_USBStdFeatureReqHandler
  7369  0059  3002               	movlw	2
  7370  005A  0256               	subwf	??_USBStdFeatureReqHandler,w
  7371  005B  1803               	skipnc
  7372  005C  0008               	return
  7373  005D  3020               	movlw	32
  7374  005E  066C               	xorwf	_USBDeviceState,w	;volatile
  7375  005F  1D03               	btfss	3,2
  7376  0060  0008               	return
  7377                           
  7378                           ;usb_device.c: 2814: {
  7379                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7380  0061  0022               	movlb	2	; select bank2
  7381  0062  17E9               	bsf	(_inPipes^(0+256)+2),7	;volatile
  7382                           
  7383                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7384  0063  0020               	movlb	0	; select bank0
  7385  0064  1BC4               	btfsc	68,7	;volatile
  7386  0065  2875               	goto	i1l3148
  7387                           
  7388                           ;usb_device.c: 2821: {
  7389                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7390  0066  0844               	movf	68,w	;volatile
  7391  0067  390F               	andlw	15
  7392  0068  0709               	addwf	9,w
  7393  0069  3EA4               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7394  006A  0086               	movwf	6
  7395  006B  3001               	movlw	1	; select bank3/4
  7396  006C  0087               	movwf	7
  7397  006D  3F40               	moviw [0]fsr1
  7398  006E  00DB               	movwf	USBStdFeatureReqHandler@p
  7399  006F  3F41               	moviw [1]fsr1
  7400  0070  00DC               	movwf	USBStdFeatureReqHandler@p+1
  7401                           
  7402                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7403  0071  0844               	movf	68,w	;volatile
  7404  0072  390F               	andlw	15
  7405  0073  3EB0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7406  0074  2882               	goto	L6
  7407  0075                     i1l3148:	
  7408                           ;usb_device.c: 2824: }
  7409                           
  7410                           
  7411                           ;usb_device.c: 2825: else
  7412                           ;usb_device.c: 2826: {
  7413                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7414  0075  0844               	movf	68,w	;volatile
  7415  0076  390F               	andlw	15
  7416  0077  0709               	addwf	9,w
  7417  0078  3E66               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7418  0079  0086               	movwf	6
  7419  007A  0187               	clrf	7
  7420  007B  3F40               	moviw [0]fsr1
  7421  007C  00DB               	movwf	USBStdFeatureReqHandler@p
  7422  007D  3F41               	moviw [1]fsr1
  7423  007E  00DC               	movwf	USBStdFeatureReqHandler@p+1
  7424                           
  7425                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7426  007F  0844               	movf	68,w	;volatile
  7427  0080  390F               	andlw	15
  7428  0081  3EAE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7429  0082                     L6:	
  7430  0082  0086               	movwf	6
  7431  0083  3001               	movlw	1	; select bank3/4
  7432  0084  0087               	movwf	7
  7433  0085  0801               	movf	1,w
  7434  0086  00D6               	movwf	??_USBStdFeatureReqHandler
  7435  0087  0856               	movf	??_USBStdFeatureReqHandler,w
  7436  0088  00DA               	movwf	USBStdFeatureReqHandler@current_ep_data
  7437                           
  7438                           ;usb_device.c: 2829: }
  7439                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7440  0089  185A               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  7441  008A  2895               	goto	i1l3154
  7442                           
  7443                           ;usb_device.c: 2836: {
  7444                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7445  008B  30FB               	movlw	251
  7446  008C  00D6               	movwf	??_USBStdFeatureReqHandler
  7447  008D  30FF               	movlw	255
  7448  008E  00D7               	movwf	??_USBStdFeatureReqHandler+1
  7449  008F  085B               	movf	USBStdFeatureReqHandler@p,w
  7450  0090  0556               	andwf	??_USBStdFeatureReqHandler,w
  7451  0091  00DB               	movwf	USBStdFeatureReqHandler@p
  7452  0092  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7453  0093  0557               	andwf	??_USBStdFeatureReqHandler+1,w
  7454  0094  289A               	goto	L7
  7455  0095                     i1l3154:	
  7456                           ;usb_device.c: 2838: }
  7457                           
  7458                           
  7459                           ;usb_device.c: 2839: else
  7460                           ;usb_device.c: 2840: {
  7461                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7462  0095  3004               	movlw	4
  7463  0096  045B               	iorwf	USBStdFeatureReqHandler@p,w
  7464  0097  00DB               	movwf	USBStdFeatureReqHandler@p
  7465  0098  3000               	movlw	0
  7466  0099  045C               	iorwf	USBStdFeatureReqHandler@p+1,w
  7467  009A                     L7:	
  7468  009A  00DC               	movwf	USBStdFeatureReqHandler@p+1
  7469                           
  7470                           ;usb_device.c: 2842: }
  7471                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7472  009B  1BC4               	btfsc	68,7	;volatile
  7473  009C  28A9               	goto	i1l3160
  7474                           
  7475                           ;usb_device.c: 2848: {
  7476                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7477  009D  0844               	movf	68,w	;volatile
  7478  009E  390F               	andlw	15
  7479  009F  0709               	addwf	9,w
  7480  00A0  3EA4               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7481  00A1  0086               	movwf	6
  7482  00A2  3001               	movlw	1	; select bank3/4
  7483  00A3  0087               	movwf	7
  7484  00A4  085B               	movf	USBStdFeatureReqHandler@p,w
  7485  00A5  3FC0               	movwi [0]fsr1
  7486  00A6  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7487  00A7  3FC1               	movwi [1]fsr1
  7488                           
  7489                           ;usb_device.c: 2850: }
  7490  00A8  28B3               	goto	i1l3162
  7491  00A9                     i1l3160:	
  7492                           
  7493                           ;usb_device.c: 2851: else
  7494                           ;usb_device.c: 2852: {
  7495                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7496  00A9  0844               	movf	68,w	;volatile
  7497  00AA  390F               	andlw	15
  7498  00AB  0709               	addwf	9,w
  7499  00AC  3E66               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7500  00AD  0086               	movwf	6
  7501  00AE  0187               	clrf	7
  7502  00AF  085B               	movf	USBStdFeatureReqHandler@p,w
  7503  00B0  3FC0               	movwi [0]fsr1
  7504  00B1  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7505  00B2  3FC1               	movwi [1]fsr1
  7506  00B3                     i1l3162:	
  7507                           
  7508                           ;usb_device.c: 2854: }
  7509                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7510  00B3  3003               	movlw	3
  7511  00B4  0641               	xorwf	65,w	;volatile
  7512  00B5  1D03               	btfss	3,2
  7513  00B6  28D5               	goto	i1l3176
  7514                           
  7515                           ;usb_device.c: 2858: {
  7516                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7517  00B7  085B               	movf	USBStdFeatureReqHandler@p,w
  7518  00B8  0086               	movwf	6
  7519  00B9  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7520  00BA  0087               	movwf	7
  7521  00BB  1F81               	btfss	1,7
  7522  00BC  28CA               	goto	i1l3172
  7523                           
  7524                           ;usb_device.c: 2860: {
  7525                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7526  00BD  1BC4               	btfsc	68,7	;volatile
  7527  00BE  28C3               	goto	i1l3170
  7528                           
  7529                           ;usb_device.c: 2864: {
  7530                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7531  00BF  0844               	movf	68,w	;volatile
  7532  00C0  390F               	andlw	15
  7533  00C1  3EB0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7534  00C2  28C6               	goto	L8
  7535  00C3                     i1l3170:	
  7536                           ;usb_device.c: 2866: }
  7537                           
  7538                           
  7539                           ;usb_device.c: 2867: else
  7540                           ;usb_device.c: 2868: {
  7541                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7542  00C3  0844               	movf	68,w	;volatile
  7543  00C4  390F               	andlw	15
  7544  00C5  3EAE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7545  00C6                     L8:	
  7546  00C6  0086               	movwf	6
  7547  00C7  3001               	movlw	1	; select bank3/4
  7548  00C8  0087               	movwf	7
  7549  00C9  1481               	bsf	1,1
  7550  00CA                     i1l3172:	
  7551                           
  7552                           ;usb_device.c: 2870: }
  7553                           ;usb_device.c: 2871: }
  7554                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7555  00CA  085B               	movf	USBStdFeatureReqHandler@p,w
  7556  00CB  0086               	movwf	6
  7557  00CC  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7558  00CD  0087               	movwf	7
  7559  00CE  1501               	bsf	1,2
  7560                           
  7561                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7562  00CF  085B               	movf	USBStdFeatureReqHandler@p,w
  7563  00D0  0086               	movwf	6
  7564  00D1  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7565  00D2  0087               	movwf	7
  7566  00D3  1781               	bsf	1,7
  7567                           
  7568                           ;usb_device.c: 2876: }
  7569  00D4  0008               	return
  7570  00D5                     i1l3176:	
  7571                           
  7572                           ;usb_device.c: 2877: else
  7573                           ;usb_device.c: 2878: {
  7574                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7575  00D5  3004               	movlw	4
  7576  00D6  065B               	xorwf	USBStdFeatureReqHandler@p,w
  7577  00D7  00DB               	movwf	USBStdFeatureReqHandler@p
  7578  00D8  3000               	movlw	0
  7579  00D9  065C               	xorwf	USBStdFeatureReqHandler@p+1,w
  7580  00DA  00DC               	movwf	USBStdFeatureReqHandler@p+1
  7581                           
  7582                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7583  00DB  085B               	movf	USBStdFeatureReqHandler@p,w
  7584  00DC  0086               	movwf	6
  7585  00DD  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7586  00DE  0087               	movwf	7
  7587  00DF  1F81               	btfss	1,7
  7588  00E0  28FE               	goto	i1l3186
  7589                           
  7590                           ;usb_device.c: 2885: {
  7591                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7592  00E1  307F               	movlw	127
  7593  00E2  00D6               	movwf	??_USBStdFeatureReqHandler
  7594  00E3  085B               	movf	USBStdFeatureReqHandler@p,w
  7595  00E4  0086               	movwf	6
  7596  00E5  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7597  00E6  0087               	movwf	7
  7598  00E7  0856               	movf	??_USBStdFeatureReqHandler,w
  7599  00E8  0581               	andwf	1,f
  7600                           
  7601                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7602  00E9  085B               	movf	USBStdFeatureReqHandler@p,w
  7603  00EA  0086               	movwf	6
  7604  00EB  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7605  00EC  0087               	movwf	7
  7606  00ED  1701               	bsf	1,6
  7607                           
  7608                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7609  00EE  3000               	movlw	0
  7610  00EF  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7611  00F0  3005               	movlw	5
  7612  00F1  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7613  00F2  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7614  00F3  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7615  00F4  085B               	movf	USBStdFeatureReqHandler@p,w
  7616  00F5  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7617  00F6  3002               	movlw	2
  7618  00F7  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7619  00F8  3000               	movlw	0
  7620  00F9  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7621  00FA  318B  237E  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7622                           
  7623                           ;usb_device.c: 2891: }
  7624  00FD  2904               	goto	i1l3188
  7625  00FE                     i1l3186:	
  7626                           
  7627                           ;usb_device.c: 2892: else
  7628                           ;usb_device.c: 2893: {
  7629                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7630  00FE  0020               	movlb	0	; select bank0
  7631  00FF  085B               	movf	USBStdFeatureReqHandler@p,w
  7632  0100  0086               	movwf	6
  7633  0101  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7634  0102  0087               	movwf	7
  7635  0103  1701               	bsf	1,6
  7636  0104                     i1l3188:	
  7637                           
  7638                           ;usb_device.c: 2896: }
  7639                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7640  0104  3004               	movlw	4
  7641  0105  0020               	movlb	0	; select bank0
  7642  0106  065B               	xorwf	USBStdFeatureReqHandler@p,w
  7643  0107  00DB               	movwf	USBStdFeatureReqHandler@p
  7644  0108  3000               	movlw	0
  7645  0109  065C               	xorwf	USBStdFeatureReqHandler@p+1,w
  7646  010A  00DC               	movwf	USBStdFeatureReqHandler@p+1
  7647                           
  7648                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7649  010B  18DA               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  7650  010C  2913               	goto	i1l501
  7651  010D  085B               	movf	USBStdFeatureReqHandler@p,w
  7652  010E  0086               	movwf	6
  7653  010F  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7654  0110  0087               	movwf	7
  7655  0111  1F81               	btfss	1,7
  7656  0112  2938               	goto	i1l3200
  7657  0113                     i1l501:	
  7658                           
  7659                           ;usb_device.c: 2907: {
  7660                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7661  0113  1BC4               	btfsc	68,7	;volatile
  7662  0114  2919               	goto	i1l3196
  7663                           
  7664                           ;usb_device.c: 2909: {
  7665                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7666  0115  0844               	movf	68,w	;volatile
  7667  0116  390F               	andlw	15
  7668  0117  3EB0               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7669  0118  291C               	goto	L9
  7670  0119                     i1l3196:	
  7671                           ;usb_device.c: 2911: }
  7672                           
  7673                           
  7674                           ;usb_device.c: 2912: else
  7675                           ;usb_device.c: 2913: {
  7676                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7677  0119  0844               	movf	68,w	;volatile
  7678  011A  390F               	andlw	15
  7679  011B  3EAE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7680  011C                     L9:	
  7681  011C  0086               	movwf	6
  7682  011D  3001               	movlw	1	; select bank3/4
  7683  011E  0087               	movwf	7
  7684  011F  1081               	bcf	1,1
  7685                           
  7686                           ;usb_device.c: 2915: }
  7687                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7688  0120  303B               	movlw	59
  7689  0121  00D6               	movwf	??_USBStdFeatureReqHandler
  7690  0122  085B               	movf	USBStdFeatureReqHandler@p,w
  7691  0123  0086               	movwf	6
  7692  0124  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7693  0125  0087               	movwf	7
  7694  0126  0856               	movf	??_USBStdFeatureReqHandler,w
  7695  0127  0581               	andwf	1,f
  7696                           
  7697                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7698  0128  3000               	movlw	0
  7699  0129  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7700  012A  3005               	movlw	5
  7701  012B  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7702  012C  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7703  012D  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7704  012E  085B               	movf	USBStdFeatureReqHandler@p,w
  7705  012F  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7706  0130  3002               	movlw	2
  7707  0131  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7708  0132  3000               	movlw	0
  7709  0133  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7710  0134  318B  237E  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7711                           
  7712                           ;usb_device.c: 2921: }
  7713  0137  2941               	goto	i1l3202
  7714  0138                     i1l3200:	
  7715                           
  7716                           ;usb_device.c: 2922: else
  7717                           ;usb_device.c: 2923: {
  7718                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7719  0138  303B               	movlw	59
  7720  0139  0020               	movlb	0	; select bank0
  7721  013A  00D6               	movwf	??_USBStdFeatureReqHandler
  7722  013B  085B               	movf	USBStdFeatureReqHandler@p,w
  7723  013C  0086               	movwf	6
  7724  013D  085C               	movf	USBStdFeatureReqHandler@p+1,w
  7725  013E  0087               	movwf	7
  7726  013F  0856               	movf	??_USBStdFeatureReqHandler,w
  7727  0140  0581               	andwf	1,f
  7728  0141                     i1l3202:	
  7729                           
  7730                           ;usb_device.c: 2926: }
  7731                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7732  0141  0020               	movlb	0	; select bank0
  7733  0142  0844               	movf	68,w	;volatile
  7734  0143  390F               	andlw	15
  7735  0144  3E98               	addlw	152
  7736  0145  00D6               	movwf	??_USBStdFeatureReqHandler
  7737  0146  01D7               	clrf	??_USBStdFeatureReqHandler+1
  7738  0147  300E               	movlw	14
  7739  0148  3DD7               	addwfc	??_USBStdFeatureReqHandler+1,f
  7740  0149  0856               	movf	??_USBStdFeatureReqHandler,w
  7741  014A  00D8               	movwf	USBStdFeatureReqHandler@pUEP
  7742  014B  0857               	movf	??_USBStdFeatureReqHandler+1,w
  7743  014C  00D9               	movwf	USBStdFeatureReqHandler@pUEP+1
  7744                           
  7745                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7746  014D  30FE               	movlw	254
  7747  014E  00D6               	movwf	??_USBStdFeatureReqHandler
  7748  014F  0858               	movf	USBStdFeatureReqHandler@pUEP,w
  7749  0150  0086               	movwf	6
  7750  0151  0859               	movf	USBStdFeatureReqHandler@pUEP+1,w
  7751  0152  0087               	movwf	7
  7752  0153  0856               	movf	??_USBStdFeatureReqHandler,w
  7753  0154  0581               	andwf	1,f
  7754  0155  0008               	return
  7755  0156                     __end_of_USBStdFeatureReqHandler:	
  7756                           
  7757                           	psect	text30
  7758  0B7E                     __ptext30:	
  7759 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7760 ;; Defined at:
  7761 ;;		line 51 in file "../demo_src/usb_events.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  event           2    0[BANK0 ] enum E2893
  7764 ;;  pdata           2    2[BANK0 ] PTR void 
  7765 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7766 ;;		 -> BDT(32), 
  7767 ;;  size            2    4[BANK0 ] unsigned int 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;		None
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  1    wreg      unsigned char 
  7772 ;; Registers used:
  7773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7779 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;Total ram usage:        6 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    3
  7786 ;; This function calls:
  7787 ;;		_APP_DeviceCustomHIDInitialize
  7788 ;;		_APP_LEDUpdateUSBStatus
  7789 ;;		_USBCheckHIDRequest
  7790 ;;		i1_SYSTEM_Initialize
  7791 ;; This function is called by:
  7792 ;;		_USBDeviceTasks
  7793 ;;		_USBStdSetCfgHandler
  7794 ;;		_USBSuspend
  7795 ;;		_USBWakeFromSuspend
  7796 ;;		_USBCtrlTrfSetupHandler
  7797 ;;		_USBCheckStdRequest
  7798 ;;		_USBStdFeatureReqHandler
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           
  7803                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7804  0B7E                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7805                           
  7806                           ;usb_events.c: 53: switch((int)event)
  7807                           
  7808                           ;incstack = 0
  7809                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7810  0B7E  2B96               	goto	i1l2892
  7811  0B7F                     i1l2880:	
  7812                           ;usb_events.c: 58: case EVENT_SOF:
  7813                           
  7814                           ;usb_events.c: 56: break;
  7815                           
  7816                           ;usb_events.c: 54: {
  7817                           ;usb_events.c: 55: case EVENT_TRANSFER:
  7818                           
  7819                           
  7820                           ;usb_events.c: 61: APP_LEDUpdateUSBStatus();
  7821  0B7F  3187  27B1         	fcall	_APP_LEDUpdateUSBStatus
  7822                           
  7823                           ;usb_events.c: 62: break;
  7824  0B81  0008               	return
  7825  0B82                     i1l2882:	
  7826                           ;usb_events.c: 64: case EVENT_SUSPEND:
  7827                           
  7828                           
  7829                           ;usb_events.c: 66: APP_LEDUpdateUSBStatus();
  7830  0B82  3187  27B1  318B   	fcall	_APP_LEDUpdateUSBStatus
  7831                           
  7832                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  7833  0B85  3001               	movlw	1
  7834  0B86  318A  226A         	fcall	i1_SYSTEM_Initialize
  7835                           
  7836                           ;usb_events.c: 75: break;
  7837  0B88  0008               	return
  7838  0B89                     i1l2884:	
  7839                           ;usb_events.c: 77: case EVENT_RESUME:
  7840                           
  7841                           
  7842                           ;usb_events.c: 79: APP_LEDUpdateUSBStatus();
  7843  0B89  3187  27B1  318B   	fcall	_APP_LEDUpdateUSBStatus
  7844                           
  7845                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  7846  0B8C  3002               	movlw	2
  7847  0B8D  318A  226A         	fcall	i1_SYSTEM_Initialize
  7848                           
  7849                           ;usb_events.c: 86: break;
  7850  0B8F  0008               	return
  7851  0B90                     i1l2886:	
  7852                           ;usb_events.c: 88: case EVENT_CONFIGURED:
  7853                           
  7854                           
  7855                           ;usb_events.c: 91: APP_DeviceCustomHIDInitialize();
  7856  0B90  3189  21D1         	fcall	_APP_DeviceCustomHIDInitialize
  7857                           
  7858                           ;usb_events.c: 95: break;
  7859                           
  7860                           ;usb_events.c: 94: case EVENT_SET_DESCRIPTOR:
  7861                           
  7862                           ;usb_events.c: 92: break;
  7863  0B92  0008               	return
  7864  0B93                     i1l2888:	
  7865                           ;usb_events.c: 97: case EVENT_EP0_REQUEST:
  7866                           
  7867                           
  7868                           ;usb_events.c: 100: USBCheckHIDRequest();
  7869  0B93  3186  2628         	fcall	_USBCheckHIDRequest
  7870                           
  7871                           ;usb_events.c: 111: }
  7872                           
  7873                           ;usb_events.c: 110: break;
  7874                           
  7875                           ;usb_events.c: 109: default:
  7876                           
  7877                           ;usb_events.c: 107: break;
  7878                           
  7879                           ;usb_events.c: 106: case EVENT_TRANSFER_TERMINATED:
  7880                           
  7881                           ;usb_events.c: 104: break;
  7882                           
  7883                           ;usb_events.c: 103: case EVENT_BUS_ERROR:
  7884                           
  7885                           ;usb_events.c: 101: break;
  7886  0B95  0008               	return
  7887  0B96                     i1l2892:	
  7888                           
  7889                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7890                           ; Switch size 1, requested type "space"
  7891                           ; Number of cases is 2, Range of values is 0 to 127
  7892                           ; switch strategies available:
  7893                           ; Name         Instructions Cycles
  7894                           ; simple_byte            7     4 (average)
  7895                           ; direct_byte          262     6 (fixed)
  7896                           ; jumptable            260     6 (fixed)
  7897                           ;	Chosen strategy is simple_byte
  7898  0B96  0020               	movlb	0	; select bank0
  7899  0B97  0851               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  7900  0B98  3A00               	xorlw	0	; case 0
  7901  0B99  1903               	skipnz
  7902  0B9A  2B9F               	goto	i1l4194
  7903  0B9B  3A7F               	xorlw	127	; case 127
  7904  0B9C  1903               	skipnz
  7905  0B9D  2BB9               	goto	i1l4196
  7906  0B9E  2BBE               	goto	i1l589
  7907  0B9F                     i1l4194:	
  7908                           
  7909                           ; Switch size 1, requested type "space"
  7910                           ; Number of cases is 8, Range of values is 1 to 117
  7911                           ; switch strategies available:
  7912                           ; Name         Instructions Cycles
  7913                           ; simple_byte           25    13 (average)
  7914                           ; direct_byte          243     9 (fixed)
  7915                           ; jumptable            263     9 (fixed)
  7916                           ;	Chosen strategy is simple_byte
  7917  0B9F  0850               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7918  0BA0  3A01               	xorlw	1	; case 1
  7919  0BA1  1903               	skipnz
  7920  0BA2  2B90               	goto	i1l2886
  7921  0BA3  3A03               	xorlw	3	; case 2
  7922  0BA4  1903               	skipnz
  7923  0BA5  2BBE               	goto	i1l589
  7924  0BA6  3A01               	xorlw	1	; case 3
  7925  0BA7  1903               	skipnz
  7926  0BA8  2B93               	goto	i1l2888
  7927  0BA9  3A06               	xorlw	6	; case 5
  7928  0BAA  1903               	skipnz
  7929  0BAB  2BBE               	goto	i1l589
  7930  0BAC  3A77               	xorlw	119	; case 114
  7931  0BAD  1903               	skipnz
  7932  0BAE  2BBE               	goto	i1l589
  7933  0BAF  3A01               	xorlw	1	; case 115
  7934  0BB0  1903               	skipnz
  7935  0BB1  2B7F               	goto	i1l2880
  7936  0BB2  3A07               	xorlw	7	; case 116
  7937  0BB3  1903               	skipnz
  7938  0BB4  2B89               	goto	i1l2884
  7939  0BB5  3A01               	xorlw	1	; case 117
  7940  0BB6  1903               	skipnz
  7941  0BB7  2B82               	goto	i1l2882
  7942  0BB8  2BBE               	goto	i1l589
  7943  0BB9                     i1l4196:	
  7944                           
  7945                           ; Switch size 1, requested type "space"
  7946                           ; Number of cases is 1, Range of values is 255 to 255
  7947                           ; switch strategies available:
  7948                           ; Name         Instructions Cycles
  7949                           ; simple_byte            4     3 (average)
  7950                           ; direct_byte            7     5 (fixed)
  7951                           ; jumptable            263     9 (fixed)
  7952                           ;	Chosen strategy is simple_byte
  7953  0BB9  0850               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7954  0BBA  3AFF               	xorlw	255	; case 255
  7955  0BBB  1903               	skipnz
  7956  0BBC  2BBE               	goto	i1l589
  7957  0BBD  2BBE               	goto	i1l589
  7958  0BBE                     i1l589:	
  7959                           ;usb_events.c: 112: return 1;
  7960                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  7961                           
  7962  0BBE  0008               	return
  7963  0BBF                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  7964                           
  7965                           	psect	text31
  7966  0A6A                     __ptext31:	
  7967 ;; *************** function i1_SYSTEM_Initialize *****************
  7968 ;; Defined at:
  7969 ;;		line 86 in file "system.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;  state           1    wreg     enum E2684
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  state           1    1[COMMON] enum E2684
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7987 ;;Total ram usage:        1 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    1
  7990 ;; This function calls:
  7991 ;;		i1_ADC_Enable
  7992 ;;		i1_ADC_SetConfiguration
  7993 ;;		i1_BUTTON_Enable
  7994 ;;		i1_LED_Enable
  7995 ;; This function is called by:
  7996 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           
  8001                           ;psect for function i1_SYSTEM_Initialize
  8002  0A6A                     i1_SYSTEM_Initialize:	
  8003                           
  8004                           ;incstack = 0
  8005                           ; Regs used in i1_SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8006                           ;i1SYSTEM_Initialize@state stored from wreg
  8007  0A6A  00F1               	movwf	i1SYSTEM_Initialize@state
  8008                           
  8009                           ;system.c: 88: switch(state)
  8010  0A6B  2A80               	goto	i1l2876
  8011  0A6C                     i1l2868:	
  8012                           ;system.c: 89: {
  8013                           ;system.c: 90: case SYSTEM_STATE_USB_START:
  8014                           
  8015                           
  8016                           ;system.c: 97: LED_Enable(LED_D1);
  8017  0A6C  3001               	movlw	1
  8018  0A6D  3189  219E  318A   	fcall	i1_LED_Enable
  8019                           
  8020                           ;system.c: 98: LED_Enable(LED_D2);
  8021  0A70  3002               	movlw	2
  8022  0A71  3189  219E  318A   	fcall	i1_LED_Enable
  8023                           
  8024                           ;system.c: 100: BUTTON_Enable(BUTTON_S1);
  8025  0A74  3001               	movlw	1
  8026  0A75  3188  20D3  318A   	fcall	i1_BUTTON_Enable
  8027                           
  8028                           ;system.c: 102: ADC_SetConfiguration(ADC_CONFIGURATION_DEFAULT);
  8029  0A78  3000               	movlw	0
  8030  0A79  3188  20DD  318A   	fcall	i1_ADC_SetConfiguration
  8031                           
  8032                           ;system.c: 103: ADC_Enable(ADC_CHANNEL_10);
  8033  0A7C  300A               	movlw	10
  8034  0A7D  3188  20FE         	fcall	i1_ADC_Enable
  8035                           
  8036                           ;system.c: 111: }
  8037                           
  8038                           ;system.c: 110: break;
  8039                           
  8040                           ;system.c: 109: case SYSTEM_STATE_USB_RESUME:
  8041                           
  8042                           ;system.c: 107: break;
  8043                           
  8044                           ;system.c: 106: case SYSTEM_STATE_USB_SUSPEND:
  8045                           
  8046                           ;system.c: 104: break;
  8047  0A7F  0008               	return
  8048  0A80                     i1l2876:	
  8049  0A80  0871               	movf	i1SYSTEM_Initialize@state,w
  8050                           
  8051                           ; Switch size 1, requested type "space"
  8052                           ; Number of cases is 3, Range of values is 0 to 2
  8053                           ; switch strategies available:
  8054                           ; Name         Instructions Cycles
  8055                           ; simple_byte           10     6 (average)
  8056                           ; direct_byte           12     6 (fixed)
  8057                           ; jumptable            260     6 (fixed)
  8058                           ;	Chosen strategy is simple_byte
  8059  0A81  3A00               	xorlw	0	; case 0
  8060  0A82  1903               	skipnz
  8061  0A83  2A6C               	goto	i1l2868
  8062  0A84  3A01               	xorlw	1	; case 1
  8063  0A85  1903               	skipnz
  8064  0A86  2A8B               	goto	i1l649
  8065  0A87  3A03               	xorlw	3	; case 2
  8066  0A88  1903               	skipnz
  8067  0A89  2A8B               	goto	i1l649
  8068  0A8A  2A8B               	goto	i1l649
  8069  0A8B                     i1l649:	
  8070  0A8B  0008               	return
  8071  0A8C                     __end_ofi1_SYSTEM_Initialize:	
  8072                           
  8073                           	psect	text32
  8074  099E                     __ptext32:	
  8075 ;; *************** function i1_LED_Enable *****************
  8076 ;; Defined at:
  8077 ;;		line 220 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  led             1    wreg     enum E2
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;  led             1    0[COMMON] enum E2
  8082 ;; Return value:  Size  Location     Type
  8083 ;;                  1    wreg      void 
  8084 ;; Registers used:
  8085 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8086 ;; Tracked objects:
  8087 ;;		On entry : 0/0
  8088 ;;		On exit  : 0/0
  8089 ;;		Unchanged: 0/0
  8090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8094 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8095 ;;Total ram usage:        1 bytes
  8096 ;; Hardware stack levels used:    1
  8097 ;; This function calls:
  8098 ;;		Nothing
  8099 ;; This function is called by:
  8100 ;;		i1_SYSTEM_Initialize
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           
  8105                           ;psect for function i1_LED_Enable
  8106  099E                     i1_LED_Enable:	
  8107                           
  8108                           ;incstack = 0
  8109                           ; Regs used in i1_LED_Enable: [wreg-fsr0h+status,2+status,0]
  8110                           ;i1LED_Enable@led stored from wreg
  8111  099E  00F0               	movwf	i1LED_Enable@led
  8112                           
  8113                           ;leds.c: 222: switch(led)
  8114  099F  29AC               	goto	i1l2726
  8115  09A0                     i1l64:	
  8116                           ;leds.c: 223: {
  8117                           ;leds.c: 224: case LED_D1:
  8118                           
  8119                           
  8120                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  8121  09A0  0021               	movlb	1	; select bank1
  8122  09A1  100E               	bcf	14,0	;volatile
  8123                           
  8124                           ;leds.c: 226: break;
  8125  09A2  0008               	return
  8126  09A3                     i1l66:	
  8127                           ;leds.c: 228: case LED_D2:
  8128                           
  8129                           
  8130                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  8131  09A3  0021               	movlb	1	; select bank1
  8132  09A4  108E               	bcf	14,1	;volatile
  8133                           
  8134                           ;leds.c: 230: break;
  8135  09A5  0008               	return
  8136  09A6                     i1l67:	
  8137                           ;leds.c: 232: case LED_D3:
  8138                           
  8139                           
  8140                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  8141  09A6  0021               	movlb	1	; select bank1
  8142  09A7  110E               	bcf	14,2	;volatile
  8143                           
  8144                           ;leds.c: 234: break;
  8145  09A8  0008               	return
  8146  09A9                     i1l68:	
  8147                           ;leds.c: 236: case LED_D4:
  8148                           
  8149                           
  8150                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  8151  09A9  0021               	movlb	1	; select bank1
  8152  09AA  118E               	bcf	14,3	;volatile
  8153                           
  8154                           ;leds.c: 242: }
  8155                           
  8156                           ;leds.c: 241: break;
  8157                           
  8158                           ;leds.c: 240: case LED_NONE:
  8159                           
  8160                           ;leds.c: 238: break;
  8161  09AB  0008               	return
  8162  09AC                     i1l2726:	
  8163  09AC  0870               	movf	i1LED_Enable@led,w
  8164                           
  8165                           ; Switch size 1, requested type "space"
  8166                           ; Number of cases is 5, Range of values is 0 to 4
  8167                           ; switch strategies available:
  8168                           ; Name         Instructions Cycles
  8169                           ; direct_byte           16     6 (fixed)
  8170                           ; simple_byte           16     9 (average)
  8171                           ; jumptable            260     6 (fixed)
  8172                           ;	Chosen strategy is direct_byte
  8173  09AD  0084               	movwf	4
  8174  09AE  3005               	movlw	5
  8175  09AF  0204               	subwf	4,w
  8176  09B0  1803               	skipnc
  8177  09B1  0008               	return
  8178  09B2  3188               	movlp	high i1S4198
  8179  09B3  3504               	lslf	4,w
  8180  09B4  3E2E               	addlw	low i1S4198
  8181  09B5  0082               	movwf	2
  8182  09B6                     i1l70:	
  8183  09B6  0008               	return
  8184  09B7                     __end_ofi1_LED_Enable:	
  8185                           
  8186                           	psect	swtext4
  8187  082E                     __pswtext4:	
  8188  082E                     i1S4198:	
  8189  082E  3189  29B6         	ljmp	i1l70
  8190  0830  3189  29A0         	ljmp	i1l64
  8191  0832  3189  29A3         	ljmp	i1l66
  8192  0834  3189  29A6         	ljmp	i1l67
  8193  0836  3189  29A9         	ljmp	i1l68
  8194                           
  8195                           	psect	text33
  8196  08D3                     __ptext33:	
  8197 ;; *************** function i1_BUTTON_Enable *****************
  8198 ;; Defined at:
  8199 ;;		line 85 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/buttons.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  button          1    wreg     enum E2617
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;  button          1    0[COMMON] enum E2617
  8204 ;; Return value:  Size  Location     Type
  8205 ;;                  1    wreg      void 
  8206 ;; Registers used:
  8207 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;Total ram usage:        1 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; This function calls:
  8220 ;;		Nothing
  8221 ;; This function is called by:
  8222 ;;		i1_SYSTEM_Initialize
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           
  8227                           ;psect for function i1_BUTTON_Enable
  8228  08D3                     i1_BUTTON_Enable:	
  8229                           
  8230                           ;incstack = 0
  8231                           ; Regs used in i1_BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  8232                           ;i1BUTTON_Enable@button stored from wreg
  8233  08D3  00F0               	movwf	i1BUTTON_Enable@button
  8234                           
  8235                           ;buttons.c: 94: }
  8236                           
  8237                           ;buttons.c: 93: break;
  8238                           
  8239                           ;buttons.c: 92: case BUTTON_NONE:
  8240                           
  8241                           ;buttons.c: 90: break;
  8242                           
  8243                           ;buttons.c: 88: {
  8244                           ;buttons.c: 89: case BUTTON_S1:
  8245                           
  8246                           ;buttons.c: 87: switch(button)
  8247  08D4  0870               	movf	i1BUTTON_Enable@button,w
  8248                           
  8249                           ; Switch size 1, requested type "space"
  8250                           ; Number of cases is 2, Range of values is 0 to 1
  8251                           ; switch strategies available:
  8252                           ; Name         Instructions Cycles
  8253                           ; simple_byte            7     4 (average)
  8254                           ; direct_byte           10     6 (fixed)
  8255                           ; jumptable            260     6 (fixed)
  8256                           ;	Chosen strategy is simple_byte
  8257  08D5  3A00               	xorlw	0	; case 0
  8258  08D6  1903               	skipnz
  8259  08D7  28DC               	goto	i1l16
  8260  08D8  3A01               	xorlw	1	; case 1
  8261  08D9  1903               	skipnz
  8262  08DA  28DC               	goto	i1l16
  8263  08DB  28DC               	goto	i1l16
  8264  08DC                     i1l16:	
  8265  08DC  0008               	return
  8266  08DD                     __end_ofi1_BUTTON_Enable:	
  8267                           
  8268                           	psect	text34
  8269  08DD                     __ptext34:	
  8270 ;; *************** function i1_ADC_SetConfiguration *****************
  8271 ;; Defined at:
  8272 ;;		line 157 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/adc.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;  configuratio    1    wreg     enum E33
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;  configuratio    1    0[COMMON] enum E33
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      unsigned char 
  8279 ;; Registers used:
  8280 ;;		wreg, status,2, status,0
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;Total ram usage:        1 bytes
  8291 ;; Hardware stack levels used:    1
  8292 ;; This function calls:
  8293 ;;		Nothing
  8294 ;; This function is called by:
  8295 ;;		i1_SYSTEM_Initialize
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           
  8300                           ;psect for function i1_ADC_SetConfiguration
  8301  08DD                     i1_ADC_SetConfiguration:	
  8302                           
  8303                           ;incstack = 0
  8304                           ; Regs used in i1_ADC_SetConfiguration: [wreg+status,2+status,0]
  8305                           ;i1ADC_SetConfiguration@configuration stored from wreg
  8306  08DD  00F0               	movwf	i1ADC_SetConfiguration@configuration
  8307                           
  8308                           ;adc.c: 159: if(configuration == ADC_CONFIGURATION_DEFAULT)
  8309  08DE  0870               	movf	i1ADC_SetConfiguration@configuration,w
  8310  08DF  1D03               	btfss	3,2
  8311  08E0  0008               	return
  8312                           
  8313                           ;adc.c: 160: {
  8314                           ;adc.c: 161: ADCON0=0x29;
  8315  08E1  3029               	movlw	41
  8316  08E2  0021               	movlb	1	; select bank1
  8317  08E3  009D               	movwf	29	;volatile
  8318                           
  8319                           ;adc.c: 162: ADCON1=0xE0;
  8320  08E4  30E0               	movlw	224
  8321  08E5  009E               	movwf	30	;volatile
  8322                           
  8323                           ;adc.c: 163: ADCON2=0x00;
  8324  08E6  019F               	clrf	31	;volatile
  8325                           
  8326                           ;adc.c: 165: return 1;
  8327                           ;	Return value of i1_ADC_SetConfiguration is never used
  8328  08E7  0008               	return
  8329  08E8                     __end_ofi1_ADC_SetConfiguration:	
  8330                           ;adc.c: 166: }
  8331                           ;adc.c: 168: return 0;
  8332                           ;	Return value of i1_ADC_SetConfiguration is never used
  8333                           
  8334                           
  8335                           	psect	text35
  8336  08FE                     __ptext35:	
  8337 ;; *************** function i1_ADC_Enable *****************
  8338 ;; Defined at:
  8339 ;;		line 131 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/adc.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;  channel         1    wreg     enum E30
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;  channel         1    0[COMMON] enum E30
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  1    wreg      unsigned char 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;Total ram usage:        1 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; This function calls:
  8360 ;;		Nothing
  8361 ;; This function is called by:
  8362 ;;		i1_SYSTEM_Initialize
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           
  8367                           ;psect for function i1_ADC_Enable
  8368  08FE                     i1_ADC_Enable:	
  8369                           
  8370                           ;incstack = 0
  8371                           ; Regs used in i1_ADC_Enable: [wreg-fsr0h+status,2+status,0]
  8372                           ;i1ADC_Enable@channel stored from wreg
  8373  08FE  00F0               	movwf	i1ADC_Enable@channel
  8374                           
  8375                           ;adc.c: 133: switch(channel)
  8376  08FF  2905               	goto	i1l2736
  8377  0900                     i1l110:	
  8378                           ;adc.c: 134: {
  8379                           ;adc.c: 135: case ADC_CHANNEL_10:
  8380                           
  8381                           
  8382                           ;adc.c: 136: TRISBbits.TRISB4 = 1;
  8383  0900  0021               	movlb	1	; select bank1
  8384  0901  160D               	bsf	13,4	;volatile
  8385                           
  8386                           ;adc.c: 137: ANSELBbits.ANSB4 = 1;
  8387  0902  0023               	movlb	3	; select bank3
  8388  0903  160D               	bsf	13,4	;volatile
  8389                           
  8390                           ;adc.c: 142: }
  8391                           
  8392                           ;adc.c: 141: return 0;
  8393                           ;	Return value of i1_ADC_Enable is never used
  8394                           
  8395                           ;adc.c: 140: default:
  8396                           
  8397                           ;adc.c: 138: return 1;
  8398                           ;	Return value of i1_ADC_Enable is never used
  8399  0904  0008               	return
  8400  0905                     i1l2736:	
  8401  0905  0870               	movf	i1ADC_Enable@channel,w
  8402                           
  8403                           ; Switch size 1, requested type "space"
  8404                           ; Number of cases is 1, Range of values is 10 to 10
  8405                           ; switch strategies available:
  8406                           ; Name         Instructions Cycles
  8407                           ; simple_byte            4     3 (average)
  8408                           ; direct_byte           11     9 (fixed)
  8409                           ; jumptable            263     9 (fixed)
  8410                           ;	Chosen strategy is simple_byte
  8411  0906  3A0A               	xorlw	10	; case 10
  8412  0907  1903               	skipnz
  8413  0908  2900               	goto	i1l110
  8414  0909  290A               	goto	i1l111
  8415  090A                     i1l111:	
  8416  090A  0008               	return
  8417  090B                     __end_ofi1_ADC_Enable:	
  8418                           
  8419                           	psect	text36
  8420  0628                     __ptext36:	
  8421 ;; *************** function _USBCheckHIDRequest *****************
  8422 ;; Defined at:
  8423 ;;		line 153 in file "../../../../../../framework/usb/src/usb_device_hid.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;		None
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;		None
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  1    wreg      void 
  8430 ;; Registers used:
  8431 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8440 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8441 ;;Total ram usage:        1 bytes
  8442 ;; Hardware stack levels used:    1
  8443 ;; This function calls:
  8444 ;;		Nothing
  8445 ;; This function is called by:
  8446 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           
  8451                           ;psect for function _USBCheckHIDRequest
  8452  0628                     _USBCheckHIDRequest:	
  8453                           
  8454                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
  8455                           
  8456                           ;incstack = 0
  8457                           ; Regs used in _USBCheckHIDRequest: [wreg-fsr0h+status,2+status,0]
  8458  0628  0020               	movlb	0	; select bank0
  8459  0629  0840               	movf	64,w	;volatile
  8460  062A  391F               	andlw	31
  8461  062B  3A01               	xorlw	1
  8462  062C  1D03               	btfss	3,2
  8463  062D  0008               	return
  8464                           
  8465                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
  8466  062E  0844               	movf	68,w	;volatile
  8467  062F  1D03               	btfss	3,2
  8468  0630  0008               	return
  8469                           
  8470                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
  8471  0631  3006               	movlw	6
  8472  0632  0641               	xorwf	65,w	;volatile
  8473  0633  1903               	btfsc	3,2
  8474  0634  2E51               	goto	i1l2798
  8475  0635  2E5D               	goto	i1l2800
  8476  0636                     i1l2786:	
  8477                           ;usb_device_hid.c: 166: {
  8478                           ;usb_device_hid.c: 167: case 0x21:
  8479                           
  8480                           ;usb_device_hid.c: 164: {
  8481                           ;usb_device_hid.c: 165: switch(SetupPkt.bDescriptorType)
  8482                           
  8483                           
  8484                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
  8485  0636  0021               	movlb	1	; select bank1
  8486  0637  036E               	decf	_USBActiveConfiguration^(0+128),w	;volatile
  8487  0638  1D03               	btfss	3,2
  8488  0639  2E5D               	goto	i1l2800
  8489                           
  8490                           ;usb_device_hid.c: 169: {
  8491                           ;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
  8492  063A  30B5               	movlw	low ((_configDescriptor1| (0+32768)+18))
  8493  063B  0022               	movlb	2	; select bank2
  8494  063C  00E7               	movwf	_inPipes^(0+256)	;volatile
  8495  063D  3082               	movlw	high ((_configDescriptor1| (0+32768)+18))
  8496  063E  00E8               	movwf	(_inPipes^(0+256)+1)	;volatile
  8497  063F  3000               	movlw	0
  8498  0640  00EB               	movwf	((_inPipes+1)^(0+256)+3)	;volatile
  8499  0641  3009               	movlw	9
  8500  0642  2E4B               	goto	L10
  8501  0643                     i1l2792:	
  8502                           ;usb_device_hid.c: 176: case 0x22:
  8503                           
  8504                           ;usb_device_hid.c: 174: }
  8505                           ;usb_device_hid.c: 175: break;
  8506                           
  8507                           
  8508                           ;usb_device_hid.c: 178: {
  8509                           ;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
  8510  0643  30CC               	movlw	low (_hid_rpt01| (0+32768))
  8511  0644  0022               	movlb	2	; select bank2
  8512  0645  00E7               	movwf	_inPipes^(0+256)	;volatile
  8513  0646  3082               	movlw	high (_hid_rpt01| (0+32768))
  8514  0647  00E8               	movwf	(_inPipes^(0+256)+1)	;volatile
  8515  0648  3000               	movlw	0
  8516  0649  00EB               	movwf	((_inPipes+1)^(0+256)+3)	;volatile
  8517  064A  301D               	movlw	29
  8518  064B                     L10:	
  8519  064B  00EA               	movwf	(_inPipes^(0+256)+3)	;volatile
  8520  064C  30C0               	movlw	192
  8521  064D  00F0               	movwf	??_USBCheckHIDRequest
  8522  064E  0870               	movf	??_USBCheckHIDRequest,w
  8523  064F  00E9               	movwf	(_inPipes^(0+256)+2)	;volatile
  8524                           
  8525                           ;usb_device_hid.c: 198: }
  8526                           
  8527                           ;usb_device_hid.c: 197: break;
  8528                           
  8529                           ;usb_device_hid.c: 185: case 0x23:
  8530                           
  8531                           ;usb_device_hid.c: 183: }
  8532                           ;usb_device_hid.c: 184: break;
  8533  0650  2E5D               	goto	i1l2800
  8534  0651                     i1l2798:	
  8535  0651  0020               	movlb	0	; select bank0
  8536  0652  0843               	movf	67,w	;volatile
  8537                           
  8538                           ; Switch size 1, requested type "space"
  8539                           ; Number of cases is 3, Range of values is 33 to 35
  8540                           ; switch strategies available:
  8541                           ; Name         Instructions Cycles
  8542                           ; simple_byte           10     6 (average)
  8543                           ; direct_byte           15     9 (fixed)
  8544                           ; jumptable            263     9 (fixed)
  8545                           ;	Chosen strategy is simple_byte
  8546  0653  3A21               	xorlw	33	; case 33
  8547  0654  1903               	skipnz
  8548  0655  2E36               	goto	i1l2786
  8549  0656  3A03               	xorlw	3	; case 34
  8550  0657  1903               	skipnz
  8551  0658  2E43               	goto	i1l2792
  8552  0659  3A01               	xorlw	1	; case 35
  8553  065A  1903               	skipnz
  8554  065B  2E5D               	goto	i1l2800
  8555  065C  2E5D               	goto	i1l2800
  8556  065D                     i1l2800:	
  8557                           
  8558                           ;usb_device_hid.c: 199: }
  8559                           ;usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
  8560  065D  0020               	movlb	0	; select bank0
  8561  065E  0E40               	swapf	64,w	;volatile
  8562  065F  0C89               	rrf	9,f
  8563  0660  3903               	andlw	3
  8564  0661  3A01               	xorlw	1
  8565  0662  1D03               	btfss	3,2
  8566  0663  0008               	return
  8567  0664  2E99               	goto	i1l2822
  8568  0665                     i1l2804:	
  8569                           ;usb_device_hid.c: 218: case 0x02:
  8570                           
  8571                           ;usb_device_hid.c: 217: break;
  8572                           
  8573                           ;usb_device_hid.c: 213: case 0x09:
  8574                           
  8575                           ;usb_device_hid.c: 212: break;
  8576                           
  8577                           ;usb_device_hid.c: 207: {
  8578                           ;usb_device_hid.c: 208: case 0x01:
  8579                           
  8580                           ;usb_device_hid.c: 204: }
  8581                           ;usb_device_hid.c: 206: switch(SetupPkt.bRequest)
  8582                           
  8583                           ;usb_device_hid.c: 202: {
  8584                           ;usb_device_hid.c: 203: return;
  8585                           
  8586                           
  8587                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8588  0665  30BC               	movlw	low _idle_rate
  8589  0666  0022               	movlb	2	; select bank2
  8590  0667  00E7               	movwf	_inPipes^(0+256)	;volatile
  8591  0668  3001               	movlw	high _idle_rate
  8592  0669  00E8               	movwf	(_inPipes+1)^(0+256)	;volatile
  8593  066A  3000               	movlw	0
  8594  066B  00EB               	movwf	((_inPipes+1)^(0+256)+3)	;volatile
  8595  066C  3001               	movlw	1
  8596  066D  00EA               	movwf	(_inPipes^(0+256)+3)	;volatile
  8597  066E  30C1               	movlw	193
  8598  066F  00F0               	movwf	??_USBCheckHIDRequest
  8599  0670  0870               	movf	??_USBCheckHIDRequest,w
  8600  0671  00E9               	movwf	(_inPipes^(0+256)+2)	;volatile
  8601                           
  8602                           ;usb_device_hid.c: 223: break;
  8603  0672  0008               	return
  8604  0673                     i1l2810:	
  8605                           ;usb_device_hid.c: 224: case 0x0A:
  8606                           
  8607                           
  8608                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
  8609  0673  3080               	movlw	128
  8610  0674  00F0               	movwf	??_USBCheckHIDRequest
  8611  0675  0870               	movf	??_USBCheckHIDRequest,w
  8612  0676  0022               	movlb	2	; select bank2
  8613  0677  00E9               	movwf	(_inPipes^(0+256)+2)	;volatile
  8614                           
  8615                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
  8616  0678  0020               	movlb	0	; select bank0
  8617  0679  0843               	movf	67,w	;volatile
  8618  067A  00F0               	movwf	??_USBCheckHIDRequest
  8619  067B  0870               	movf	??_USBCheckHIDRequest,w
  8620  067C  0023               	movlb	3	; select bank3
  8621  067D  00BC               	movwf	_idle_rate^(0+384)
  8622                           
  8623                           ;usb_device_hid.c: 227: ;
  8624                           ;usb_device_hid.c: 228: break;
  8625  067E  0008               	return
  8626  067F                     i1l2812:	
  8627                           ;usb_device_hid.c: 229: case 0x03:
  8628                           
  8629                           
  8630                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
  8631  067F  30BB               	movlw	low _active_protocol
  8632  0680  0022               	movlb	2	; select bank2
  8633  0681  00E7               	movwf	_inPipes^(0+256)	;volatile
  8634  0682  3001               	movlw	high _active_protocol
  8635  0683  00E8               	movwf	(_inPipes+1)^(0+256)	;volatile
  8636  0684  3000               	movlw	0
  8637  0685  00EB               	movwf	((_inPipes+1)^(0+256)+3)	;volatile
  8638  0686  3001               	movlw	1
  8639  0687  00EA               	movwf	(_inPipes^(0+256)+3)	;volatile
  8640  0688  3081               	movlw	129
  8641  0689  00F0               	movwf	??_USBCheckHIDRequest
  8642  068A  0870               	movf	??_USBCheckHIDRequest,w
  8643  068B  00E9               	movwf	(_inPipes^(0+256)+2)	;volatile
  8644                           
  8645                           ;usb_device_hid.c: 234: break;
  8646  068C  0008               	return
  8647  068D                     i1l2818:	
  8648                           ;usb_device_hid.c: 235: case 0x0B:
  8649                           
  8650                           
  8651                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
  8652  068D  3080               	movlw	128
  8653  068E  00F0               	movwf	??_USBCheckHIDRequest
  8654  068F  0870               	movf	??_USBCheckHIDRequest,w
  8655  0690  0022               	movlb	2	; select bank2
  8656  0691  00E9               	movwf	(_inPipes^(0+256)+2)	;volatile
  8657                           
  8658                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
  8659  0692  0020               	movlb	0	; select bank0
  8660  0693  0842               	movf	66,w	;volatile
  8661  0694  00F0               	movwf	??_USBCheckHIDRequest
  8662  0695  0870               	movf	??_USBCheckHIDRequest,w
  8663  0696  0023               	movlb	3	; select bank3
  8664  0697  00BB               	movwf	_active_protocol^(0+384)
  8665                           
  8666                           ;usb_device_hid.c: 239: }
  8667                           
  8668                           ;usb_device_hid.c: 238: break;
  8669  0698  0008               	return
  8670  0699                     i1l2822:	
  8671  0699  0020               	movlb	0	; select bank0
  8672  069A  0841               	movf	65,w	;volatile
  8673                           
  8674                           ; Switch size 1, requested type "space"
  8675                           ; Number of cases is 6, Range of values is 1 to 11
  8676                           ; switch strategies available:
  8677                           ; Name         Instructions Cycles
  8678                           ; simple_byte           19    10 (average)
  8679                           ; direct_byte           31     9 (fixed)
  8680                           ; jumptable            263     9 (fixed)
  8681                           ;	Chosen strategy is simple_byte
  8682  069B  3A01               	xorlw	1	; case 1
  8683  069C  1903               	skipnz
  8684  069D  2EAE               	goto	i1l549
  8685  069E  3A03               	xorlw	3	; case 2
  8686  069F  1903               	skipnz
  8687  06A0  2E65               	goto	i1l2804
  8688  06A1  3A01               	xorlw	1	; case 3
  8689  06A2  1903               	skipnz
  8690  06A3  2E7F               	goto	i1l2812
  8691  06A4  3A0A               	xorlw	10	; case 9
  8692  06A5  1903               	skipnz
  8693  06A6  2EAE               	goto	i1l549
  8694  06A7  3A03               	xorlw	3	; case 10
  8695  06A8  1903               	skipnz
  8696  06A9  2E73               	goto	i1l2810
  8697  06AA  3A01               	xorlw	1	; case 11
  8698  06AB  1903               	skipnz
  8699  06AC  2E8D               	goto	i1l2818
  8700  06AD  2EAE               	goto	i1l549
  8701  06AE                     i1l549:	
  8702  06AE  0008               	return
  8703  06AF                     __end_of_USBCheckHIDRequest:	
  8704                           
  8705                           	psect	text37
  8706  07B1                     __ptext37:	
  8707 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  8708 ;; Defined at:
  8709 ;;		line 50 in file "../demo_src/app_led_usb_status.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;		None
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;		None
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  1    wreg      void 
  8716 ;; Registers used:
  8717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8727 ;;Total ram usage:        0 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:    1
  8730 ;; This function calls:
  8731 ;;		_LED_Off
  8732 ;;		_LED_On
  8733 ;; This function is called by:
  8734 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           
  8739                           ;psect for function _APP_LEDUpdateUSBStatus
  8740  07B1                     _APP_LEDUpdateUSBStatus:	
  8741                           
  8742                           ;app_led_usb_status.c: 52: static uint16_t ledCount = 0;
  8743                           ;app_led_usb_status.c: 54: if(UCONbits.SUSPND == 1)
  8744                           
  8745                           ;incstack = 0
  8746                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8747  07B1  003D               	movlb	29	; select bank29
  8748  07B2  1C8E               	btfss	14,1	;volatile
  8749  07B3  2FF2               	goto	i1l2856
  8750                           
  8751                           ;app_led_usb_status.c: 55: {
  8752                           ;app_led_usb_status.c: 56: LED_Off(LED_D1);
  8753  07B4  3001               	movlw	1
  8754  07B5  3189  216C         	fcall	_LED_Off
  8755                           
  8756                           ;app_led_usb_status.c: 57: return;
  8757  07B7  0008               	return
  8758  07B8                     i1l2830:	
  8759                           ;app_led_usb_status.c: 61: {
  8760                           ;app_led_usb_status.c: 62: case CONFIGURED_STATE:
  8761                           
  8762                           ;app_led_usb_status.c: 58: }
  8763                           ;app_led_usb_status.c: 60: switch(USBDeviceState)
  8764                           
  8765                           
  8766                           ;app_led_usb_status.c: 65: if(ledCount == 1)
  8767  07B8  0023               	movlb	3	; select bank3
  8768  07B9  0328               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8769  07BA  0429               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8770  07BB  1D03               	btfss	3,2
  8771  07BC  2FC2               	goto	i1l2834
  8772                           
  8773                           ;app_led_usb_status.c: 66: {
  8774                           ;app_led_usb_status.c: 67: LED_On(LED_D1);
  8775  07BD  3001               	movlw	1
  8776  07BE  3189  2185  3187   	fcall	_LED_On
  8777                           
  8778                           ;app_led_usb_status.c: 68: }
  8779  07C1  2FF8               	goto	i1l2858
  8780  07C2                     i1l2834:	
  8781                           
  8782                           ;app_led_usb_status.c: 69: else if(ledCount == 75)
  8783  07C2  304B               	movlw	75
  8784  07C3  0023               	movlb	3	; select bank3
  8785  07C4  0628               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8786  07C5  0429               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8787  07C6  1D03               	btfss	3,2
  8788  07C7  2FCD               	goto	i1l2838
  8789                           
  8790                           ;app_led_usb_status.c: 70: {
  8791                           ;app_led_usb_status.c: 71: LED_Off(LED_D1);
  8792  07C8  3001               	movlw	1
  8793  07C9  3189  216C  3187   	fcall	_LED_Off
  8794                           
  8795                           ;app_led_usb_status.c: 72: }
  8796  07CC  2FF8               	goto	i1l2858
  8797  07CD                     i1l2838:	
  8798                           
  8799                           ;app_led_usb_status.c: 73: else if(ledCount > 150)
  8800  07CD  3000               	movlw	0
  8801  07CE  0023               	movlb	3	; select bank3
  8802  07CF  0229               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8803  07D0  3097               	movlw	151
  8804  07D1  2FEB               	goto	L11
  8805  07D2                     i1l2842:	
  8806                           ;app_led_usb_status.c: 79: default:
  8807                           
  8808                           ;app_led_usb_status.c: 76: }
  8809                           ;app_led_usb_status.c: 77: break;
  8810                           
  8811                           ;app_led_usb_status.c: 74: {
  8812                           ;app_led_usb_status.c: 75: ledCount = 0;
  8813                           
  8814                           
  8815                           ;app_led_usb_status.c: 82: if(ledCount == 1)
  8816  07D2  0023               	movlb	3	; select bank3
  8817  07D3  0328               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8818  07D4  0429               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8819  07D5  1D03               	btfss	3,2
  8820  07D6  2FDC               	goto	i1l2846
  8821                           
  8822                           ;app_led_usb_status.c: 83: {
  8823                           ;app_led_usb_status.c: 84: LED_On(LED_D1);
  8824  07D7  3001               	movlw	1
  8825  07D8  3189  2185  3187   	fcall	_LED_On
  8826                           
  8827                           ;app_led_usb_status.c: 85: }
  8828  07DB  2FF8               	goto	i1l2858
  8829  07DC                     i1l2846:	
  8830                           
  8831                           ;app_led_usb_status.c: 86: else if(ledCount == 50)
  8832  07DC  3032               	movlw	50
  8833  07DD  0023               	movlb	3	; select bank3
  8834  07DE  0628               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8835  07DF  0429               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8836  07E0  1D03               	btfss	3,2
  8837  07E1  2FE7               	goto	i1l2850
  8838                           
  8839                           ;app_led_usb_status.c: 87: {
  8840                           ;app_led_usb_status.c: 88: LED_Off(LED_D1);
  8841  07E2  3001               	movlw	1
  8842  07E3  3189  216C  3187   	fcall	_LED_Off
  8843                           
  8844                           ;app_led_usb_status.c: 89: }
  8845  07E6  2FF8               	goto	i1l2858
  8846  07E7                     i1l2850:	
  8847                           
  8848                           ;app_led_usb_status.c: 90: else if(ledCount > 950)
  8849  07E7  3003               	movlw	3
  8850  07E8  0023               	movlb	3	; select bank3
  8851  07E9  0229               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8852  07EA  30B7               	movlw	183
  8853  07EB                     L11:	
  8854  07EB  1903               	skipnz
  8855  07EC  0228               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8856  07ED  1C03               	skipc
  8857  07EE  2FF8               	goto	i1l2858
  8858                           
  8859                           ;app_led_usb_status.c: 91: {
  8860                           ;app_led_usb_status.c: 92: ledCount = 0;
  8861  07EF  01A8               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+384)
  8862  07F0  01A9               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384)
  8863                           
  8864                           ;app_led_usb_status.c: 95: }
  8865                           
  8866                           ;app_led_usb_status.c: 93: }
  8867                           ;app_led_usb_status.c: 94: break;
  8868  07F1  2FF8               	goto	i1l2858
  8869  07F2                     i1l2856:	
  8870  07F2  0020               	movlb	0	; select bank0
  8871  07F3  086C               	movf	_USBDeviceState,w	;volatile
  8872                           
  8873                           ; Switch size 1, requested type "space"
  8874                           ; Number of cases is 1, Range of values is 32 to 32
  8875                           ; switch strategies available:
  8876                           ; Name         Instructions Cycles
  8877                           ; simple_byte            4     3 (average)
  8878                           ; direct_byte           11     9 (fixed)
  8879                           ; jumptable            263     9 (fixed)
  8880                           ;	Chosen strategy is simple_byte
  8881  07F4  3A20               	xorlw	32	; case 32
  8882  07F5  1903               	skipnz
  8883  07F6  2FB8               	goto	i1l2830
  8884  07F7  2FD2               	goto	i1l2842
  8885  07F8                     i1l2858:	
  8886                           
  8887                           ;app_led_usb_status.c: 98: ledCount++;
  8888  07F8  3001               	movlw	1
  8889  07F9  0023               	movlb	3	; select bank3
  8890  07FA  07A8               	addwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),f
  8891  07FB  3000               	movlw	0
  8892  07FC  3DA9               	addwfc	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),f
  8893  07FD  0008               	return
  8894  07FE                     __end_of_APP_LEDUpdateUSBStatus:	
  8895                           
  8896                           	psect	text38
  8897  0985                     __ptext38:	
  8898 ;; *************** function _LED_On *****************
  8899 ;; Defined at:
  8900 ;;		line 59 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  led             1    wreg     enum E2
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  led             1    0[COMMON] enum E2
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      void 
  8907 ;; Registers used:
  8908 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8918 ;;Total ram usage:        1 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; This function calls:
  8921 ;;		Nothing
  8922 ;; This function is called by:
  8923 ;;		_APP_LEDUpdateUSBStatus
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927                           
  8928                           ;psect for function _LED_On
  8929  0985                     _LED_On:	
  8930                           
  8931                           ;incstack = 0
  8932                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  8933                           ;LED_On@led stored from wreg
  8934  0985  00F0               	movwf	LED_On@led
  8935                           
  8936                           ;leds.c: 61: switch(led)
  8937  0986  2993               	goto	i1l2688
  8938  0987                     i1l24:	
  8939                           ;leds.c: 62: {
  8940                           ;leds.c: 63: case LED_D1:
  8941                           
  8942                           
  8943                           ;leds.c: 64: LATCbits.LATC0 = 1;
  8944  0987  0022               	movlb	2	; select bank2
  8945  0988  140E               	bsf	14,0	;volatile
  8946                           
  8947                           ;leds.c: 65: break;
  8948  0989  0008               	return
  8949  098A                     i1l26:	
  8950                           ;leds.c: 67: case LED_D2:
  8951                           
  8952                           
  8953                           ;leds.c: 68: LATCbits.LATC1 = 1;
  8954  098A  0022               	movlb	2	; select bank2
  8955  098B  148E               	bsf	14,1	;volatile
  8956                           
  8957                           ;leds.c: 69: break;
  8958  098C  0008               	return
  8959  098D                     i1l27:	
  8960                           ;leds.c: 71: case LED_D3:
  8961                           
  8962                           
  8963                           ;leds.c: 72: LATCbits.LATC2 = 1;
  8964  098D  0022               	movlb	2	; select bank2
  8965  098E  150E               	bsf	14,2	;volatile
  8966                           
  8967                           ;leds.c: 73: break;
  8968  098F  0008               	return
  8969  0990                     i1l28:	
  8970                           ;leds.c: 75: case LED_D4:
  8971                           
  8972                           
  8973                           ;leds.c: 76: LATCbits.LATC3 = 1;
  8974  0990  0022               	movlb	2	; select bank2
  8975  0991  158E               	bsf	14,3	;volatile
  8976                           
  8977                           ;leds.c: 81: }
  8978                           
  8979                           ;leds.c: 80: break;
  8980                           
  8981                           ;leds.c: 79: case LED_NONE:
  8982                           
  8983                           ;leds.c: 77: break;
  8984  0992  0008               	return
  8985  0993                     i1l2688:	
  8986  0993  0870               	movf	LED_On@led,w
  8987                           
  8988                           ; Switch size 1, requested type "space"
  8989                           ; Number of cases is 5, Range of values is 0 to 4
  8990                           ; switch strategies available:
  8991                           ; Name         Instructions Cycles
  8992                           ; direct_byte           16     6 (fixed)
  8993                           ; simple_byte           16     9 (average)
  8994                           ; jumptable            260     6 (fixed)
  8995                           ;	Chosen strategy is direct_byte
  8996  0994  0084               	movwf	4
  8997  0995  3005               	movlw	5
  8998  0996  0204               	subwf	4,w
  8999  0997  1803               	skipnc
  9000  0998  0008               	return
  9001  0999  3188               	movlp	high i1S4200
  9002  099A  3504               	lslf	4,w
  9003  099B  3E38               	addlw	low i1S4200
  9004  099C  0082               	movwf	2
  9005  099D                     i1l30:	
  9006  099D  0008               	return
  9007  099E                     __end_of_LED_On:	
  9008                           
  9009                           	psect	swtext5
  9010  0838                     __pswtext5:	
  9011  0838                     i1S4200:	
  9012  0838  3189  299D         	ljmp	i1l30
  9013  083A  3189  2987         	ljmp	i1l24
  9014  083C  3189  298A         	ljmp	i1l26
  9015  083E  3189  298D         	ljmp	i1l27
  9016  0840  3189  2990         	ljmp	i1l28
  9017                           
  9018                           	psect	text39
  9019  096C                     __ptext39:	
  9020 ;; *************** function _LED_Off *****************
  9021 ;; Defined at:
  9022 ;;		line 100 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;  led             1    wreg     enum E2
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;  led             1    0[COMMON] enum E2
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  1    wreg      void 
  9029 ;; Registers used:
  9030 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;Total ram usage:        1 bytes
  9041 ;; Hardware stack levels used:    1
  9042 ;; This function calls:
  9043 ;;		Nothing
  9044 ;; This function is called by:
  9045 ;;		_APP_LEDUpdateUSBStatus
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           
  9050                           ;psect for function _LED_Off
  9051  096C                     _LED_Off:	
  9052                           
  9053                           ;incstack = 0
  9054                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  9055                           ;LED_Off@led stored from wreg
  9056  096C  00F0               	movwf	LED_Off@led
  9057                           
  9058                           ;leds.c: 102: switch(led)
  9059  096D  297A               	goto	i1l2698
  9060  096E                     i1l34:	
  9061                           ;leds.c: 103: {
  9062                           ;leds.c: 104: case LED_D1:
  9063                           
  9064                           
  9065                           ;leds.c: 105: LATCbits.LATC0 = 0;
  9066  096E  0022               	movlb	2	; select bank2
  9067  096F  100E               	bcf	14,0	;volatile
  9068                           
  9069                           ;leds.c: 106: break;
  9070  0970  0008               	return
  9071  0971                     i1l36:	
  9072                           ;leds.c: 108: case LED_D2:
  9073                           
  9074                           
  9075                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9076  0971  0022               	movlb	2	; select bank2
  9077  0972  108E               	bcf	14,1	;volatile
  9078                           
  9079                           ;leds.c: 110: break;
  9080  0973  0008               	return
  9081  0974                     i1l37:	
  9082                           ;leds.c: 112: case LED_D3:
  9083                           
  9084                           
  9085                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9086  0974  0022               	movlb	2	; select bank2
  9087  0975  110E               	bcf	14,2	;volatile
  9088                           
  9089                           ;leds.c: 114: break;
  9090  0976  0008               	return
  9091  0977                     i1l38:	
  9092                           ;leds.c: 116: case LED_D4:
  9093                           
  9094                           
  9095                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9096  0977  0022               	movlb	2	; select bank2
  9097  0978  118E               	bcf	14,3	;volatile
  9098                           
  9099                           ;leds.c: 122: }
  9100                           
  9101                           ;leds.c: 121: break;
  9102                           
  9103                           ;leds.c: 120: case LED_NONE:
  9104                           
  9105                           ;leds.c: 118: break;
  9106  0979  0008               	return
  9107  097A                     i1l2698:	
  9108  097A  0870               	movf	LED_Off@led,w
  9109                           
  9110                           ; Switch size 1, requested type "space"
  9111                           ; Number of cases is 5, Range of values is 0 to 4
  9112                           ; switch strategies available:
  9113                           ; Name         Instructions Cycles
  9114                           ; direct_byte           16     6 (fixed)
  9115                           ; simple_byte           16     9 (average)
  9116                           ; jumptable            260     6 (fixed)
  9117                           ;	Chosen strategy is direct_byte
  9118  097B  0084               	movwf	4
  9119  097C  3005               	movlw	5
  9120  097D  0204               	subwf	4,w
  9121  097E  1803               	skipnc
  9122  097F  0008               	return
  9123  0980  3188               	movlp	high i1S4202
  9124  0981  3504               	lslf	4,w
  9125  0982  3E42               	addlw	low i1S4202
  9126  0983  0082               	movwf	2
  9127  0984                     i1l40:	
  9128  0984  0008               	return
  9129  0985                     __end_of_LED_Off:	
  9130                           
  9131                           	psect	swtext6
  9132  0842                     __pswtext6:	
  9133  0842                     i1S4202:	
  9134  0842  3189  2984         	ljmp	i1l40
  9135  0844  3189  296E         	ljmp	i1l34
  9136  0846  3189  2971         	ljmp	i1l36
  9137  0848  3189  2974         	ljmp	i1l37
  9138  084A  3189  2977         	ljmp	i1l38
  9139                           
  9140                           	psect	text40
  9141  09D1                     __ptext40:	
  9142 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
  9143 ;; Defined at:
  9144 ;;		line 77 in file "../demo_src/app_device_custom_hid.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;		None
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;		None
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  1    wreg      void 
  9151 ;; Registers used:
  9152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9162 ;;Total ram usage:        1 bytes
  9163 ;; Hardware stack levels used:    1
  9164 ;; Hardware stack levels required when called:    2
  9165 ;; This function calls:
  9166 ;;		_USBEnableEndpoint
  9167 ;;		i1_USBTransferOnePacket
  9168 ;; This function is called by:
  9169 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           
  9174                           ;psect for function _APP_DeviceCustomHIDInitialize
  9175  09D1                     _APP_DeviceCustomHIDInitialize:	
  9176                           
  9177                           ;app_device_custom_hid.c: 81: USBInHandle = 0;
  9178                           
  9179                           ;incstack = 0
  9180                           ; Regs used in _APP_DeviceCustomHIDInitialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  9181  09D1  0023               	movlb	3	; select bank3
  9182  09D2  01AA               	clrf	_USBInHandle^(0+384)
  9183  09D3  01AB               	clrf	(_USBInHandle+1)^(0+384)
  9184                           
  9185                           ;app_device_custom_hid.c: 84: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
  9186  09D4  301E               	movlw	30
  9187  09D5  00FD               	movwf	??_APP_DeviceCustomHIDInitialize
  9188  09D6  087D               	movf	??_APP_DeviceCustomHIDInitialize,w
  9189  09D7  00F7               	movwf	USBEnableEndpoint@options
  9190  09D8  3001               	movlw	1
  9191  09D9  318A  222A  3189   	fcall	_USBEnableEndpoint
  9192                           
  9193                           ;app_device_custom_hid.c: 87: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
  9194  09DC  01F0               	clrf	i1USBTransferOnePacket@dir
  9195  09DD  30A0               	movlw	160
  9196  09DE  00F1               	movwf	i1USBTransferOnePacket@data
  9197  09DF  3000               	movlw	0
  9198  09E0  00F2               	movwf	i1USBTransferOnePacket@data+1
  9199  09E1  3040               	movlw	64
  9200  09E2  00FD               	movwf	??_APP_DeviceCustomHIDInitialize
  9201  09E3  087D               	movf	??_APP_DeviceCustomHIDInitialize,w
  9202  09E4  00F3               	movwf	i1USBTransferOnePacket@len
  9203  09E5  3001               	movlw	1
  9204  09E6  318F  2780         	fcall	i1_USBTransferOnePacket
  9205  09E8  0871               	movf	?i1_USBTransferOnePacket+1,w
  9206  09E9  0023               	movlb	3	; select bank3
  9207  09EA  00AD               	movwf	(_USBOutHandle+1)^(0+384)
  9208  09EB  0870               	movf	?i1_USBTransferOnePacket,w
  9209  09EC  00AC               	movwf	_USBOutHandle^(0+384)
  9210  09ED  0008               	return
  9211  09EE                     __end_of_APP_DeviceCustomHIDInitialize:	
  9212                           
  9213                           	psect	text41
  9214  0F80                     __ptext41:	
  9215 ;; *************** function i1_USBTransferOnePacket *****************
  9216 ;; Defined at:
  9217 ;;		line 995 in file "../../../../../../framework/usb/src/usb_device.c"
  9218 ;; Parameters:    Size  Location     Type
  9219 ;;  ep              1    wreg     unsigned char 
  9220 ;;  dir             1    0[COMMON] unsigned char 
  9221 ;;  data            2    1[COMMON] PTR unsigned char 
  9222 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), 
  9223 ;;  len             1    3[COMMON] unsigned char 
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;  ep              1    8[COMMON] unsigned char 
  9226 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
  9227 ;;		 -> RAM(4096), NULL(0), BDT(32), 
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  2    0[COMMON] PTR void 
  9230 ;; Registers used:
  9231 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 0/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;Total ram usage:       11 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; This function calls:
  9244 ;;		Nothing
  9245 ;; This function is called by:
  9246 ;;		_APP_DeviceCustomHIDInitialize
  9247 ;; This function uses a non-reentrant model
  9248 ;;
  9249                           
  9250                           
  9251                           ;psect for function i1_USBTransferOnePacket
  9252  0F80                     i1_USBTransferOnePacket:	
  9253                           
  9254                           ;incstack = 0
  9255                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  9256                           ;i1USBTransferOnePacket@ep stored from wreg
  9257  0F80  00F8               	movwf	i1USBTransferOnePacket@ep
  9258                           
  9259                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  9260                           ;usb_device.c: 1000: if(dir != 0)
  9261  0F81  0870               	movf	i1USBTransferOnePacket@dir,w
  9262  0F82  1903               	btfsc	3,2
  9263  0F83  2F8C               	goto	i1l2750
  9264                           
  9265                           ;usb_device.c: 1001: {
  9266                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  9267  0F84  3578               	lslf	i1USBTransferOnePacket@ep,w
  9268  0F85  3E66               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  9269  0F86  0086               	movwf	6
  9270  0F87  0187               	clrf	7
  9271  0F88  3F40               	moviw [0]fsr1
  9272  0F89  00F9               	movwf	i1USBTransferOnePacket@handle
  9273  0F8A  3F41               	moviw [1]fsr1
  9274  0F8B  2F94               	goto	L12
  9275  0F8C                     i1l2750:	
  9276                           ;usb_device.c: 1004: }
  9277                           
  9278                           
  9279                           ;usb_device.c: 1005: else
  9280                           ;usb_device.c: 1006: {
  9281                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  9282  0F8C  3578               	lslf	i1USBTransferOnePacket@ep,w
  9283  0F8D  3EA4               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9284  0F8E  0086               	movwf	6
  9285  0F8F  3001               	movlw	1	; select bank3/4
  9286  0F90  0087               	movwf	7
  9287  0F91  3F40               	moviw [0]fsr1
  9288  0F92  00F9               	movwf	i1USBTransferOnePacket@handle
  9289  0F93  3F41               	moviw [1]fsr1
  9290  0F94                     L12:	
  9291  0F94  00FA               	movwf	i1USBTransferOnePacket@handle+1
  9292                           
  9293                           ;usb_device.c: 1009: }
  9294                           ;usb_device.c: 1013: if(handle == 0)
  9295  0F95  0879               	movf	i1USBTransferOnePacket@handle,w
  9296  0F96  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
  9297  0F97  1D03               	btfss	3,2
  9298  0F98  2F9C               	goto	i1l2758
  9299                           
  9300                           ;usb_device.c: 1014: {
  9301                           ;usb_device.c: 1015: return 0;
  9302  0F99  01F0               	clrf	?i1_USBTransferOnePacket
  9303  0F9A  01F1               	clrf	?i1_USBTransferOnePacket+1
  9304  0F9B  0008               	return
  9305  0F9C                     i1l2758:	
  9306                           
  9307                           ;usb_device.c: 1016: }
  9308                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  9309  0F9C  30FF               	movlw	255
  9310  0F9D  0571               	andwf	i1USBTransferOnePacket@data,w
  9311  0F9E  00F4               	movwf	??i1_USBTransferOnePacket
  9312  0F9F  307F               	movlw	127
  9313  0FA0  0572               	andwf	i1USBTransferOnePacket@data+1,w
  9314  0FA1  00F5               	movwf	??i1_USBTransferOnePacket+1
  9315  0FA2  0879               	movf	i1USBTransferOnePacket@handle,w
  9316  0FA3  0086               	movwf	6
  9317  0FA4  087A               	movf	i1USBTransferOnePacket@handle+1,w
  9318  0FA5  0087               	movwf	7
  9319  0FA6  3142               	addfsr 1,2
  9320  0FA7  0874               	movf	??i1_USBTransferOnePacket,w
  9321  0FA8  3FC0               	movwi [0]fsr1
  9322  0FA9  0875               	movf	??i1_USBTransferOnePacket+1,w
  9323  0FAA  3FC1               	movwi [1]fsr1
  9324                           
  9325                           ;usb_device.c: 1030: handle->CNT = len;
  9326  0FAB  0879               	movf	i1USBTransferOnePacket@handle,w
  9327  0FAC  3E01               	addlw	1
  9328  0FAD  00F4               	movwf	??i1_USBTransferOnePacket
  9329  0FAE  3000               	movlw	0
  9330  0FAF  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
  9331  0FB0  00F5               	movwf	??i1_USBTransferOnePacket+1
  9332  0FB1  0874               	movf	??i1_USBTransferOnePacket,w
  9333  0FB2  0086               	movwf	6
  9334  0FB3  0875               	movf	??i1_USBTransferOnePacket+1,w
  9335  0FB4  0087               	movwf	7
  9336  0FB5  0873               	movf	i1USBTransferOnePacket@len,w
  9337  0FB6  0081               	movwf	1
  9338                           
  9339                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  9340  0FB7  3040               	movlw	64
  9341  0FB8  00F4               	movwf	??i1_USBTransferOnePacket
  9342  0FB9  0879               	movf	i1USBTransferOnePacket@handle,w
  9343  0FBA  0086               	movwf	6
  9344  0FBB  087A               	movf	i1USBTransferOnePacket@handle+1,w
  9345  0FBC  0087               	movwf	7
  9346  0FBD  0874               	movf	??i1_USBTransferOnePacket,w
  9347  0FBE  0581               	andwf	1,f
  9348                           
  9349                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  9350  0FBF  0879               	movf	i1USBTransferOnePacket@handle,w
  9351  0FC0  0086               	movwf	6
  9352  0FC1  087A               	movf	i1USBTransferOnePacket@handle+1,w
  9353  0FC2  0087               	movwf	7
  9354  0FC3  1581               	bsf	1,3
  9355                           
  9356                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  9357  0FC4  0879               	movf	i1USBTransferOnePacket@handle,w
  9358  0FC5  0086               	movwf	6
  9359  0FC6  087A               	movf	i1USBTransferOnePacket@handle+1,w
  9360  0FC7  0087               	movwf	7
  9361  0FC8  1781               	bsf	1,7
  9362                           
  9363                           ;usb_device.c: 1036: if(dir != 0)
  9364  0FC9  0870               	movf	i1USBTransferOnePacket@dir,w
  9365  0FCA  1903               	btfsc	3,2
  9366  0FCB  2FE3               	goto	i1l2768
  9367                           
  9368                           ;usb_device.c: 1037: {
  9369                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  9370  0FCC  3578               	lslf	i1USBTransferOnePacket@ep,w
  9371  0FCD  3E66               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  9372  0FCE  0086               	movwf	6
  9373  0FCF  0187               	clrf	7
  9374  0FD0  3F40               	moviw [0]fsr1
  9375  0FD1  00F4               	movwf	??i1_USBTransferOnePacket
  9376  0FD2  3F41               	moviw [1]fsr1
  9377  0FD3  00F5               	movwf	??i1_USBTransferOnePacket+1
  9378  0FD4  3004               	movlw	4
  9379  0FD5  0674               	xorwf	??i1_USBTransferOnePacket,w
  9380  0FD6  00F6               	movwf	??i1_USBTransferOnePacket+2
  9381  0FD7  3000               	movlw	0
  9382  0FD8  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  9383  0FD9  00F7               	movwf	??i1_USBTransferOnePacket+3
  9384  0FDA  3578               	lslf	i1USBTransferOnePacket@ep,w
  9385  0FDB  3E66               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  9386  0FDC  0086               	movwf	6
  9387  0FDD  0187               	clrf	7
  9388  0FDE  0876               	movf	??i1_USBTransferOnePacket+2,w
  9389  0FDF  3FC0               	movwi [0]fsr1
  9390  0FE0  0877               	movf	??i1_USBTransferOnePacket+3,w
  9391  0FE1  3FC1               	movwi [1]fsr1
  9392                           
  9393                           ;usb_device.c: 1040: }
  9394  0FE2  2FFB               	goto	i1l2770
  9395  0FE3                     i1l2768:	
  9396                           
  9397                           ;usb_device.c: 1041: else
  9398                           ;usb_device.c: 1042: {
  9399                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  9400  0FE3  3578               	lslf	i1USBTransferOnePacket@ep,w
  9401  0FE4  3EA4               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9402  0FE5  0086               	movwf	6
  9403  0FE6  3001               	movlw	1	; select bank3/4
  9404  0FE7  0087               	movwf	7
  9405  0FE8  3F40               	moviw [0]fsr1
  9406  0FE9  00F4               	movwf	??i1_USBTransferOnePacket
  9407  0FEA  3F41               	moviw [1]fsr1
  9408  0FEB  00F5               	movwf	??i1_USBTransferOnePacket+1
  9409  0FEC  3004               	movlw	4
  9410  0FED  0674               	xorwf	??i1_USBTransferOnePacket,w
  9411  0FEE  00F6               	movwf	??i1_USBTransferOnePacket+2
  9412  0FEF  3000               	movlw	0
  9413  0FF0  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  9414  0FF1  00F7               	movwf	??i1_USBTransferOnePacket+3
  9415  0FF2  3578               	lslf	i1USBTransferOnePacket@ep,w
  9416  0FF3  3EA4               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9417  0FF4  0086               	movwf	6
  9418  0FF5  3001               	movlw	1	; select bank3/4
  9419  0FF6  0087               	movwf	7
  9420  0FF7  0876               	movf	??i1_USBTransferOnePacket+2,w
  9421  0FF8  3FC0               	movwi [0]fsr1
  9422  0FF9  0877               	movf	??i1_USBTransferOnePacket+3,w
  9423  0FFA  3FC1               	movwi [1]fsr1
  9424  0FFB                     i1l2770:	
  9425                           
  9426                           ;usb_device.c: 1045: }
  9427                           ;usb_device.c: 1046: return (void*)handle;
  9428  0FFB  087A               	movf	i1USBTransferOnePacket@handle+1,w
  9429  0FFC  00F1               	movwf	?i1_USBTransferOnePacket+1
  9430  0FFD  0879               	movf	i1USBTransferOnePacket@handle,w
  9431  0FFE  00F0               	movwf	?i1_USBTransferOnePacket
  9432  0FFF  0008               	return
  9433  1000                     __end_ofi1_USBTransferOnePacket:	
  9434                           
  9435                           	psect	text42
  9436  0A2A                     __ptext42:	
  9437 ;; *************** function _USBEnableEndpoint *****************
  9438 ;; Defined at:
  9439 ;;		line 878 in file "../../../../../../framework/usb/src/usb_device.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  ep              1    wreg     unsigned char 
  9442 ;;  options         1    7[COMMON] unsigned char 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;  ep              1   12[COMMON] unsigned char 
  9445 ;;  p               2   10[COMMON] PTR unsigned char 
  9446 ;;		 -> UEP0(1), 
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  1    wreg      void 
  9449 ;; Registers used:
  9450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9456 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;Total ram usage:        6 bytes
  9461 ;; Hardware stack levels used:    1
  9462 ;; Hardware stack levels required when called:    1
  9463 ;; This function calls:
  9464 ;;		_USBConfigureEndpoint
  9465 ;; This function is called by:
  9466 ;;		_APP_DeviceCustomHIDInitialize
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469                           
  9470                           
  9471                           ;psect for function _USBEnableEndpoint
  9472  0A2A                     _USBEnableEndpoint:	
  9473                           
  9474                           ;incstack = 0
  9475                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9476                           ;USBEnableEndpoint@ep stored from wreg
  9477  0A2A  00FC               	movwf	USBEnableEndpoint@ep
  9478                           
  9479                           ;usb_device.c: 880: unsigned char* p;
  9480                           ;usb_device.c: 884: if(options & 0x04)
  9481  0A2B  1D77               	btfss	USBEnableEndpoint@options,2
  9482  0A2C  2A32               	goto	i1l2708
  9483                           
  9484                           ;usb_device.c: 885: {
  9485                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  9486  0A2D  01F0               	clrf	USBConfigureEndpoint@direction
  9487  0A2E  087C               	movf	USBEnableEndpoint@ep,w
  9488  0A2F  318B  233D  318A   	fcall	_USBConfigureEndpoint
  9489  0A32                     i1l2708:	
  9490                           
  9491                           ;usb_device.c: 887: }
  9492                           ;usb_device.c: 888: if(options & 0x02)
  9493  0A32  1CF7               	btfss	USBEnableEndpoint@options,1
  9494  0A33  2A39               	goto	i1l2712
  9495                           
  9496                           ;usb_device.c: 889: {
  9497                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  9498  0A34  01F0               	clrf	USBConfigureEndpoint@direction
  9499  0A35  0AF0               	incf	USBConfigureEndpoint@direction,f
  9500  0A36  087C               	movf	USBEnableEndpoint@ep,w
  9501  0A37  318B  233D         	fcall	_USBConfigureEndpoint
  9502  0A39                     i1l2712:	
  9503                           
  9504                           ;usb_device.c: 891: }
  9505                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  9506  0A39  087C               	movf	USBEnableEndpoint@ep,w
  9507  0A3A  3E98               	addlw	152
  9508  0A3B  00F8               	movwf	??_USBEnableEndpoint
  9509  0A3C  01F9               	clrf	??_USBEnableEndpoint+1
  9510  0A3D  300E               	movlw	14
  9511  0A3E  3DF9               	addwfc	??_USBEnableEndpoint+1,f
  9512  0A3F  0878               	movf	??_USBEnableEndpoint,w
  9513  0A40  00FA               	movwf	USBEnableEndpoint@p
  9514  0A41  0879               	movf	??_USBEnableEndpoint+1,w
  9515  0A42  00FB               	movwf	USBEnableEndpoint@p+1
  9516                           
  9517                           ;usb_device.c: 901: *p = options;
  9518  0A43  087A               	movf	USBEnableEndpoint@p,w
  9519  0A44  0086               	movwf	6
  9520  0A45  087B               	movf	USBEnableEndpoint@p+1,w
  9521  0A46  0087               	movwf	7
  9522  0A47  0877               	movf	USBEnableEndpoint@options,w
  9523  0A48  0081               	movwf	1
  9524  0A49  0008               	return
  9525  0A4A                     __end_of_USBEnableEndpoint:	
  9526                           
  9527                           	psect	text43
  9528  0B3D                     __ptext43:	
  9529 ;; *************** function _USBConfigureEndpoint *****************
  9530 ;; Defined at:
  9531 ;;		line 1543 in file "../../../../../../framework/usb/src/usb_device.c"
  9532 ;; Parameters:    Size  Location     Type
  9533 ;;  EPNum           1    wreg     unsigned char 
  9534 ;;  direction       1    0[COMMON] unsigned char 
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;  EPNum           1    5[COMMON] unsigned char 
  9537 ;;  handle          1    6[COMMON] PTR volatile struct __BD
  9538 ;;		 -> BDT(32), 
  9539 ;; Return value:  Size  Location     Type
  9540 ;;                  1    wreg      void 
  9541 ;; Registers used:
  9542 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9543 ;; Tracked objects:
  9544 ;;		On entry : 0/0
  9545 ;;		On exit  : 0/0
  9546 ;;		Unchanged: 0/0
  9547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9548 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9549 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9550 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9551 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9552 ;;Total ram usage:        7 bytes
  9553 ;; Hardware stack levels used:    1
  9554 ;; This function calls:
  9555 ;;		Nothing
  9556 ;; This function is called by:
  9557 ;;		_USBEnableEndpoint
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           
  9562                           ;psect for function _USBConfigureEndpoint
  9563  0B3D                     _USBConfigureEndpoint:	
  9564                           
  9565                           ;incstack = 0
  9566                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  9567                           ;USBConfigureEndpoint@EPNum stored from wreg
  9568  0B3D  00F5               	movwf	USBConfigureEndpoint@EPNum
  9569                           
  9570                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  9571                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  9572  0B3E  3020               	movlw	32
  9573  0B3F  00F1               	movwf	??_USBConfigureEndpoint
  9574  0B40  0871               	movf	??_USBConfigureEndpoint,w
  9575  0B41  00F6               	movwf	USBConfigureEndpoint@handle
  9576                           
  9577                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  9578  0B42  0870               	movf	USBConfigureEndpoint@direction,w
  9579  0B43  00F1               	movwf	??_USBConfigureEndpoint
  9580  0B44  3001               	movlw	1
  9581  0B45                     u170_25:	
  9582  0B45  35F1               	lslf	??_USBConfigureEndpoint,f
  9583  0B46  0B89               	decfsz	9,f
  9584  0B47  2B45               	goto	u170_25
  9585  0B48  0875               	movf	USBConfigureEndpoint@EPNum,w
  9586  0B49  00F2               	movwf	??_USBConfigureEndpoint+1
  9587  0B4A  3001               	movlw	1
  9588  0B4B                     u171_25:	
  9589  0B4B  35F2               	lslf	??_USBConfigureEndpoint+1,f
  9590  0B4C  3EFF               	addlw	-1
  9591  0B4D  1D03               	skipz
  9592  0B4E  2B4B               	goto	u171_25
  9593  0B4F  3572               	lslf	??_USBConfigureEndpoint+1,w
  9594  0B50  0771               	addwf	??_USBConfigureEndpoint,w
  9595  0B51  00F3               	movwf	??_USBConfigureEndpoint+2
  9596  0B52  3001               	movlw	1
  9597  0B53                     u172_25:	
  9598  0B53  35F3               	lslf	??_USBConfigureEndpoint+2,f
  9599  0B54  3EFF               	addlw	-1
  9600  0B55  1D03               	skipz
  9601  0B56  2B53               	goto	u172_25
  9602  0B57  3573               	lslf	??_USBConfigureEndpoint+2,w
  9603  0B58  00F4               	movwf	??_USBConfigureEndpoint+3
  9604  0B59  0874               	movf	??_USBConfigureEndpoint+3,w
  9605  0B5A  07F6               	addwf	USBConfigureEndpoint@handle,f
  9606                           
  9607                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  9608  0B5B  0876               	movf	USBConfigureEndpoint@handle,w
  9609  0B5C  0086               	movwf	6
  9610  0B5D  0187               	clrf	7
  9611  0B5E  1381               	bcf	1,7
  9612                           
  9613                           ;usb_device.c: 1557: if(direction == 0)
  9614  0B5F  0870               	movf	USBConfigureEndpoint@direction,w
  9615  0B60  1D03               	btfss	3,2
  9616  0B61  2B6C               	goto	i1l2678
  9617                           
  9618                           ;usb_device.c: 1558: {
  9619                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  9620  0B62  3575               	lslf	USBConfigureEndpoint@EPNum,w
  9621  0B63  3EA4               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9622  0B64  0086               	movwf	6
  9623  0B65  3001               	movlw	1	; select bank3/4
  9624  0B66  0087               	movwf	7
  9625  0B67  0876               	movf	USBConfigureEndpoint@handle,w
  9626  0B68  3FC0               	movwi [0]fsr1
  9627  0B69  3000               	movlw	0
  9628  0B6A  3FC1               	movwi [1]fsr1
  9629                           
  9630                           ;usb_device.c: 1560: }
  9631  0B6B  2B74               	goto	i1l2680
  9632  0B6C                     i1l2678:	
  9633                           
  9634                           ;usb_device.c: 1561: else
  9635                           ;usb_device.c: 1562: {
  9636                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  9637  0B6C  3575               	lslf	USBConfigureEndpoint@EPNum,w
  9638  0B6D  3E66               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  9639  0B6E  0086               	movwf	6
  9640  0B6F  0187               	clrf	7
  9641  0B70  0876               	movf	USBConfigureEndpoint@handle,w
  9642  0B71  3FC0               	movwi [0]fsr1
  9643  0B72  3000               	movlw	0
  9644  0B73  3FC1               	movwi [1]fsr1
  9645  0B74                     i1l2680:	
  9646                           
  9647                           ;usb_device.c: 1564: }
  9648                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  9649  0B74  0876               	movf	USBConfigureEndpoint@handle,w
  9650  0B75  0086               	movwf	6
  9651  0B76  0187               	clrf	7
  9652  0B77  1301               	bcf	1,6
  9653                           
  9654                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  9655  0B78  0876               	movf	USBConfigureEndpoint@handle,w
  9656  0B79  3E04               	addlw	4
  9657  0B7A  0086               	movwf	6
  9658  0B7B  0187               	clrf	7
  9659  0B7C  1701               	bsf	1,6
  9660  0B7D  0008               	return
  9661  0B7E                     __end_of_USBConfigureEndpoint:	
  9662                           
  9663                           	psect	text44
  9664  0B06                     __ptext44:	
  9665 ;; *************** function _USBCtrlTrfOutHandler *****************
  9666 ;; Defined at:
  9667 ;;		line 2538 in file "../../../../../../framework/usb/src/usb_device.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;		None
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;		None
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  1    wreg      void 
  9674 ;; Registers used:
  9675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;Total ram usage:        2 bytes
  9686 ;; Hardware stack levels used:    1
  9687 ;; Hardware stack levels required when called:    2
  9688 ;; This function calls:
  9689 ;;		_USBCtrlTrfRxService
  9690 ;; This function is called by:
  9691 ;;		_USBCtrlEPService
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           
  9696                           ;psect for function _USBCtrlTrfOutHandler
  9697  0B06                     _USBCtrlTrfOutHandler:	
  9698                           
  9699                           ;usb_device.c: 2540: if(controlTransferState == 2)
  9700                           
  9701                           ;incstack = 0
  9702                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9703  0B06  3002               	movlw	2
  9704  0B07  0020               	movlb	0	; select bank0
  9705  0B08  066D               	xorwf	_controlTransferState,w	;volatile
  9706  0B09  1D03               	btfss	3,2
  9707  0B0A  2B0E               	goto	i1l3376
  9708                           
  9709                           ;usb_device.c: 2541: {
  9710                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  9711  0B0B  3184  245F         	fcall	_USBCtrlTrfRxService
  9712                           
  9713                           ;usb_device.c: 2543: }
  9714  0B0D  0008               	return
  9715  0B0E                     i1l3376:	
  9716                           
  9717                           ;usb_device.c: 2544: else
  9718                           ;usb_device.c: 2545: {
  9719                           ;usb_device.c: 2548: controlTransferState = 0;
  9720  0B0E  0020               	movlb	0	; select bank0
  9721  0B0F  01ED               	clrf	_controlTransferState	;volatile
  9722                           
  9723                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  9724  0B10  0023               	movlb	3	; select bank3
  9725  0B11  0832               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  9726  0B12  1D03               	btfss	3,2
  9727  0B13  2B3A               	goto	i1l3388
  9728                           
  9729                           ;usb_device.c: 2556: {
  9730                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  9731  0B14  0020               	movlb	0	; select bank0
  9732  0B15  086A               	movf	_pBDTEntryEP0OutNext,w
  9733  0B16  3E01               	addlw	1
  9734  0B17  00F6               	movwf	??_USBCtrlTrfOutHandler
  9735  0B18  3000               	movlw	0
  9736  0B19  3D6B               	addwfc	_pBDTEntryEP0OutNext+1,w
  9737  0B1A  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  9738  0B1B  0876               	movf	??_USBCtrlTrfOutHandler,w
  9739  0B1C  0086               	movwf	6
  9740  0B1D  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  9741  0B1E  0087               	movwf	7
  9742  0B1F  3008               	movlw	8
  9743  0B20  0081               	movwf	1
  9744                           
  9745                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9746  0B21  3040               	movlw	64
  9747  0B22  00F6               	movwf	??_USBCtrlTrfOutHandler
  9748  0B23  3000               	movlw	0
  9749  0B24  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  9750  0B25  086A               	movf	_pBDTEntryEP0OutNext,w
  9751  0B26  0086               	movwf	6
  9752  0B27  086B               	movf	_pBDTEntryEP0OutNext+1,w
  9753  0B28  0087               	movwf	7
  9754  0B29  3142               	addfsr 1,2
  9755  0B2A  0876               	movf	??_USBCtrlTrfOutHandler,w
  9756  0B2B  3FC0               	movwi [0]fsr1
  9757  0B2C  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  9758  0B2D  3FC1               	movwi [1]fsr1
  9759                           
  9760                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9761  0B2E  086A               	movf	_pBDTEntryEP0OutNext,w
  9762  0B2F  0086               	movwf	6
  9763  0B30  086B               	movf	_pBDTEntryEP0OutNext+1,w
  9764  0B31  0087               	movwf	7
  9765  0B32  300C               	movlw	12
  9766  0B33  0081               	movwf	1
  9767                           
  9768                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9769  0B34  086A               	movf	_pBDTEntryEP0OutNext,w
  9770  0B35  0086               	movwf	6
  9771  0B36  086B               	movf	_pBDTEntryEP0OutNext+1,w
  9772  0B37  0087               	movwf	7
  9773  0B38  1781               	bsf	1,7
  9774                           
  9775                           ;usb_device.c: 2561: }
  9776  0B39  0008               	return
  9777  0B3A                     i1l3388:	
  9778                           
  9779                           ;usb_device.c: 2562: else
  9780                           ;usb_device.c: 2563: {
  9781                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  9782  0B3A  0023               	movlb	3	; select bank3
  9783  0B3B  01B2               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9784  0B3C  0008               	return
  9785  0B3D                     __end_of_USBCtrlTrfOutHandler:	
  9786                           
  9787                           	psect	text45
  9788  045F                     __ptext45:	
  9789 ;; *************** function _USBCtrlTrfRxService *****************
  9790 ;; Defined at:
  9791 ;;		line 1852 in file "../../../../../../framework/usb/src/usb_device.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;		None
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;  byteToRead      1    5[COMMON] unsigned char 
  9796 ;;  i               1    4[COMMON] unsigned char 
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  1    wreg      void 
  9799 ;; Registers used:
  9800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;Total ram usage:        4 bytes
  9811 ;; Hardware stack levels used:    1
  9812 ;; Hardware stack levels required when called:    1
  9813 ;; This function calls:
  9814 ;;		_USBCtrlEPAllowStatusStage
  9815 ;; This function is called by:
  9816 ;;		_USBCtrlTrfOutHandler
  9817 ;; This function uses a non-reentrant model
  9818 ;;
  9819                           
  9820                           
  9821                           ;psect for function _USBCtrlTrfRxService
  9822  045F                     _USBCtrlTrfRxService:	
  9823                           
  9824                           ;usb_device.c: 1854: uint8_t byteToRead;
  9825                           ;usb_device.c: 1855: uint8_t i;
  9826                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9827                           
  9828                           ;incstack = 0
  9829                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9830  045F  0020               	movlb	0	; select bank0
  9831  0460  086E               	movf	_pBDTEntryEP0OutCurrent,w
  9832  0461  0086               	movwf	6
  9833  0462  0187               	clrf	7
  9834  0463  3F41               	moviw [1]fsr1
  9835  0464  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  9836                           
  9837                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  9838  0465  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9839  0466  00F2               	movwf	??_USBCtrlTrfRxService
  9840  0467  01F3               	clrf	??_USBCtrlTrfRxService+1
  9841  0468  0873               	movf	??_USBCtrlTrfRxService+1,w
  9842  0469  0022               	movlb	2	; select bank2
  9843  046A  0264               	subwf	((_outPipes+1)^(0+256)+3),w	;volatile
  9844  046B  1D03               	skipz
  9845  046C  2C6F               	goto	u243_25
  9846  046D  0872               	movf	??_USBCtrlTrfRxService,w
  9847  046E  0263               	subwf	(_outPipes^(0+256)+3),w	;volatile
  9848  046F                     u243_25:	
  9849  046F  1803               	skipnc
  9850  0470  2C75               	goto	i1l368
  9851                           
  9852                           ;usb_device.c: 1866: {
  9853                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  9854  0471  0863               	movf	(_outPipes^(0+256)+3),w	;volatile
  9855  0472  00F2               	movwf	??_USBCtrlTrfRxService
  9856  0473  0872               	movf	??_USBCtrlTrfRxService,w
  9857  0474  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  9858  0475                     i1l368:	
  9859                           
  9860                           ;usb_device.c: 1868: }
  9861                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  9862  0475  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9863  0476  00F2               	movwf	??_USBCtrlTrfRxService
  9864  0477  01F3               	clrf	??_USBCtrlTrfRxService+1
  9865  0478  0872               	movf	??_USBCtrlTrfRxService,w
  9866  0479  02E3               	subwf	(_outPipes^(0+256)+3),f	;volatile
  9867  047A  0873               	movf	??_USBCtrlTrfRxService+1,w
  9868  047B  3BE4               	subwfb	((_outPipes+1)^(0+256)+3),f	;volatile
  9869                           
  9870                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  9871  047C  01F4               	clrf	USBCtrlTrfRxService@i
  9872  047D                     i1l3276:	
  9873  047D  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9874  047E  0274               	subwf	USBCtrlTrfRxService@i,w
  9875  047F  1803               	btfsc	3,0
  9876  0480  2C95               	goto	i1l3278
  9877                           
  9878                           ;usb_device.c: 1875: {
  9879                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9880  0481  0874               	movf	USBCtrlTrfRxService@i,w
  9881  0482  3E48               	addlw	72
  9882  0483  0086               	movwf	6
  9883  0484  0187               	clrf	7
  9884  0485  0801               	movf	1,w
  9885  0486  00F2               	movwf	??_USBCtrlTrfRxService
  9886  0487  0860               	movf	_outPipes^(0+256),w	;volatile
  9887  0488  0086               	movwf	6
  9888  0489  0187               	clrf	7
  9889  048A  0872               	movf	??_USBCtrlTrfRxService,w
  9890  048B  0081               	movwf	1
  9891  048C  3001               	movlw	1
  9892  048D  00F2               	movwf	??_USBCtrlTrfRxService
  9893  048E  0872               	movf	??_USBCtrlTrfRxService,w
  9894  048F  07E0               	addwf	_outPipes^(0+256),f	;volatile
  9895  0490  3001               	movlw	1
  9896  0491  00F2               	movwf	??_USBCtrlTrfRxService
  9897  0492  0872               	movf	??_USBCtrlTrfRxService,w
  9898  0493  07F4               	addwf	USBCtrlTrfRxService@i,f
  9899  0494  2C7D               	goto	i1l3276
  9900  0495                     i1l3278:	
  9901                           
  9902                           ;usb_device.c: 1877: }
  9903                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  9904  0495  0863               	movf	(_outPipes^(0+256)+3),w	;volatile
  9905  0496  0464               	iorwf	((_outPipes+1)^(0+256)+3),w	;volatile
  9906  0497  1903               	btfsc	3,2
  9907  0498  2CD0               	goto	i1l3290
  9908                           
  9909                           ;usb_device.c: 1882: {
  9910                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  9911  0499  0020               	movlb	0	; select bank0
  9912  049A  086A               	movf	_pBDTEntryEP0OutNext,w
  9913  049B  3E01               	addlw	1
  9914  049C  00F2               	movwf	??_USBCtrlTrfRxService
  9915  049D  3000               	movlw	0
  9916  049E  3D6B               	addwfc	_pBDTEntryEP0OutNext+1,w
  9917  049F  00F3               	movwf	??_USBCtrlTrfRxService+1
  9918  04A0  0872               	movf	??_USBCtrlTrfRxService,w
  9919  04A1  0086               	movwf	6
  9920  04A2  0873               	movf	??_USBCtrlTrfRxService+1,w
  9921  04A3  0087               	movwf	7
  9922  04A4  3008               	movlw	8
  9923  04A5  0081               	movwf	1
  9924                           
  9925                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  9926  04A6  3048               	movlw	72
  9927  04A7  00F2               	movwf	??_USBCtrlTrfRxService
  9928  04A8  3000               	movlw	0
  9929  04A9  00F3               	movwf	??_USBCtrlTrfRxService+1
  9930  04AA  086A               	movf	_pBDTEntryEP0OutNext,w
  9931  04AB  0086               	movwf	6
  9932  04AC  086B               	movf	_pBDTEntryEP0OutNext+1,w
  9933  04AD  0087               	movwf	7
  9934  04AE  3142               	addfsr 1,2
  9935  04AF  0872               	movf	??_USBCtrlTrfRxService,w
  9936  04B0  3FC0               	movwi [0]fsr1
  9937  04B1  0873               	movf	??_USBCtrlTrfRxService+1,w
  9938  04B2  3FC1               	movwi [1]fsr1
  9939                           
  9940                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9941  04B3  086E               	movf	_pBDTEntryEP0OutCurrent,w
  9942  04B4  0086               	movwf	6
  9943  04B5  0187               	clrf	7
  9944  04B6  1B01               	btfsc	1,6
  9945  04B7  2CC4               	goto	i1l3288
  9946                           
  9947                           ;usb_device.c: 1886: {
  9948                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9949  04B8  086A               	movf	_pBDTEntryEP0OutNext,w
  9950  04B9  0086               	movwf	6
  9951  04BA  086B               	movf	_pBDTEntryEP0OutNext+1,w
  9952  04BB  0087               	movwf	7
  9953  04BC  3048               	movlw	72
  9954  04BD  0081               	movwf	1
  9955                           
  9956                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9957  04BE  086A               	movf	_pBDTEntryEP0OutNext,w
  9958  04BF  0086               	movwf	6
  9959  04C0  086B               	movf	_pBDTEntryEP0OutNext+1,w
  9960  04C1  0087               	movwf	7
  9961  04C2  1781               	bsf	1,7
  9962                           
  9963                           ;usb_device.c: 1889: }
  9964  04C3  0008               	return
  9965  04C4                     i1l3288:	
  9966                           
  9967                           ;usb_device.c: 1890: else
  9968                           ;usb_device.c: 1891: {
  9969                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9970  04C4  086A               	movf	_pBDTEntryEP0OutNext,w
  9971  04C5  0086               	movwf	6
  9972  04C6  086B               	movf	_pBDTEntryEP0OutNext+1,w
  9973  04C7  0087               	movwf	7
  9974  04C8  3008               	movlw	8
  9975  04C9  0081               	movwf	1
  9976                           
  9977                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9978  04CA  086A               	movf	_pBDTEntryEP0OutNext,w
  9979  04CB  0086               	movwf	6
  9980  04CC  086B               	movf	_pBDTEntryEP0OutNext+1,w
  9981  04CD  0087               	movwf	7
  9982  04CE  1781               	bsf	1,7
  9983                           
  9984                           ;usb_device.c: 1894: }
  9985                           ;usb_device.c: 1895: }
  9986  04CF  0008               	return
  9987  04D0                     i1l3290:	
  9988                           
  9989                           ;usb_device.c: 1896: else
  9990                           ;usb_device.c: 1897: {
  9991                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  9992  04D0  0020               	movlb	0	; select bank0
  9993  04D1  086A               	movf	_pBDTEntryEP0OutNext,w
  9994  04D2  3E01               	addlw	1
  9995  04D3  00F2               	movwf	??_USBCtrlTrfRxService
  9996  04D4  3000               	movlw	0
  9997  04D5  3D6B               	addwfc	_pBDTEntryEP0OutNext+1,w
  9998  04D6  00F3               	movwf	??_USBCtrlTrfRxService+1
  9999  04D7  0872               	movf	??_USBCtrlTrfRxService,w
 10000  04D8  0086               	movwf	6
 10001  04D9  0873               	movf	??_USBCtrlTrfRxService+1,w
 10002  04DA  0087               	movwf	7
 10003  04DB  3008               	movlw	8
 10004  04DC  0081               	movwf	1
 10005                           
 10006                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10007  04DD  3040               	movlw	64
 10008  04DE  00F2               	movwf	??_USBCtrlTrfRxService
 10009  04DF  3000               	movlw	0
 10010  04E0  00F3               	movwf	??_USBCtrlTrfRxService+1
 10011  04E1  086A               	movf	_pBDTEntryEP0OutNext,w
 10012  04E2  0086               	movwf	6
 10013  04E3  086B               	movf	_pBDTEntryEP0OutNext+1,w
 10014  04E4  0087               	movwf	7
 10015  04E5  3142               	addfsr 1,2
 10016  04E6  0872               	movf	??_USBCtrlTrfRxService,w
 10017  04E7  3FC0               	movwi [0]fsr1
 10018  04E8  0873               	movf	??_USBCtrlTrfRxService+1,w
 10019  04E9  3FC1               	movwi [1]fsr1
 10020                           
 10021                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 10022  04EA  086A               	movf	_pBDTEntryEP0OutNext,w
 10023  04EB  0086               	movwf	6
 10024  04EC  086B               	movf	_pBDTEntryEP0OutNext+1,w
 10025  04ED  0087               	movwf	7
 10026  04EE  3004               	movlw	4
 10027  04EF  0081               	movwf	1
 10028                           
 10029                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10030  04F0  086A               	movf	_pBDTEntryEP0OutNext,w
 10031  04F1  0086               	movwf	6
 10032  04F2  086B               	movf	_pBDTEntryEP0OutNext+1,w
 10033  04F3  0087               	movwf	7
 10034  04F4  1781               	bsf	1,7
 10035                           
 10036                           ;usb_device.c: 1915: {
 10037                           ;usb_device.c: 1921: outPipes[0].pFunc();
 10038  04F5  0022               	movlb	2	; select bank2
 10039  04F6  0865               	movf	(low ((_outPipes| (0+256)+5)))^0,w	;volatile
 10040  04F7  0866               	movf	((low ((_outPipes| (0+256)+5))+1))^0,w	;volatile
 10041                           
 10042                           ;usb_device.c: 1926: }
 10043                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 10044  04F8  13E2               	bcf	(_outPipes^(0+256)+2),7	;volatile
 10045                           
 10046                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 10047  04F9  086C               	movf	_USBDeferStatusStagePacket^(0+256),w	;volatile
 10048  04FA  1D03               	btfss	3,2
 10049  04FB  0008               	return
 10050                           
 10051                           ;usb_device.c: 1942: {
 10052                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 10053  04FC  318E  261E         	fcall	_USBCtrlEPAllowStatusStage
 10054  04FE  0008               	return
 10055  04FF                     __end_of_USBCtrlTrfRxService:	
 10056                           
 10057                           	psect	text46
 10058  0E1E                     __ptext46:	
 10059 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 10060 ;; Defined at:
 10061 ;;		line 1416 in file "../../../../../../framework/usb/src/usb_device.c"
 10062 ;; Parameters:    Size  Location     Type
 10063 ;;		None
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;		None
 10066 ;; Return value:  Size  Location     Type
 10067 ;;                  1    wreg      void 
 10068 ;; Registers used:
 10069 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10070 ;; Tracked objects:
 10071 ;;		On entry : 0/0
 10072 ;;		On exit  : 0/0
 10073 ;;		Unchanged: 0/0
 10074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;Total ram usage:        2 bytes
 10080 ;; Hardware stack levels used:    1
 10081 ;; This function calls:
 10082 ;;		Nothing
 10083 ;; This function is called by:
 10084 ;;		_USBDeviceTasks
 10085 ;;		_USBCtrlEPServiceComplete
 10086 ;;		_USBCtrlTrfRxService
 10087 ;; This function uses a non-reentrant model
 10088 ;;
 10089                           
 10090                           
 10091                           ;psect for function _USBCtrlEPAllowStatusStage
 10092  0E1E                     _USBCtrlEPAllowStatusStage:	
 10093                           
 10094                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 10095                           
 10096                           ;incstack = 0
 10097                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 10098  0E1E  0023               	movlb	3	; select bank3
 10099  0E1F  0837               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
 10100  0E20  1D03               	btfss	3,2
 10101  0E21  0008               	return
 10102                           
 10103                           ;usb_device.c: 1424: {
 10104                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 10105  0E22  3001               	movlw	1
 10106  0E23  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 10107  0E24  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 10108  0E25  00B7               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 10109                           
 10110                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 10111  0E26  0838               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
 10112  0E27  1D03               	btfss	3,2
 10113  0E28  0008               	return
 10114                           
 10115                           ;usb_device.c: 1427: {
 10116                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 10117  0E29  3001               	movlw	1
 10118  0E2A  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 10119  0E2B  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 10120  0E2C  00B8               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 10121                           
 10122                           ;usb_device.c: 1432: if(controlTransferState == 2)
 10123  0E2D  3002               	movlw	2
 10124  0E2E  0020               	movlb	0	; select bank0
 10125  0E2F  066D               	xorwf	_controlTransferState,w	;volatile
 10126  0E30  1D03               	btfss	3,2
 10127  0E31  2E44               	goto	i1l2966
 10128                           
 10129                           ;usb_device.c: 1433: {
 10130                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 10131  0E32  0866               	movf	_pBDTEntryIn,w
 10132  0E33  0086               	movwf	6
 10133  0E34  0867               	movf	_pBDTEntryIn+1,w
 10134  0E35  0087               	movwf	7
 10135  0E36  3141               	addfsr 1,1
 10136  0E37  0181               	clrf	1
 10137                           
 10138                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10139  0E38  0866               	movf	_pBDTEntryIn,w
 10140  0E39  0086               	movwf	6
 10141  0E3A  0867               	movf	_pBDTEntryIn+1,w
 10142  0E3B  0087               	movwf	7
 10143  0E3C  3048               	movlw	72
 10144  0E3D  0081               	movwf	1
 10145                           
 10146                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10147  0E3E  0866               	movf	_pBDTEntryIn,w
 10148  0E3F  0086               	movwf	6
 10149  0E40  0867               	movf	_pBDTEntryIn+1,w
 10150  0E41  0087               	movwf	7
 10151  0E42  1781               	bsf	1,7
 10152                           
 10153                           ;usb_device.c: 1437: }
 10154  0E43  0008               	return
 10155  0E44                     i1l2966:	
 10156                           
 10157                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 10158  0E44  036D               	decf	_controlTransferState,w	;volatile
 10159  0E45  1D03               	btfss	3,2
 10160  0E46  0008               	return
 10161                           
 10162                           ;usb_device.c: 1439: {
 10163                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 10164  0E47  0023               	movlb	3	; select bank3
 10165  0E48  01B2               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 10166                           
 10167                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 10168  0E49  3008               	movlw	8
 10169  0E4A  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 10170  0E4B  0020               	movlb	0	; select bank0
 10171  0E4C  0A6E               	incf	_pBDTEntryEP0OutCurrent,w
 10172  0E4D  0086               	movwf	6
 10173  0E4E  0187               	clrf	7
 10174  0E4F  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 10175  0E50  0081               	movwf	1
 10176                           
 10177                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10178  0E51  3040               	movlw	64
 10179  0E52  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 10180  0E53  3000               	movlw	0
 10181  0E54  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
 10182  0E55  086E               	movf	_pBDTEntryEP0OutCurrent,w
 10183  0E56  3E02               	addlw	2
 10184  0E57  0086               	movwf	6
 10185  0E58  0187               	clrf	7
 10186  0E59  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 10187  0E5A  3FC0               	movwi [0]fsr1
 10188  0E5B  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
 10189  0E5C  3FC1               	movwi [1]fsr1
 10190                           
 10191                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 10192  0E5D  3004               	movlw	4
 10193  0E5E  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 10194  0E5F  086E               	movf	_pBDTEntryEP0OutCurrent,w
 10195  0E60  0086               	movwf	6
 10196  0E61  0187               	clrf	7
 10197  0E62  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 10198  0E63  0081               	movwf	1
 10199                           
 10200                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10201  0E64  086E               	movf	_pBDTEntryEP0OutCurrent,w
 10202  0E65  0086               	movwf	6
 10203  0E66  0187               	clrf	7
 10204  0E67  1781               	bsf	1,7
 10205                           
 10206                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 10207  0E68  3001               	movlw	1
 10208  0E69  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 10209  0E6A  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 10210  0E6B  0023               	movlb	3	; select bank3
 10211  0E6C  00B2               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 10212                           
 10213                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 10214  0E6D  0020               	movlb	0	; select bank0
 10215  0E6E  086A               	movf	_pBDTEntryEP0OutNext,w
 10216  0E6F  3E01               	addlw	1
 10217  0E70  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 10218  0E71  3000               	movlw	0
 10219  0E72  3D6B               	addwfc	_pBDTEntryEP0OutNext+1,w
 10220  0E73  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
 10221  0E74  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 10222  0E75  0086               	movwf	6
 10223  0E76  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
 10224  0E77  0087               	movwf	7
 10225  0E78  3008               	movlw	8
 10226  0E79  0081               	movwf	1
 10227                           
 10228                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10229  0E7A  3040               	movlw	64
 10230  0E7B  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 10231  0E7C  3000               	movlw	0
 10232  0E7D  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
 10233  0E7E  086A               	movf	_pBDTEntryEP0OutNext,w
 10234  0E7F  0086               	movwf	6
 10235  0E80  086B               	movf	_pBDTEntryEP0OutNext+1,w
 10236  0E81  0087               	movwf	7
 10237  0E82  3142               	addfsr 1,2
 10238  0E83  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 10239  0E84  3FC0               	movwi [0]fsr1
 10240  0E85  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
 10241  0E86  3FC1               	movwi [1]fsr1
 10242                           
 10243                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 10244  0E87  086A               	movf	_pBDTEntryEP0OutNext,w
 10245  0E88  0086               	movwf	6
 10246  0E89  086B               	movf	_pBDTEntryEP0OutNext+1,w
 10247  0E8A  0087               	movwf	7
 10248  0E8B  3080               	movlw	128
 10249  0E8C  0081               	movwf	1
 10250  0E8D  0008               	return
 10251  0E8E                     __end_of_USBCtrlEPAllowStatusStage:	
 10252                           
 10253                           	psect	text47
 10254  0DB2                     __ptext47:	
 10255 ;; *************** function _USBCtrlTrfInHandler *****************
 10256 ;; Defined at:
 10257 ;;		line 2592 in file "../../../../../../framework/usb/src/usb_device.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;		None
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;  lastDTS         1    5[COMMON] unsigned char 
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  1    wreg      void 
 10264 ;; Registers used:
 10265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10273 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10274 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;Total ram usage:        3 bytes
 10276 ;; Hardware stack levels used:    1
 10277 ;; Hardware stack levels required when called:    1
 10278 ;; This function calls:
 10279 ;;		_USBCtrlTrfTxService
 10280 ;; This function is called by:
 10281 ;;		_USBCtrlEPService
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285                           
 10286                           ;psect for function _USBCtrlTrfInHandler
 10287  0DB2                     _USBCtrlTrfInHandler:	
 10288                           
 10289                           ;usb_device.c: 2594: uint8_t lastDTS;
 10290                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 10291                           
 10292                           ;incstack = 0
 10293                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10294  0DB2  0020               	movlb	0	; select bank0
 10295  0DB3  0866               	movf	_pBDTEntryIn,w
 10296  0DB4  0086               	movwf	6
 10297  0DB5  0867               	movf	_pBDTEntryIn+1,w
 10298  0DB6  0087               	movwf	7
 10299  0DB7  3000               	movlw	0
 10300  0DB8  1B01               	btfsc	1,6
 10301  0DB9  3001               	movlw	1
 10302  0DBA  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
 10303                           
 10304                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10305  0DBB  3004               	movlw	4
 10306  0DBC  0666               	xorwf	_pBDTEntryIn,w
 10307  0DBD  00E6               	movwf	_pBDTEntryIn
 10308  0DBE  3000               	movlw	0
 10309  0DBF  0667               	xorwf	_pBDTEntryIn+1,w
 10310  0DC0  00E7               	movwf	_pBDTEntryIn+1
 10311                           
 10312                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 10313  0DC1  3008               	movlw	8
 10314  0DC2  066C               	xorwf	_USBDeviceState,w	;volatile
 10315  0DC3  1D03               	btfss	3,2
 10316  0DC4  2DD3               	goto	i1l3404
 10317                           
 10318                           ;usb_device.c: 2605: {
 10319                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 10320  0DC5  0842               	movf	66,w	;volatile
 10321  0DC6  397F               	andlw	127
 10322  0DC7  003D               	movlb	29	; select bank29
 10323  0DC8  0096               	movwf	22	;volatile
 10324                           
 10325                           ;usb_device.c: 2607: if(UADDR != 0u)
 10326  0DC9  0816               	movf	22,w	;volatile
 10327  0DCA  1903               	btfsc	3,2
 10328  0DCB  2DCE               	goto	i1l3402
 10329                           
 10330                           ;usb_device.c: 2608: {
 10331                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 10332  0DCC  3010               	movlw	16
 10333  0DCD  2DCF               	goto	L13
 10334  0DCE                     i1l3402:	
 10335                           ;usb_device.c: 2610: }
 10336                           
 10337                           
 10338                           ;usb_device.c: 2611: else
 10339                           ;usb_device.c: 2612: {
 10340                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 10341  0DCE  3004               	movlw	4
 10342  0DCF                     L13:	
 10343  0DCF  00F3               	movwf	??_USBCtrlTrfInHandler
 10344  0DD0  0873               	movf	??_USBCtrlTrfInHandler,w
 10345  0DD1  0020               	movlb	0	; select bank0
 10346  0DD2  00EC               	movwf	_USBDeviceState	;volatile
 10347  0DD3                     i1l3404:	
 10348                           
 10349                           ;usb_device.c: 2614: }
 10350                           ;usb_device.c: 2615: }
 10351                           ;usb_device.c: 2618: if(controlTransferState == 1)
 10352  0DD3  036D               	decf	_controlTransferState,w	;volatile
 10353  0DD4  1D03               	btfss	3,2
 10354  0DD5  2E15               	goto	i1l453
 10355                           
 10356                           ;usb_device.c: 2619: {
 10357                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
 10358  0DD6  3048               	movlw	72
 10359  0DD7  00F3               	movwf	??_USBCtrlTrfInHandler
 10360  0DD8  3000               	movlw	0
 10361  0DD9  00F4               	movwf	??_USBCtrlTrfInHandler+1
 10362  0DDA  0866               	movf	_pBDTEntryIn,w
 10363  0DDB  0086               	movwf	6
 10364  0DDC  0867               	movf	_pBDTEntryIn+1,w
 10365  0DDD  0087               	movwf	7
 10366  0DDE  3142               	addfsr 1,2
 10367  0DDF  0873               	movf	??_USBCtrlTrfInHandler,w
 10368  0DE0  3FC0               	movwi [0]fsr1
 10369  0DE1  0874               	movf	??_USBCtrlTrfInHandler+1,w
 10370  0DE2  3FC1               	movwi [1]fsr1
 10371                           
 10372                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 10373  0DE3  318E  268E  318D   	fcall	_USBCtrlTrfTxService
 10374                           
 10375                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 10376  0DE6  3002               	movlw	2
 10377  0DE7  0022               	movlb	2	; select bank2
 10378  0DE8  066F               	xorwf	_shortPacketStatus^(0+256),w	;volatile
 10379  0DE9  1D03               	btfss	3,2
 10380  0DEA  2DF8               	goto	i1l3414
 10381                           
 10382                           ;usb_device.c: 2628: {
 10383                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 10384  0DEB  0020               	movlb	0	; select bank0
 10385  0DEC  0866               	movf	_pBDTEntryIn,w
 10386  0DED  0086               	movwf	6
 10387  0DEE  0867               	movf	_pBDTEntryIn+1,w
 10388  0DEF  0087               	movwf	7
 10389  0DF0  3004               	movlw	4
 10390  0DF1  0081               	movwf	1
 10391                           
 10392                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10393  0DF2  0866               	movf	_pBDTEntryIn,w
 10394  0DF3  0086               	movwf	6
 10395  0DF4  0867               	movf	_pBDTEntryIn+1,w
 10396  0DF5  0087               	movwf	7
 10397  0DF6  1781               	bsf	1,7
 10398                           
 10399                           ;usb_device.c: 2633: }
 10400  0DF7  0008               	return
 10401  0DF8                     i1l3414:	
 10402                           
 10403                           ;usb_device.c: 2634: else
 10404                           ;usb_device.c: 2635: {
 10405                           ;usb_device.c: 2636: if(lastDTS == 0)
 10406  0DF8  0875               	movf	USBCtrlTrfInHandler@lastDTS,w
 10407  0DF9  1D03               	btfss	3,2
 10408  0DFA  2E08               	goto	i1l3418
 10409                           
 10410                           ;usb_device.c: 2637: {
 10411                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10412  0DFB  0020               	movlb	0	; select bank0
 10413  0DFC  0866               	movf	_pBDTEntryIn,w
 10414  0DFD  0086               	movwf	6
 10415  0DFE  0867               	movf	_pBDTEntryIn+1,w
 10416  0DFF  0087               	movwf	7
 10417  0E00  3048               	movlw	72
 10418  0E01  0081               	movwf	1
 10419                           
 10420                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10421  0E02  0866               	movf	_pBDTEntryIn,w
 10422  0E03  0086               	movwf	6
 10423  0E04  0867               	movf	_pBDTEntryIn+1,w
 10424  0E05  0087               	movwf	7
 10425  0E06  1781               	bsf	1,7
 10426                           
 10427                           ;usb_device.c: 2640: }
 10428  0E07  0008               	return
 10429  0E08                     i1l3418:	
 10430                           
 10431                           ;usb_device.c: 2641: else
 10432                           ;usb_device.c: 2642: {
 10433                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 10434  0E08  0020               	movlb	0	; select bank0
 10435  0E09  0866               	movf	_pBDTEntryIn,w
 10436  0E0A  0086               	movwf	6
 10437  0E0B  0867               	movf	_pBDTEntryIn+1,w
 10438  0E0C  0087               	movwf	7
 10439  0E0D  3008               	movlw	8
 10440  0E0E  0081               	movwf	1
 10441                           
 10442                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10443  0E0F  0866               	movf	_pBDTEntryIn,w
 10444  0E10  0086               	movwf	6
 10445  0E11  0867               	movf	_pBDTEntryIn+1,w
 10446  0E12  0087               	movwf	7
 10447  0E13  1781               	bsf	1,7
 10448                           
 10449                           ;usb_device.c: 2645: }
 10450                           ;usb_device.c: 2646: }
 10451                           ;usb_device.c: 2647: }
 10452  0E14  0008               	return
 10453  0E15                     i1l453:	
 10454                           
 10455                           ;usb_device.c: 2648: else
 10456                           ;usb_device.c: 2649: {
 10457                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 10458  0E15  0022               	movlb	2	; select bank2
 10459  0E16  1FE2               	btfss	(_outPipes^(0+256)+2),7	;volatile
 10460  0E17  2E1B               	goto	i1l3422
 10461                           
 10462                           ;usb_device.c: 2656: {
 10463                           ;usb_device.c: 2657: outPipes[0].pFunc();
 10464  0E18  0865               	movf	(low ((_outPipes| (0+256)+5)))^0,w	;volatile
 10465  0E19  0866               	movf	((low ((_outPipes| (0+256)+5))+1))^0,w	;volatile
 10466                           
 10467                           ;usb_device.c: 2658: }
 10468                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10469  0E1A  13E2               	bcf	(_outPipes^(0+256)+2),7	;volatile
 10470  0E1B                     i1l3422:	
 10471                           
 10472                           ;usb_device.c: 2660: }
 10473                           ;usb_device.c: 2662: controlTransferState = 0;
 10474  0E1B  0020               	movlb	0	; select bank0
 10475  0E1C  01ED               	clrf	_controlTransferState	;volatile
 10476  0E1D  0008               	return
 10477  0E1E                     __end_of_USBCtrlTrfInHandler:	
 10478                           
 10479                           	psect	text48
 10480  0E8E                     __ptext48:	
 10481 ;; *************** function _USBCtrlTrfTxService *****************
 10482 ;; Defined at:
 10483 ;;		line 1771 in file "../../../../../../framework/usb/src/usb_device.c"
 10484 ;; Parameters:    Size  Location     Type
 10485 ;;		None
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;  byteToSend      1    2[COMMON] unsigned char 
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  1    wreg      void 
 10490 ;; Registers used:
 10491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10500 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10501 ;;Total ram usage:        3 bytes
 10502 ;; Hardware stack levels used:    1
 10503 ;; This function calls:
 10504 ;;		Nothing
 10505 ;; This function is called by:
 10506 ;;		_USBCtrlEPAllowDataStage
 10507 ;;		_USBCtrlTrfInHandler
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           
 10512                           ;psect for function _USBCtrlTrfTxService
 10513  0E8E                     _USBCtrlTrfTxService:	
 10514                           
 10515                           ;usb_device.c: 1773: uint8_t byteToSend;
 10516                           ;usb_device.c: 1777: byteToSend = 8;
 10517                           
 10518                           ;incstack = 0
 10519                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 10520  0E8E  3008               	movlw	8
 10521  0E8F  00F0               	movwf	??_USBCtrlTrfTxService
 10522  0E90  0870               	movf	??_USBCtrlTrfTxService,w
 10523  0E91  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10524                           
 10525                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10526  0E92  3000               	movlw	0
 10527  0E93  0022               	movlb	2	; select bank2
 10528  0E94  026B               	subwf	((_inPipes+1)^(0+256)+3),w	;volatile
 10529  0E95  3008               	movlw	8
 10530  0E96  1903               	skipnz
 10531  0E97  026A               	subwf	(_inPipes^(0+256)+3),w	;volatile
 10532  0E98  1803               	skipnc
 10533  0E99  2EAA               	goto	i1l353
 10534                           
 10535                           ;usb_device.c: 1779: {
 10536                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10537  0E9A  086A               	movf	(_inPipes^(0+256)+3),w	;volatile
 10538  0E9B  00F0               	movwf	??_USBCtrlTrfTxService
 10539  0E9C  0870               	movf	??_USBCtrlTrfTxService,w
 10540  0E9D  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10541                           
 10542                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10543  0E9E  086F               	movf	_shortPacketStatus^(0+256),w	;volatile
 10544  0E9F  1D03               	btfss	3,2
 10545  0EA0  2EA3               	goto	i1l2910
 10546                           
 10547                           ;usb_device.c: 1788: {
 10548                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10549  0EA1  3001               	movlw	1
 10550  0EA2  2EA7               	goto	L14
 10551  0EA3                     i1l2910:	
 10552                           ;usb_device.c: 1790: }
 10553                           
 10554                           
 10555                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10556  0EA3  036F               	decf	_shortPacketStatus^(0+256),w	;volatile
 10557  0EA4  1D03               	btfss	3,2
 10558  0EA5  2EAA               	goto	i1l353
 10559                           
 10560                           ;usb_device.c: 1792: {
 10561                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10562  0EA6  3002               	movlw	2
 10563  0EA7                     L14:	
 10564  0EA7  00F0               	movwf	??_USBCtrlTrfTxService
 10565  0EA8  0870               	movf	??_USBCtrlTrfTxService,w
 10566  0EA9  00EF               	movwf	_shortPacketStatus^(0+256)	;volatile
 10567  0EAA                     i1l353:	
 10568                           
 10569                           ;usb_device.c: 1794: }
 10570                           ;usb_device.c: 1795: }
 10571                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10572  0EAA  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10573  0EAB  00F0               	movwf	??_USBCtrlTrfTxService
 10574  0EAC  01F1               	clrf	??_USBCtrlTrfTxService+1
 10575  0EAD  0870               	movf	??_USBCtrlTrfTxService,w
 10576  0EAE  02EA               	subwf	(_inPipes^(0+256)+3),f	;volatile
 10577  0EAF  0871               	movf	??_USBCtrlTrfTxService+1,w
 10578  0EB0  3BEB               	subwfb	((_inPipes+1)^(0+256)+3),f	;volatile
 10579                           
 10580                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10581  0EB1  0020               	movlb	0	; select bank0
 10582  0EB2  0866               	movf	_pBDTEntryIn,w
 10583  0EB3  3E01               	addlw	1
 10584  0EB4  00F0               	movwf	??_USBCtrlTrfTxService
 10585  0EB5  3000               	movlw	0
 10586  0EB6  3D67               	addwfc	_pBDTEntryIn+1,w
 10587  0EB7  00F1               	movwf	??_USBCtrlTrfTxService+1
 10588  0EB8  0870               	movf	??_USBCtrlTrfTxService,w
 10589  0EB9  0086               	movwf	6
 10590  0EBA  0871               	movf	??_USBCtrlTrfTxService+1,w
 10591  0EBB  0087               	movwf	7
 10592  0EBC  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10593  0EBD  0081               	movwf	1
 10594                           
 10595                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10596  0EBE  3048               	movlw	72
 10597  0EBF  00F0               	movwf	??_USBCtrlTrfTxService
 10598  0EC0  0870               	movf	??_USBCtrlTrfTxService,w
 10599  0EC1  0023               	movlb	3	; select bank3
 10600  0EC2  00BA               	movwf	_pDst^(0+384)
 10601                           
 10602                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10603  0EC3  0022               	movlb	2	; select bank2
 10604  0EC4  1C69               	btfss	(_inPipes^(0+256)+2),0	;volatile
 10605  0EC5  2EE0               	goto	i1l2930
 10606  0EC6  2EFD               	goto	i1l2940
 10607  0EC7                     i1l2922:	
 10608                           ;usb_device.c: 1810: {
 10609                           ;usb_device.c: 1811: while(byteToSend)
 10610                           
 10611                           
 10612                           ;usb_device.c: 1812: {
 10613                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10614  0EC7  0022               	movlb	2	; select bank2
 10615  0EC8  0867               	movf	_inPipes^(0+256),w	;volatile
 10616  0EC9  0084               	movwf	4
 10617  0ECA  0868               	movf	(_inPipes+1)^(0+256),w	;volatile
 10618  0ECB  0085               	movwf	5
 10619  0ECC  0800               	movf	0,w	;code access
 10620  0ECD  00F0               	movwf	??_USBCtrlTrfTxService
 10621  0ECE  0023               	movlb	3	; select bank3
 10622  0ECF  083A               	movf	_pDst^(0+384),w
 10623  0ED0  0086               	movwf	6
 10624  0ED1  0187               	clrf	7
 10625  0ED2  0870               	movf	??_USBCtrlTrfTxService,w
 10626  0ED3  0081               	movwf	1
 10627  0ED4  3001               	movlw	1
 10628  0ED5  0022               	movlb	2	; select bank2
 10629  0ED6  07E7               	addwf	_inPipes^(0+256),f	;volatile
 10630  0ED7  3000               	movlw	0
 10631  0ED8  3DE8               	addwfc	(_inPipes+1)^(0+256),f	;volatile
 10632  0ED9  3001               	movlw	1
 10633  0EDA  00F0               	movwf	??_USBCtrlTrfTxService
 10634  0EDB  0870               	movf	??_USBCtrlTrfTxService,w
 10635  0EDC  0023               	movlb	3	; select bank3
 10636  0EDD  07BA               	addwf	_pDst^(0+384),f
 10637                           
 10638                           ;usb_device.c: 1814: byteToSend--;
 10639  0EDE  3001               	movlw	1
 10640  0EDF  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 10641  0EE0                     i1l2930:	
 10642  0EE0  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10643  0EE1  1903               	btfsc	3,2
 10644  0EE2  0008               	return
 10645  0EE3  2EC7               	goto	i1l2922
 10646  0EE4                     i1l2932:	
 10647                           ;usb_device.c: 1817: else
 10648                           ;usb_device.c: 1818: {
 10649                           ;usb_device.c: 1819: while(byteToSend)
 10650                           
 10651                           ;usb_device.c: 1815: }
 10652                           ;usb_device.c: 1816: }
 10653                           
 10654                           
 10655                           ;usb_device.c: 1820: {
 10656                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10657  0EE4  0022               	movlb	2	; select bank2
 10658  0EE5  0867               	movf	_inPipes^(0+256),w	;volatile
 10659  0EE6  0084               	movwf	4
 10660  0EE7  0868               	movf	(_inPipes+1)^(0+256),w	;volatile
 10661  0EE8  0085               	movwf	5
 10662  0EE9  0800               	movf	0,w	;code access
 10663  0EEA  00F0               	movwf	??_USBCtrlTrfTxService
 10664  0EEB  0023               	movlb	3	; select bank3
 10665  0EEC  083A               	movf	_pDst^(0+384),w
 10666  0EED  0086               	movwf	6
 10667  0EEE  0187               	clrf	7
 10668  0EEF  0870               	movf	??_USBCtrlTrfTxService,w
 10669  0EF0  0081               	movwf	1
 10670  0EF1  3001               	movlw	1
 10671  0EF2  0022               	movlb	2	; select bank2
 10672  0EF3  07E7               	addwf	_inPipes^(0+256),f	;volatile
 10673  0EF4  3000               	movlw	0
 10674  0EF5  3DE8               	addwfc	(_inPipes+1)^(0+256),f	;volatile
 10675  0EF6  3001               	movlw	1
 10676  0EF7  00F0               	movwf	??_USBCtrlTrfTxService
 10677  0EF8  0870               	movf	??_USBCtrlTrfTxService,w
 10678  0EF9  0023               	movlb	3	; select bank3
 10679  0EFA  07BA               	addwf	_pDst^(0+384),f
 10680                           
 10681                           ;usb_device.c: 1822: byteToSend--;
 10682  0EFB  3001               	movlw	1
 10683  0EFC  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 10684  0EFD                     i1l2940:	
 10685  0EFD  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10686  0EFE  1903               	btfsc	3,2
 10687  0EFF  0008               	return
 10688  0F00  2EE4               	goto	i1l2932
 10689  0F01                     __end_of_USBCtrlTrfTxService:	
 10690  007E                     btemp	set	126	;btemp
 10691  007E                     int$flags	set	126
 10692  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    198
    Data        0
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            32     22      32
    BANK1            16     14      16
    BANK2            16      0      16
    BANK3            80      0      29
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK1[64]), CtrlTrfData(BANK0[8]), RAM(DATA[4096]), 
		 -> SetupPkt(BANK0[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(BANK0[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BANK0[32]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 41
		 -> configDescriptor1(CODE[41]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK1[64]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    S309$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S299$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S299$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S275$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S275$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S275$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S275$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->_APP_DeviceCustomHIDInitialize
    i1_SYSTEM_Initialize->i1_ADC_Enable
    i1_SYSTEM_Initialize->i1_ADC_SetConfiguration
    i1_SYSTEM_Initialize->i1_BUTTON_Enable
    i1_SYSTEM_Initialize->i1_LED_Enable
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    _main->_APP_DeviceCustomHIDTasks
    _SYSTEM_Initialize->_ADC_Enable
    _SYSTEM_Initialize->_ADC_SetConfiguration
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceCustomHIDTasks->_USBTransferOnePacket

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1906
           _APP_DeviceCustomHIDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        5     5      0     272
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0     110
                                              1 BANK1      1     1      0
                         _ADC_Enable
               _ADC_SetConfiguration
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_SetConfiguration                                 1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Enable                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             3     3      0    1524
                                             11 BANK1      3     3      0
                      _ADC_Read10bit
                   _BUTTON_IsPressed
                         _LED_Toggle
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                11     7      4    1366
                                              0 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (2) _LED_Toggle                                           2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read10bit                                        7     5      2      69
                                              0 BANK1      7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _SYS_InterruptHigh                                    1     1      0   29448
                                             21 BANK0      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       3     3      0   29448
                                             18 BANK0      3     3      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (5) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   1     1      0    3944
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           1     1      0    3944
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     3     3      0   17298
                                             15 BANK0      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               1     1      0   17069
                                             14 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   1     1      0   13033
                                             13 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  5     5      0    4628
                                              6 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (9) _memset                                               7     3      4     524
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              7     7      0    4415
                                              6 BANK0      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    3944
                                              0 BANK0      6     0      6
      _APP_DeviceCustomHIDInitialize
             _APP_LEDUpdateUSBStatus
                 _USBCheckHIDRequest
                i1_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (6) i1_SYSTEM_Initialize                                  1     1      0     110
                                              1 COMMON     1     1      0
                       i1_ADC_Enable
             i1_ADC_SetConfiguration
                    i1_BUTTON_Enable
                       i1_LED_Enable
 ---------------------------------------------------------------------------------
 (7) i1_LED_Enable                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_BUTTON_Enable                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_ADC_SetConfiguration                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_ADC_Enable                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCheckHIDRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (7) _LED_On                                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _LED_Off                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _APP_DeviceCustomHIDInitialize                        1     1      0    1098
                                             13 COMMON     1     1      0
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) i1_USBTransferOnePacket                              11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    6     5      1     644
                                              7 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 7     6      1     400
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  3     3      0     115
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _ADC_Read10bit
     _BUTTON_IsPressed
     _LED_Toggle
     _USBTransferOnePacket
   _SYSTEM_Initialize
     _ADC_Enable
     _ADC_SetConfiguration
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckHIDRequest
               i1_SYSTEM_Initialize
                 i1_ADC_Enable
                 i1_ADC_SetConfiguration
                 i1_BUTTON_Enable
                 i1_LED_Enable
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckHIDRequest
               i1_SYSTEM_Initialize
                 i1_ADC_Enable
                 i1_ADC_SetConfiguration
                 i1_BUTTON_Enable
                 i1_LED_Enable
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _USBCheckHIDRequest
             i1_SYSTEM_Initialize
               i1_ADC_Enable
               i1_ADC_SetConfiguration
               i1_BUTTON_Enable
               i1_LED_Enable
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _USBCheckHIDRequest
           i1_SYSTEM_Initialize
             i1_ADC_Enable
             i1_ADC_SetConfiguration
             i1_BUTTON_Enable
             i1_LED_Enable
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckHIDRequest
         i1_SYSTEM_Initialize
           i1_ADC_Enable
           i1_ADC_SetConfiguration
           i1_BUTTON_Enable
           i1_LED_Enable
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckHIDRequest
         i1_SYSTEM_Initialize
           i1_ADC_Enable
           i1_ADC_SetConfiguration
           i1_BUTTON_Enable
           i1_LED_Enable
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i1_USBTransferOnePacket
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _USBCheckHIDRequest
       i1_SYSTEM_Initialize
         i1_ADC_Enable
         i1_ADC_SetConfiguration
         i1_BUTTON_Enable
         i1_LED_Enable
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     16      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      E      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10      0      10       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      1D      11       36.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      6B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      6B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Jan 03 01:46:53 2017

                              _USB_SD_Ptr 0239                                         pc 0002  
                             __CFG_CP$OFF 0000                                        l16 08FD  
                                      l50 0C04                                        l70 093C  
                                      l64 092A                                        l66 092C  
                                      l67 092E                                        l68 0930  
                             ?_LED_Enable 0070                             _USBDeviceInit 02FF  
                      _USBCheckHIDRequest 0628                       __size_of_ADC_Enable 000E  
          __end_ofi1_ADC_SetConfiguration 08E8      USER_USB_CALLBACK_EVENT_HANDLER@event 0050  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0052                                       l102 0AD8  
                                     l110 090E                                       l111 0918  
                                     l104 0AEC                               ?_LED_Toggle 0070  
                                     l315 09FF               __end_of_USBStdGetDscHandler 0F80  
                                     l255 0344                                       l628 0923  
                                     l649 0AAF                                       _BDT 0020  
                                     _UIE 0E92                                       _UIR 0E90  
                  _APP_LEDUpdateUSBStatus 07B1                                _USBSuspend 0A0B  
                    USBStdSetCfgHandler@i 005A                      USBStdSetCfgHandler@p 0057  
             __end_ofi1_SYSTEM_Initialize 0A8C                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 0156  
                     ?_USBCheckHIDRequest 0070                              __CFG_FOSC$HS 0000  
                          _USBDeviceState 006C                             _BUTTON_Enable 08F3  
                                    S4190 0824                                      S4188 081A  
                   ??_USBCtrlTrfRxService 0072                  USBEnableEndpoint@options 0077  
                            __CFG_LVP$OFF 0000                           __end_of_LED_Off 0985  
              USBConfigureEndpoint@handle 0076                                      l3430 0947  
                                    l3426 0940                                      l3450 0BC2  
                                    l3436 0949                                      l3452 0BD2  
                                    l3438 0952                                      l3454 0BE3  
                                    l3470 0932                                      l3482 0ADD  
                                    l3458 0BF9                                      l3714 032B  
                                    l3706 031E                                      l3484 0AE2  
                                    l3726 0349                                      l3496 0912  
                                    l3904 0AA3                                      l3586 06CC  
                                    l3578 06BC                                      l3922 0523  
                                    l3754 038F                                      l3596 0713  
                                    l3932 0537                                      l3916 0513  
                                    l3748 036C                                      l3598 072B  
                                    l3918 0518                                      l3950 0580  
                                    l3936 0542                                      l3928 0534  
                                    l3698 030E                                      l3948 0574  
                                    l3892 0A04                                      l3896 0A8F  
                                    u2585 0AF6                                      i1l30 099D  
                                    u2855 032E                                      i1l40 0984  
                                    i1l24 0987                                      i1l16 08DC  
                                    i1l34 096E                                      i1l26 098A  
                                    i1l27 098D                                      i1l36 0971  
                                    i1l28 0990                                      i1l37 0974  
                                    i1l38 0977                                      i1l70 09B6  
                                    i1l64 09A0                                      i1l66 09A3  
                                    i1l67 09A6                                      i1l68 09A9  
                   ??_USBCtrlTrfTxService 0070                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                              __CFG_WRT$OFF 0000  
  USBStdFeatureReqHandler@current_ep_data 005A                                      _pDst 01BA  
                                    _main 0919                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                           _USBDeviceAttach 09EE  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    start 0010                             __CFG_IESO$OFF 0000  
                    ??_USBCheckHIDRequest 0070                __end_of_USBCheckStdRequest 0DB2  
                  ??_USBCtrlTrfOutHandler 0076                 ??_USBStdFeatureReqHandler 0056  
                            _USBOutHandle 01AC                  ??_USBStdGetStatusHandler 0070  
                          ?_USBDeviceInit 0070                             ?i1_ADC_Enable 0070  
                                   ?_main 0070                             __CFG_WDTE$OFF 0000  
       __size_of_USBCtrlEPServiceComplete 0092                    __end_of_USBDeviceTasks 0239  
               ?_USBCtrlEPServiceComplete 0070                                     i1l110 0900  
                                   i1l111 090A                                     i1l410 0C5E  
                                   i1l340 05DD                                     i1l501 0113  
                                   i1l405 0C52                                     i1l255 03F7  
                                   i1l408 0C95                                     i1l272 01B4  
                                   i1l353 0EAA                                     i1l409 0C5B  
                                   i1l266 0178                                     i1l276 01DE  
                                   i1l453 0E15                                     i1l277 0236  
                                   i1l278 01E7                                     i1l368 0475  
                                   i1l465 0DB1                                     i1l467 0D5A  
                                   i1l476 0D8C                                     i1l549 06AE  
                                   i1l649 0A8B                                     i1l589 0BBE  
                                   _UADDR 0E96                                     _USTAT 0E8F  
      __size_of_USBCtrlEPAllowStatusStage 0070                            __CFG_FCMEN$OFF 0000  
                          ?_BUTTON_Enable 0070           __end_of_USBCtrlEPAllowDataStage 0D52  
                                   _sd000 02FB                                     _sd001 0241  
                                   _sd002 0275            ?_USBIncrement1msInternalTimers 0070  
               __size_of_BUTTON_IsPressed 0017                       __size_of_LED_Enable 0016  
                                   status 0003                                     wtemp0 007E  
                     __size_of_LED_Toggle 0046              __size_of_USBStdSetCfgHandler 0081  
                          __CFG_MCLRE$OFF 0000                           __initialization 0012  
                            __end_of_main 0927                            ??i1_ADC_Enable 0070  
                          __CFG_LPBOR$OFF 0000                 __size_of_USBCtrlEPService 0054  
                                  ??_main 00EE                           ?_USBDeviceTasks 0070  
                  __size_of_ADC_Read10bit 0031                               ?_USBSuspend 0070  
                               ??_LED_Off 0070                       __CFG_USBLSCLK$48MHz 0000  
                         i1_USBDeviceInit 03B4                   __end_of_USBDeviceAttach 0A0B  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADCON2 009F                                    i1S4200 0838  
                                  i1S4202 0842                                    i1S4192 0800  
                                  i1S4198 082E                                    _ADRESH 009C  
                                  _ADRESL 009B                    SYSTEM_Initialize@state 00E1  
                            ??_ADC_Enable 00E0                             ?i1_LED_Enable 0070  
                                  i1l3002 0D36                                    i1l3200 0138  
                                  i1l3104 0C6E                                    i1l3202 0141  
                                  i1l3114 0C89                                    i1l3042 0772  
                                  i1l3026 074B                                    i1l3018 073B  
                                  i1l3132 0046                                    i1l3036 075E  
                                  i1l3220 05AC                                    i1l3134 0048  
                                  i1l3070 0F16                                    i1l3310 0D62  
                                  i1l3160 00A9                                    i1l3080 0F4C  
                                  i1l3312 0D65                                    i1l3216 05A8  
                                  i1l3402 0DCE                                    i1l3170 00C3  
                                  i1l3162 00B3                                    i1l3154 0095  
                                  i1l3066 0F0C                                    i1l3058 079C  
                                  i1l3322 0D76                                    i1l3314 0D68  
                                  i1l3404 0DD3                                    i1l3172 00CA  
                                  i1l3148 0075                                    i1l3092 0F73  
                                  i1l3324 0D79                                    i1l3340 0DA6  
                                  i1l3422 0E1B                                    i1l3414 0DF8  
                                  i1l3086 0F6D                                    i1l3078 0F49  
                                  i1l3326 0D7C                                    i1l3238 05EB  
                                  i1l3246 05F5                                    i1l2712 0A39  
                                  i1l2800 065D                                    i1l3176 00D5  
                                  i1l3088 0F70                                    i1l3336 0D98  
                                  i1l3418 0E08                                    i1l3290 04D0  
                                  i1l2810 0673                                    i1l3186 00FE  
                                  i1l3276 047D                                    i1l2708 0A32  
                                  i1l2812 067F                                    i1l2804 0665  
                                  i1l3196 0119                                    i1l3188 0104  
                                  i1l3516 0A5E                                    i1l3620 03D2  
                                  i1l3612 03C2                                    i1l2910 0EA3  
                                  i1l3278 0495                                    i1l2750 0F8C  
                                  i1l2830 07B8                                    i1l2822 0699  
                                  i1l2726 09AC                                    i1l3550 0AD0  
                                  i1l3518 0A67                                    i1l3288 04C4  
                                  i1l3376 0B0E                                    i1l2680 0B74  
                                  i1l2736 0905                                    i1l3640 03FC  
                                  i1l2922 0EC7                                    i1l2930 0EE0  
                                  i1l2770 0FFB                                    i1l2850 07E7  
                                  i1l2842 07D2                                    i1l2834 07C2  
                                  i1l2818 068D                                    i1l4194 0B9F  
                                  i1l3570 0CEB                                    i1l2932 0EE4  
                                  i1l2940 0EFD                                    i1l3388 0B3A  
                                  i1l4196 0BB9                                    i1l3548 0ACE  
                                  i1l3628 03DE                                    i1l3820 01A5  
                                  i1l2678 0B6C                                    i1l2758 0F9C  
                                  i1l2846 07DC                                    i1l2838 07CD  
                                  i1l3662 0419                                    i1l3830 01BA  
                                  i1l3814 0190                                    i1l2768 0FE3  
                                  i1l2688 0993                                    i1l2856 07F2  
                                  i1l2792 0643                                    i1l2880 0B7F  
                                  i1l3568 0CE8                                    i1l3808 018A  
                                  i1l2698 097A                                    i1l2858 07F8  
                                  i1l2786 0636                                    i1l2882 0B82  
                                  i1l2868 0A6C                                    i1l2876 0A80  
                                  i1l2884 0B89                                    i1l2892 0B96  
                                  i1l2948 09BC                                    i1l3668 043C  
                                  i1l3844 01D7                                    i1l3836 01C1  
                                  u204_25 0D2D                                    i1l2966 0E44  
                                  i1l2798 0651                                    i1l2886 0B90  
                                  i1l3870 021E                                    i1l2888 0B93  
                                  i1l3872 022D                                    i1l3864 0205  
                                  _LED_On 0985                                    i1l3794 0172  
                                  i1l3786 0165                                    i1l2998 0D23  
                                  u170_25 0B45                                    u243_25 046F  
                                  u171_25 0B4B                                    u172_25 0B53  
         ??_APP_DeviceCustomHIDInitialize 007D                                    u267_25 0CB1  
                                  u277_25 03E1                           i1_BUTTON_Enable 08D3  
            i1USBTransferOnePacket@handle 0079                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 016F                           USBDeviceTasks@i 0064  
             USBStdFeatureReqHandler@pUEP 0058                  USBTransferOnePacket@data 00E1  
              USBCtrlTrfInHandler@lastDTS 0075                           ??_USBDeviceInit 00E0  
                          __CFG_STVREN$ON 0000                         _USBEnableEndpoint 0A2A  
         __size_of_USBStdGetStatusHandler 0054                                    _memset 09B7  
                      ?_USBEnableEndpoint 0077                        __end_of_ADC_Enable 0919  
           __size_of_USBTransferOnePacket 0081                           ??_BUTTON_Enable 00E0  
                     ??_USBEnableEndpoint 0078                               _CtrlTrfData 0048  
                          ??i1_LED_Enable 0070                      _controlTransferState 006D  
              ??_APP_DeviceCustomHIDTasks 00EB                         _SYSTEM_Initialize 0A8C  
                 __end_of__initialization 002C                i1USBTransferOnePacket@data 0071  
                           _ADC_Read10bit 0AD5                        ?_SYSTEM_Initialize 0070  
                __size_of_USBStallHandler 0025                       __size_of_USBSuspend 001F  
                    i1USBDeviceInit@i_901 0073                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 0A4A                             __end_of_sd000 02FF  
                           __end_of_sd001 0275                             __end_of_sd002 02A3  
                     ??_SYSTEM_Initialize 00E1                                 LED_On@led 0070  
        __size_of_USBCtrlEPAllowDataStage 005C                           _active_protocol 01BB  
                            ??_LED_Enable 00E0             __size_of_USBConfigureEndpoint 0041  
                 __end_ofi1_USBDeviceInit 045F               __end_of_USBCtrlTrfInHandler 0E1E  
                 ?_APP_LEDUpdateUSBStatus 0070                              ??_LED_Toggle 00E0  
                 __end_ofi1_BUTTON_Enable 08DD                  ??_USBCtrlTrfSetupHandler 005E  
                 _USBTicksSinceSuspendEnd 01B9                          ?_USBDeviceAttach 0070  
               __end_of_SYSTEM_Initialize 0AB0                          _BUTTON_IsPressed 093D  
           __size_of_ADC_SetConfiguration 000B                    _USBStdGetStatusHandler 0C4E  
                              __pbssBANK0 0066                                __pbssBANK1 00EE  
                              __pbssBANK2 0160                                __pbssBANK3 01A0  
                    __end_ofi1_ADC_Enable 090B                                   ?_LED_On 0070  
                          ?_ADC_Read10bit 00E0                        __end_of_LED_Enable 093D  
                     i1ADC_Enable@channel 0070               __size_of_USBWakeFromSuspend 0020  
                             _pBDTEntryIn 0066          __end_of_USBCtrlEPServiceComplete 0628  
   __end_of_APP_DeviceCustomHIDInitialize 09EE    __size_of_APP_DeviceCustomHIDInitialize 001D  
           _APP_DeviceCustomHIDInitialize 09D1                        __end_of_LED_Toggle 0C05  
                              __pmaintext 0919                      USBCtrlTrfRxService@i 0074  
                   i1BUTTON_Enable@button 0070                             LED_Enable@led 00E0  
                         __CFG_PLLMULT$4x 0000            __end_of_APP_LEDUpdateUSBStatus 07FE  
                              __pintentry 0004                                   ?_memset 0070  
                              _device_dsc 02E9                          _USBCtrlEPService 0CA2  
                              _ep_data_in 01AE               __end_of_USBCtrlTrfRxService 04FF  
             APP_DeviceCustomHIDTasks@pot 00EC                        _USBCheckStdRequest 0D52  
                       _configDescriptor1 02A3                                   _LED_Off 096C  
             __end_of_USBCtrlTrfTxService 0F01                       _USBStdSetCfgHandler 0730  
                                 u269_2m0 0CE1                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 007F                                   _UIEbits 0E92  
                                 _UIRbits 0E90              __size_ofi1_SYSTEM_Initialize 0022  
                         __size_of_LED_On 0019                  ??i1_USBTransferOnePacket 0074  
          APP_LEDUpdateUSBStatus@ledCount 01A8           ??_USBIncrement1msInternalTimers 0070  
                    ?_USBStdSetCfgHandler 0070               __size_of_USBCheckHIDRequest 0087  
                       __end_of_hid_rpt01 02E9                __size_of_USBEnableEndpoint 0020  
     i1ADC_SetConfiguration@configuration 0070         ADC_SetConfiguration@configuration 00E0  
                    ??_USBCheckStdRequest 005D             __size_of_USBCtrlTrfOutHandler 0037  
                        _ToSendDataBuffer 0120                          ??_USBDeviceTasks 0062  
                       ??_USBStallHandler 0070                      __end_ofi1_LED_Enable 09B7  
                        ?i1_USBDeviceInit 0070                           __size_of_memset 001A  
               __end_of_configDescriptor1 02CC                                   __ptext1 02FF  
                                 __ptext2 09EE                                   __ptext3 0A8C  
                                 __ptext4 0927                                   __ptext5 08F3  
                                 __ptext6 08E8                                   __ptext7 090B  
                                 __ptext8 04FF                                   __ptext9 06AF  
                                 _inPipes 0167               _USBDeferOUTDataStagePackets 01B6  
                            ??_USBSuspend 0056                          ?i1_BUTTON_Enable 0070  
                      __end_of_USB_CD_Ptr 0241                __size_of_SYSTEM_Initialize 0024  
         __size_of_USBCtrlTrfSetupHandler 0049                                   clrloop0 08CE  
                    end_of_initialization 002C                           ??_ADC_Read10bit 00E2  
                      __end_of_USB_SD_Ptr 023F                       _pBDTEntryEP0OutNext 006A  
                                 memset@c 0070                                   memset@n 0072  
                                 memset@p 0075                           _USB1msTickCount 01A0  
                ?_USBStdFeatureReqHandler 0070                     ??_USBStdSetCfgHandler 0056  
                      __end_of_USBSuspend 0A2A                   _USBCtrlEPAllowDataStage 0CF6  
                ??i1_ADC_SetConfiguration 0070                              __pstringtext 0239  
                _USBCtrlEPServiceComplete 0596                _USBStatusStageEnabledFlag1 01B7  
              _USBStatusStageEnabledFlag2 01B8                        USBEnableEndpoint@p 007A  
                               _PORTAbits 000C                           i1LED_Enable@led 0070  
                           LED_Toggle@led 00E1                                 _TRISBbits 008D  
                               _TRISCbits 008E                     __size_ofi1_ADC_Enable 000D  
                      _ReceivedDataBuffer 00A0                        _BothEP0OutUOWNsSet 01B2  
               USBStdSetCfgHandler@i_1253 0059                 USBConfigureEndpoint@EPNum 0075  
              ?_USBCtrlEPAllowStatusStage 0070       USER_USB_CALLBACK_EVENT_HANDLER@size 0054  
                               _USTATcopy 006F                  i1USBTransferOnePacket@ep 0078  
            __end_of_USBTransferOnePacket 0730                            __end_of_LED_On 099E  
         __size_ofi1_USBTransferOnePacket 0080                        __CFG_PLLEN$ENABLED 0000  
                      USBDeviceInit@i_901 00E3                    _USBCtrlTrfSetupHandler 0C05  
                __end_of_BUTTON_IsPressed 0954                     __end_of_USBDeviceInit 03B4  
   __end_of_USBIncrement1msInternalTimers 096C    __size_of_USBIncrement1msInternalTimers 0018  
           _USBIncrement1msInternalTimers 0954                                LED_Off@led 0070  
                            i1_ADC_Enable 08FE                            __end_of_memset 09D1  
                       _USBBusIsSuspended 01B4                       start_initialization 0012  
                 ?_USBStdGetStatusHandler 0070                     __end_of_BUTTON_Enable 08FE  
           USBCtrlTrfRxService@byteToRead 0075              __end_of_USBConfigureEndpoint 0B7E  
         __end_of_USBStdFeatureReqHandler 0156                                  ??_LED_On 0070  
       __end_of_USBCtrlEPAllowStatusStage 0E8E                  __end_of_USBCtrlEPService 0CF6  
               ??_USBCtrlEPAllowDataStage 0073                            USBDeviceInit@i 00E4  
                          USBDeviceInit@p 00E1                     __size_ofi1_LED_Enable 0019  
                  _pBDTEntryEP0OutCurrent 006E                   USBTransferOnePacket@dir 00E0  
                 USBTransferOnePacket@len 00E3              __end_of_ADC_SetConfiguration 08F3  
         __size_ofi1_ADC_SetConfiguration 000B                       _USBStdGetDscHandler 0F01  
       __size_of_APP_DeviceCustomHIDTasks 0097                 ?_APP_DeviceCustomHIDTasks 0070  
                                ??_memset 0074                       i1_SYSTEM_Initialize 0A6A  
                  i1_USBTransferOnePacket 0F80                    BUTTON_IsPressed@button 00E0  
                  _USBActiveConfiguration 00EE            __end_of_USBStdGetStatusHandler 0CA2  
               i1USBTransferOnePacket@dir 0070                 i1USBTransferOnePacket@len 0073  
                                ?_LED_Off 0070                                 ___latbits 0002  
                           __pcstackBANK0 0050                             __pcstackBANK1 00E0  
            __size_of_USBCtrlTrfInHandler 006C                      ?_USBStdGetDscHandler 0070  
                    ?i1_SYSTEM_Initialize 0070                              i1_LED_Enable 099E  
              __end_of_USBWakeFromSuspend 0A6A                           _USBStallHandler 0AB0  
                            _pBDTEntryOut 01A4                  __size_of_USBDeviceAttach 001D  
                               _hid_rpt01 02CC                                 _idle_rate 01BC  
                               __pswtext1 081A                                 __pswtext2 0824  
                               __pswtext3 0800                                 __pswtext4 082E  
                               __pswtext5 0838                                 __pswtext6 0842  
                    _USBTransferOnePacket 06AF              __end_of_USBCtrlTrfOutHandler 0B3D  
                   ??_USBStdGetDscHandler 0070                               _ep_data_out 01B0  
                  i1_ADC_SetConfiguration 08DD              __size_of_USBCtrlTrfRxService 00A0  
           USBConfigureEndpoint@direction 0070                     ??i1_SYSTEM_Initialize 0071  
            __size_of_USBCtrlTrfTxService 0073                                  _LATCbits 010E  
              __end_of_USBCheckHIDRequest 06AF                ??_USBCtrlEPServiceComplete 0075  
                               clear_ram0 08CD                                  _PIE2bits 0092  
                                _PIR2bits 0012                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 01B5               __size_of_USBCheckStdRequest 0060  
                                _UCONbits 0E8E                      _USBConfigureEndpoint 0B3D  
        __size_of_USBStdFeatureReqHandler 0126                                _ADCON0bits 009D  
                   ?_USBTransferOnePacket 00E0                         _SYS_InterruptHigh 0004  
                            _RemoteWakeup 01B3                          __size_of_LED_Off 0019  
                      ?_SYS_InterruptHigh 0070                  __size_ofi1_USBDeviceInit 00AB  
                 __end_of_USBStallHandler 0AD5                      _ADC_SetConfiguration 08E8  
             ??_USBCtrlEPAllowStatusStage 0070               __end_of_USBStdSetCfgHandler 07B1  
                              _ADC_Enable 090B                       ??_SYS_InterruptHigh 0065  
                   __end_of_ADC_Read10bit 0B06                  __size_ofi1_BUTTON_Enable 000A  
                      __end_of_device_dsc 02FB                  ??_APP_LEDUpdateUSBStatus 0071  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0071  
                  USBTransferOnePacket@ep 00E8                                  _SetupPkt 0040  
                   ?_USBConfigureEndpoint 0070                         ??_USBDeviceAttach 00E0  
                       ?_BUTTON_IsPressed 0070                 __end_of_SYS_InterruptHigh 0010  
                      ??_BUTTON_IsPressed 00E0                                _ANSELBbits 018D  
                 __size_of_USBDeviceTasks 00E3                                  __ptext10 0BBF  
                                __ptext11 093D                                  __ptext20 0CA2  
                                __ptext12 0AD5                                  __ptext21 0C05  
                                __ptext30 0B7E                                  __ptext22 0596  
                                __ptext14 0156                                  __ptext31 0A6A  
                                __ptext23 0CF6                                  __ptext15 03B4  
                                __ptext40 09D1                                  __ptext32 099E  
                                __ptext24 0D52                                  __ptext16 0A4A  
                                __ptext41 0F80                                  __ptext33 08D3  
                                __ptext25 0730                                  __ptext17 0A0B  
                                __ptext42 0A2A                                  __ptext34 08DD  
                                __ptext26 09B7                                  __ptext18 0AB0  
                                __ptext43 0B3D                                  __ptext35 08FE  
                                __ptext27 0C4E                                  __ptext19 0954  
                                __ptext44 0B06                                  __ptext36 0628  
                                __ptext28 0F01                                  __ptext45 045F  
                                __ptext37 07B1                                  __ptext29 0030  
                                __ptext46 0E1E                                  __ptext38 0985  
                                __ptext47 0DB2                                  __ptext39 096C  
                                __ptext48 0E8E                     ?_ADC_SetConfiguration 0070  
        __end_of_APP_DeviceCustomHIDTasks 0596            __end_of_USBCtrlTrfSetupHandler 0C4E  
                           __size_of_main 000E                         ?_USBCtrlEPService 0070  
                      ??_USBCtrlEPService 005F                       _USBCtrlTrfInHandler 0DB2  
                     BUTTON_Enable@button 00E0                                  _outPipes 0160  
                    _USBCtrlTrfOutHandler 0B06                                  int$flags 007E  
                 ?i1_USBTransferOnePacket 0070                 _USBCtrlEPAllowStatusStage 0E1E  
                              _LED_Enable 0927                    ??_USBTransferOnePacket 00E4  
          ?_APP_DeviceCustomHIDInitialize 0070                                _LED_Toggle 0BBF  
               _USBDeferStatusStagePacket 016C                          i1USBDeviceInit@i 0074  
                        i1USBDeviceInit@p 0071                                _INTCONbits 000B  
                i1SYSTEM_Initialize@state 0071                      ?_USBCtrlTrfInHandler 0070  
           USBCtrlTrfTxService@byteToSend 0072                                  memset@p1 0076  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 005B  
                                intlevel1 0000                               ?_ADC_Enable 0070  
                  __size_of_USBDeviceInit 00B5   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0BBF  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0041          ?_USER_USB_CALLBACK_EVENT_HANDLER 0050  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007E           _USER_USB_CALLBACK_EVENT_HANDLER 0B7E  
                       ??i1_USBDeviceInit 0070                      ADC_Read10bit@channel 00E6  
                       __CFG_CLKOUTEN$OFF 0000           __size_of_APP_LEDUpdateUSBStatus 004D  
          __end_ofi1_USBTransferOnePacket 1000                    ??_USBConfigureEndpoint 0071  
                   ?_USBCtrlTrfOutHandler 0070                    __size_of_BUTTON_Enable 000B  
                       ??i1_BUTTON_Enable 0070                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 045F                        _USBWakeFromSuspend 0A4A  
                 _USBStdFeatureReqHandler 0030                       _USBCtrlTrfTxService 0E8E  
              __size_of_SYS_InterruptHigh 000C                         ADC_Enable@channel 00E0  
                     ?_USBWakeFromSuspend 0070                   ?i1_ADC_SetConfiguration 0070  
                   ??_USBCtrlTrfInHandler 0073                     _USBAlternateInterface 00EF  
                  ??_ADC_SetConfiguration 00E0                       USBEnableEndpoint@ep 007C  
                         _endpoint_number 016E                       ADC_Read10bit@result 00E4  
                    ?_USBCtrlTrfRxService 0070                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070              _USBStatusStageTimeoutCounter 016D  
                    ??_USBWakeFromSuspend 0056                USBTransferOnePacket@handle 00E9  
                              _USB_CD_Ptr 023F                               _USBInHandle 01AA  
                _APP_DeviceCustomHIDTasks 04FF  
